name: Next.js Testing & Quality Assurance

on:
  push:
    branches: [master, main, develop]
    paths:
      - 'nextjs/**'
      - '.github/workflows/nextjs-testing.yml'
  pull_request:
    branches: [master, main, develop]
    paths:
      - 'nextjs/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  NEXTJS_DIR: './nextjs'

jobs:
  # ==================== LINTING ====================
  lint:
    name: ESLint & Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.NEXTJS_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NEXTJS_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: TypeScript type check
        run: npm run type-check

  # ==================== UNIT TESTS ====================
  unit-tests:
    name: Unit Tests (Jest)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.NEXTJS_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NEXTJS_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ${{ env.NEXTJS_DIR }}/coverage/coverage-final.json
          flags: nextjs-unit
          name: nextjs-unit-tests
          fail_ci_if_error: false

      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit
          path: ${{ env.NEXTJS_DIR }}/coverage
          retention-days: 30

      - name: Check coverage thresholds
        run: npm run test:coverage -- --passWithNoTests

  # ==================== E2E TESTS ====================
  e2e-tests:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.NEXTJS_DIR }}

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NEXTJS_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Start backend services
        run: |
          cd ../backend
          npm ci
          npm run start:test &
          sleep 10
        env:
          NODE_ENV: test

      - name: Run E2E tests
        run: npx playwright test --project=${{ matrix.browser }}
        env:
          CI: true

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: ${{ env.NEXTJS_DIR }}/playwright-report
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.browser }}
          path: ${{ env.NEXTJS_DIR }}/test-results
          retention-days: 7

  # ==================== ACCESSIBILITY TESTS ====================
  accessibility:
    name: Accessibility Testing (Axe-core)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.NEXTJS_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NEXTJS_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run accessibility tests
        run: npm run test -- --testNamePattern="accessibility|a11y" --coverage=false

      - name: Generate accessibility report
        if: always()
        run: |
          npm run test -- --testNamePattern="accessibility|a11y" --json --outputFile=accessibility-report.json || true

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: ${{ env.NEXTJS_DIR }}/accessibility-report.json
          retention-days: 30

  # ==================== HIPAA COMPLIANCE TESTS ====================
  hipaa-compliance:
    name: HIPAA Compliance Testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.NEXTJS_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NEXTJS_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run HIPAA compliance tests
        run: npm run test -- --testNamePattern="HIPAA|compliance" --coverage=false

      - name: Check for PHI in localStorage
        run: |
          npm run test -- --testNamePattern="PHI|protected health information" --coverage=false

      - name: Verify audit logging
        run: |
          npm run test -- --testNamePattern="audit" --coverage=false

  # ==================== SECURITY SCANNING ====================
  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.NEXTJS_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NEXTJS_DIR }}/package-lock.json

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Check for secrets in code
        uses: trufflesecurity/trufflehog@main
        with:
          path: ${{ env.NEXTJS_DIR }}
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

  # ==================== PERFORMANCE TESTING (Lighthouse CI) ====================
  lighthouse:
    name: Lighthouse CI Performance
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.NEXTJS_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NEXTJS_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: '${{ env.NEXTJS_DIR }}/lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

  # ==================== BUILD & BUNDLE SIZE ====================
  build:
    name: Build & Bundle Analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.NEXTJS_DIR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NEXTJS_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Analyze bundle size
        uses: andresz1/size-limit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: ${{ env.NEXTJS_DIR }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: ${{ env.NEXTJS_DIR }}/.next
          retention-days: 7

  # ==================== TEST SUMMARY ====================
  test-summary:
    name: Test Summary Report
    needs: [lint, unit-tests, e2e-tests, accessibility, hipaa-compliance, security]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate test summary
        run: |
          echo "# Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Linting: ${{ needs.lint.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- E2E Tests: ${{ needs.e2e-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility: ${{ needs.accessibility.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- HIPAA Compliance: ${{ needs.hipaa-compliance.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Security: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `## 🧪 Test Results

            | Test Suite | Status |
            |------------|--------|
            | Linting | ${{ needs.lint.result }} |
            | Unit Tests | ${{ needs.unit-tests.result }} |
            | E2E Tests | ${{ needs.e2e-tests.result }} |
            | Accessibility | ${{ needs.accessibility.result }} |
            | HIPAA Compliance | ${{ needs.hipaa-compliance.result }} |
            | Security | ${{ needs.security.result }} |

            [View detailed results](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
