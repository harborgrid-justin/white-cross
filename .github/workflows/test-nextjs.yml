name: Next.js Tests

on:
  push:
    branches: [master, main, develop]
    paths:
      - 'nextjs/**'
      - '.github/workflows/test-nextjs.yml'
  pull_request:
    branches: [master, main, develop]
    paths:
      - 'nextjs/**'

defaults:
  run:
    working-directory: nextjs

jobs:
  lint-and-type-check:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run TypeScript type check
        run: npm run type-check

  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --coverage --maxWorkers=2

      - name: Generate coverage report
        run: npm run test:coverage -- --silent

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./nextjs/coverage/lcov.info
          flags: nextjs-unit
          name: nextjs-unit-coverage
          fail_ci_if_error: false

      - name: Check coverage thresholds
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            echo "Coverage summary:"
            cat coverage/coverage-summary.json
          fi

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            nextjs/coverage/
            nextjs/test-results/
          retention-days: 7

  e2e-tests:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run E2E tests
        run: npx playwright test --project=${{ matrix.browser }} --reporter=html,json
        env:
          CI: true

      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: nextjs/playwright-report/
          retention-days: 7

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.browser }}
          path: nextjs/test-results/
          retention-days: 7

  e2e-mobile:
    name: E2E Mobile Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        device: ['Mobile Chrome', 'Mobile Safari']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium webkit

      - name: Run mobile E2E tests
        run: npx playwright test --project='${{ matrix.device }}' --reporter=html,json
        env:
          CI: true

      - name: Upload mobile test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-test-results-${{ matrix.device }}
          path: nextjs/playwright-report/
          retention-days: 7

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run accessibility tests
        run: npm test -- --testNamePattern="accessibility|a11y" --coverage=false

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for known vulnerabilities
        run: npm audit --audit-level=high

  test-build:
    name: Test Production Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [lint-and-type-check, unit-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3001/api/v1
          NEXT_PUBLIC_GRAPHQL_URL: http://localhost:3001/graphql
          NODE_ENV: production

      - name: Check build output
        run: |
          if [ ! -d ".next" ]; then
            echo "Build directory not found"
            exit 1
          fi
          echo "Build completed successfully"

  report-status:
    name: Report Test Status
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, unit-tests, e2e-tests, accessibility-tests]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "Lint & Type Check: ${{ needs.lint-and-type-check.result }}"
          echo "Unit Tests: ${{ needs.unit-tests.result }}"
          echo "E2E Tests: ${{ needs.e2e-tests.result }}"
          echo "Accessibility Tests: ${{ needs.accessibility-tests.result }}"

      - name: Post status comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const results = {
              'Lint & Type Check': '${{ needs.lint-and-type-check.result }}',
              'Unit Tests': '${{ needs.unit-tests.result }}',
              'E2E Tests': '${{ needs.e2e-tests.result }}',
              'Accessibility Tests': '${{ needs.accessibility-tests.result }}'
            };

            const body = Object.entries(results)
              .map(([name, result]) => {
                const emoji = result === 'success' ? '✅' : result === 'failure' ? '❌' : '⚠️';
                return `${emoji} **${name}**: ${result}`;
              })
              .join('\n');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Test Results\n\n${body}`
            });
