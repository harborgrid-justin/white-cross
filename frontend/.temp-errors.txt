
> white-cross-frontend@1.0.0 type-check
> tsc || true

src/bootstrap.ts(88,25): error TS2554: Expected 0 arguments, but got 1.
src/bootstrap.ts(91,20): error TS2339: Property 'refreshToken' does not exist on type 'typeof CsrfProtection'.
src/components/development/examples/ReduxIntegrationDemo.tsx(39,27): error TS7018: Object literal's property 'data' implicitly has an 'any[]' type.
src/components/development/examples/ReduxIntegrationDemo.tsx(41,27): error TS7018: Object literal's property 'lowStock' implicitly has an 'any[]' type.
src/components/development/examples/ReduxIntegrationDemo.tsx(41,41): error TS7018: Object literal's property 'expired' implicitly has an 'any[]' type.
src/components/development/examples/ReduxIntegrationDemo.tsx(45,72): error TS2339: Property 'loading' does not exist on type 'unknown'.
src/components/development/examples/ReduxIntegrationDemo.tsx(46,68): error TS2339: Property 'loading' does not exist on type 'unknown'.
src/components/development/navigation/examples.tsx(254,61): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(254,79): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(255,53): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(259,73): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(338,64): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(346,64): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(397,18): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(397,36): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(400,18): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(426,10): error TS2304: Cannot find name 'user'.
src/components/development/navigation/examples.tsx(431,33): error TS2304: Cannot find name 'user'.
src/components/features/health-records/components/tabs/RecordsTab.tsx(111,68): error TS2304: Cannot find name 'user'.
src/components/features/health-records/components/tabs/RecordsTab.tsx(115,42): error TS2304: Cannot find name 'user'.
src/components/features/health-records/components/tabs/RecordsTab.tsx(135,20): error TS2304: Cannot find name 'user'.
src/components/features/health-records/components/tabs/VitalsTab.tsx(100,11): error TS2353: Object literal may only specify known properties, and 'recordDate' does not exist in type 'VitalSigns'.
src/components/features/health-records/components/tabs/VitalsTab.tsx(370,46): error TS2339: Property 'recordDate' does not exist on type 'VitalSigns'.
src/components/features/health-records/components/tabs/VitalsTab.tsx(408,39): error TS2339: Property 'recordDate' does not exist on type 'VitalSigns'.
src/components/features/settings/components/tabs/AuditLogsTab.tsx(28,26): error TS2339: Property 'logs' does not exist on type 'AuditLog[]'.
src/components/features/settings/components/tabs/BackupsTab.tsx(41,29): error TS2339: Property 'backups' does not exist on type 'BackupLog[]'.
src/components/features/settings/components/tabs/DistrictsTab.tsx(54,31): error TS2339: Property 'districts' does not exist on type 'District[]'.
src/components/features/settings/components/tabs/IntegrationsTab.tsx(36,32): error TS2339: Property 'data' does not exist on type 'IntegrationListResponse'.
src/components/features/settings/components/tabs/IntegrationsTab.tsx(47,30): error TS2339: Property 'data' does not exist on type 'IntegrationStatisticsResponse'.
src/components/features/settings/components/tabs/IntegrationsTab.tsx(80,31): error TS2339: Property 'data' does not exist on type '{ result: ConnectionTestResult; }'.
src/components/features/settings/components/tabs/IntegrationsTab.tsx(98,31): error TS2339: Property 'data' does not exist on type '{ result: SyncResult; }'.
src/components/features/settings/components/tabs/LicensesTab.tsx(31,30): error TS2339: Property 'licenses' does not exist on type 'License[]'.
src/components/features/settings/components/tabs/OverviewTab.tsx(56,84): error TS7018: Object literal's property 'districts' implicitly has an 'any[]' type.
src/components/features/settings/components/tabs/OverviewTab.tsx(57,82): error TS7018: Object literal's property 'schools' implicitly has an 'any[]' type.
src/components/features/settings/components/tabs/OverviewTab.tsx(62,37): error TS2339: Property 'total' does not exist on type 'User[] | { total: number; }'.
  Property 'total' does not exist on type 'User[]'.
src/components/features/settings/components/tabs/OverviewTab.tsx(63,45): error TS2339: Property 'districts' does not exist on type 'District[] | { districts: any[]; }'.
  Property 'districts' does not exist on type 'District[]'.
src/components/features/settings/components/tabs/OverviewTab.tsx(64,42): error TS2339: Property 'schools' does not exist on type 'School[] | { schools: any[]; }'.
  Property 'schools' does not exist on type 'School[]'.
src/components/features/settings/components/tabs/SchoolsTab.tsx(53,29): error TS2339: Property 'schools' does not exist on type 'School[]'.
src/components/features/settings/components/tabs/SchoolsTab.tsx(64,36): error TS2339: Property 'districts' does not exist on type 'District[]'.
src/components/features/settings/components/tabs/TrainingTab.tsx(31,23): error TS2339: Property 'data' does not exist on type 'TrainingModule[]'.
src/components/layout/AppLayout.tsx(168,62): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(170,7): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(385,24): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(385,42): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(391,29): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(392,29): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(393,29): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(394,29): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(395,29): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(399,51): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(401,26): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(409,36): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(409,55): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(411,22): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(411,44): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(419,36): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(419,55): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(421,22): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(421,44): error TS2304: Cannot find name 'user'.
src/components/layout/AppLayout.tsx(427,28): error TS2304: Cannot find name 'logout'.
src/components/services/audit/AuditService.ts(65,29): error TS2673: Constructor of class 'AuditService' is private and only accessible within the class declaration.
src/config/apolloClient.ts(164,34): error TS2339: Property 'operationName' does not exist on type 'unknown'.
src/config/apolloClient.ts(206,32): error TS2339: Property 'operationName' does not exist on type 'unknown'.
src/guards/navigationGuards.tsx(148,12): error TS2304: Cannot find name 'loading'.
src/guards/navigationGuards.tsx(148,24): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(159,9): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(159,15): error TS2304: Cannot find name 'loading'.
src/guards/navigationGuards.tsx(161,9): error TS2304: Cannot find name 'loading'.
src/guards/navigationGuards.tsx(165,10): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(170,15): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(194,11): error TS2304: Cannot find name 'loading'.
src/guards/navigationGuards.tsx(198,12): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(202,45): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(206,19): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(207,21): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(220,17): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(221,19): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(248,11): error TS2304: Cannot find name 'loading'.
src/guards/navigationGuards.tsx(252,12): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(257,53): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(261,19): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(262,21): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(275,17): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(318,15): error TS18004: No value exists in scope for the shorthand property 'user'. Either declare one or provide an initializer.
src/guards/navigationGuards.tsx(354,11): error TS2304: Cannot find name 'user'.
src/guards/navigationGuards.tsx(475,21): error TS2693: 'UserRole' only refers to a type, but is being used as a value here.
src/guards/navigationGuards.tsx(475,53): error TS2693: 'UserRole' only refers to a type, but is being used as a value here.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(26,5): error TS2322: Type '((data: Partial<AdminUser>) => Promise<User>) | MutationFunction<AdminUser, Partial<AdminUser>>' is not assignable to type 'MutationFunction<User, Partial<AdminUser>>'.
  Type 'MutationFunction<AdminUser, Partial<AdminUser>>' is not assignable to type 'MutationFunction<User, Partial<AdminUser>>'.
    Type 'AdminUser' is missing the following properties from type 'User': role, isActive
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(27,68): error TS2345: Argument of type 'Partial<AdminUser>' is not assignable to parameter of type '{ email: string; password: string; firstName: string; lastName: string; role: "ADMIN" | "NURSE" | "SCHOOL_ADMIN" | "DISTRICT_ADMIN" | "COUNSELOR" | "VIEWER"; schoolId?: string; districtId?: string; }'.
  Type 'Partial<AdminUser>' is missing the following properties from type '{ email: string; password: string; firstName: string; lastName: string; role: "ADMIN" | "NURSE" | "SCHOOL_ADMIN" | "DISTRICT_ADMIN" | "COUNSELOR" | "VIEWER"; schoolId?: string; districtId?: string; }': password, role
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(29,5): error TS2322: Type '((data: AdminUser, variables: Partial<AdminUser>, onMutateResult: unknown, context: MutationFunctionContext) => unknown) | ((data: User) => void)' is not assignable to type '(data: User, variables: Partial<AdminUser>, onMutateResult: unknown, context: MutationFunctionContext) => unknown'.
  Type '(data: AdminUser, variables: Partial<AdminUser>, onMutateResult: unknown, context: MutationFunctionContext) => unknown' is not assignable to type '(data: User, variables: Partial<AdminUser>, onMutateResult: unknown, context: MutationFunctionContext) => unknown'.
    Types of parameters 'data' and 'data' are incompatible.
      Type 'User' is missing the following properties from type 'AdminUser': username, displayName, status, roles, and 3 more.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(47,5): error TS2322: Type '({ id, data }: { id: string; data: Partial<AdminUser>; }) => Promise<User>' is not assignable to type 'MutationFunction<AdminUser, { id: string; data: Partial<AdminUser>; }>'.
  Type 'Promise<User>' is not assignable to type 'Promise<AdminUser>'.
    Type 'User' is missing the following properties from type 'AdminUser': username, displayName, status, roles, and 3 more.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(89,5): error TS2322: Type '((id: string) => Promise<User>) | MutationFunction<AdminUser, string>' is not assignable to type 'MutationFunction<User, string>'.
  Type 'MutationFunction<AdminUser, string>' is not assignable to type 'MutationFunction<User, string>'.
    Type 'AdminUser' is missing the following properties from type 'User': role, isActive
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(91,74): error TS2353: Object literal may only specify known properties, and 'status' does not exist in type '{ email?: string; role?: "ADMIN" | "NURSE" | "SCHOOL_ADMIN" | "DISTRICT_ADMIN" | "COUNSELOR" | "VIEWER"; schoolId?: string; districtId?: string; firstName?: string; lastName?: string; }'.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(93,5): error TS2322: Type '((data: AdminUser, variables: string, onMutateResult: unknown, context: MutationFunctionContext) => unknown) | ((data: User, id: string) => void)' is not assignable to type '(data: User, variables: string, onMutateResult: unknown, context: MutationFunctionContext) => unknown'.
  Type '(data: AdminUser, variables: string, onMutateResult: unknown, context: MutationFunctionContext) => unknown' is not assignable to type '(data: User, variables: string, onMutateResult: unknown, context: MutationFunctionContext) => unknown'.
    Types of parameters 'data' and 'data' are incompatible.
      Type 'User' is missing the following properties from type 'AdminUser': username, displayName, status, roles, and 3 more.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(111,5): error TS2322: Type '(id: string) => Promise<User>' is not assignable to type 'MutationFunction<AdminUser, string>'.
  Type 'Promise<User>' is not assignable to type 'Promise<AdminUser>'.
    Type 'User' is missing the following properties from type 'AdminUser': username, displayName, status, roles, and 3 more.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(113,74): error TS2353: Object literal may only specify known properties, and 'status' does not exist in type '{ email?: string; role?: "ADMIN" | "NURSE" | "SCHOOL_ADMIN" | "DISTRICT_ADMIN" | "COUNSELOR" | "VIEWER"; schoolId?: string; districtId?: string; firstName?: string; lastName?: string; }'.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(263,84): error TS2345: Argument of type '{ key: string; value: any; }' is not assignable to parameter of type 'ConfigurationData'.
  Property 'category' is missing in type '{ key: string; value: any; }' but required in type 'ConfigurationData'.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(264,14): error TS2352: Conversion of type 'SystemConfiguration' to type 'SystemSetting' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'SystemConfiguration' is missing the following properties from type 'SystemSetting': type, isReadOnly
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(285,84): error TS2345: Argument of type 'Partial<SystemSetting>' is not assignable to parameter of type 'ConfigurationData'.
  Property 'key' is optional in type 'Partial<SystemSetting>' but required in type 'ConfigurationData'.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(286,14): error TS2352: Conversion of type 'SystemConfiguration' to type 'SystemSetting' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'SystemConfiguration' is missing the following properties from type 'SystemSetting': type, isReadOnly
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(328,99): error TS2322: Type 'Partial<SystemConfiguration>' is not assignable to type 'string'.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(329,14): error TS2352: Conversion of type 'import("F:/temp/white-cross/frontend/src/types/administration").SystemConfiguration' to type 'import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemConfiguration' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'SystemConfiguration' is missing the following properties from type 'SystemConfiguration': module, name, settings, isEnabled, and 2 more.
src/hooks/domains/administration/mutations/useAdministrationMutations.ts(416,17): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(94,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<AdminUser[], Error, AdminUser[], readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Type '() => Promise<User[]>' is not assignable to type 'QueryFunction<AdminUser[], readonly unknown[]>'.
      Type 'Promise<User[]>' is not assignable to type 'AdminUser[] | Promise<AdminUser[]>'.
        Type 'Promise<User[]>' is not assignable to type 'Promise<AdminUser[]>'.
          Type 'User[]' is not assignable to type 'AdminUser[]'.
            Type 'User' is missing the following properties from type 'AdminUser': username, displayName, status, roles, and 3 more.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<AdminUser[], Error, AdminUser[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<User[]>' is not assignable to type 'unique symbol | QueryFunction<AdminUser[], readonly unknown[], never>'.
      Type '() => Promise<User[]>' is not assignable to type 'QueryFunction<AdminUser[], readonly unknown[], never>'.
        Type 'Promise<User[]>' is not assignable to type 'AdminUser[] | Promise<AdminUser[]>'.
          Type 'Promise<User[]>' is not assignable to type 'Promise<AdminUser[]>'.
            Type 'User[]' is not assignable to type 'AdminUser[]'.
              Type 'User' is missing the following properties from type 'AdminUser': username, displayName, status, roles, and 3 more.
  Overload 3 of 3, '(options: UseQueryOptions<AdminUser[], Error, AdminUser[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<AdminUser[], Error>', gave the following error.
    Type '() => Promise<User[]>' is not assignable to type 'unique symbol | QueryFunction<AdminUser[], readonly unknown[], never>'.
      Type '() => Promise<User[]>' is not assignable to type 'QueryFunction<AdminUser[], readonly unknown[], never>'.
        Type 'Promise<User[]>' is not assignable to type 'AdminUser[] | Promise<AdminUser[]>'.
          Type 'Promise<User[]>' is not assignable to type 'Promise<AdminUser[]>'.
            Type 'User[]' is not assignable to type 'AdminUser[]'.
              Type 'User' is missing the following properties from type 'AdminUser': username, displayName, status, roles, and 3 more.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(110,57): error TS2339: Property 'getUserById' does not exist on type 'AdministrationApi'.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(125,63): error TS2339: Property 'getUserById' does not exist on type 'AdministrationApi'.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(141,63): error TS2339: Property 'getUserById' does not exist on type 'AdministrationApi'.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(157,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(188,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(205,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[] | (SystemSettings & any[])' return type.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(222,14): error TS2352: Conversion of type 'SystemConfiguration' to type 'SystemSetting' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'SystemConfiguration' is missing the following properties from type 'SystemSetting': type, isReadOnly
src/hooks/domains/administration/queries/useAdministrationQueries.ts(236,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<SystemConfiguration[], Error, SystemConfiguration[], readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Type '() => Promise<SystemConfiguration[]>' is not assignable to type 'QueryFunction<SystemConfiguration[], readonly unknown[]>'.
      Type 'Promise<SystemConfiguration[]>' is not assignable to type 'SystemConfiguration[] | Promise<SystemConfiguration[]>'.
        Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").SystemConfiguration[]>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemConfiguration[]>'.
          Type 'import("F:/temp/white-cross/frontend/src/types/administration").SystemConfiguration[]' is not assignable to type 'import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemConfiguration[]'.
            Type 'SystemConfiguration' is missing the following properties from type 'SystemConfiguration': module, name, settings, isEnabled, and 2 more.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<SystemConfiguration[], Error, SystemConfiguration[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<SystemConfiguration[]>' is not assignable to type 'unique symbol | QueryFunction<SystemConfiguration[], readonly unknown[], never>'.
      Type '() => Promise<SystemConfiguration[]>' is not assignable to type 'QueryFunction<SystemConfiguration[], readonly unknown[], never>'.
        Type 'Promise<SystemConfiguration[]>' is not assignable to type 'SystemConfiguration[] | Promise<SystemConfiguration[]>'.
          Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").SystemConfiguration[]>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemConfiguration[]>'.
            Type 'import("F:/temp/white-cross/frontend/src/types/administration").SystemConfiguration[]' is not assignable to type 'import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemConfiguration[]'.
              Type 'SystemConfiguration' is missing the following properties from type 'SystemConfiguration': module, name, settings, isEnabled, and 2 more.
  Overload 3 of 3, '(options: UseQueryOptions<SystemConfiguration[], Error, SystemConfiguration[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<SystemConfiguration[]>' is not assignable to type 'unique symbol | QueryFunction<SystemConfiguration[], readonly unknown[], never>'.
      Type '() => Promise<SystemConfiguration[]>' is not assignable to type 'QueryFunction<SystemConfiguration[], readonly unknown[], never>'.
        Type 'Promise<SystemConfiguration[]>' is not assignable to type 'SystemConfiguration[] | Promise<SystemConfiguration[]>'.
          Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").SystemConfiguration[]>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemConfiguration[]>'.
            Type 'import("F:/temp/white-cross/frontend/src/types/administration").SystemConfiguration[]' is not assignable to type 'import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemConfiguration[]'.
              Type 'SystemConfiguration' is missing the following properties from type 'SystemConfiguration': module, name, settings, isEnabled, and 2 more.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(253,14): error TS2352: Conversion of type 'import("F:/temp/white-cross/frontend/src/types/administration").SystemConfiguration' to type 'import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemConfiguration' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'SystemConfiguration' is missing the following properties from type 'SystemConfiguration': module, name, settings, isEnabled, and 2 more.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(268,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<AuditLog[], Error, AuditLog[], readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<AuditLog[], Error>', gave the following error.
    Type '() => Promise<AuditLog[]>' is not assignable to type 'QueryFunction<AuditLog[], readonly unknown[]>'.
      Type 'Promise<AuditLog[]>' is not assignable to type 'AuditLog[] | Promise<AuditLog[]>'.
        Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").AuditLog[]>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog[]>'.
          Type 'import("F:/temp/white-cross/frontend/src/types/administration").AuditLog[]' is not assignable to type 'import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog[]'.
            Type 'AuditLog' is missing the following properties from type 'AuditLog': resource, details, timestamp, severity, category
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<AuditLog[], Error, AuditLog[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<AuditLog[]>' is not assignable to type 'unique symbol | QueryFunction<AuditLog[], readonly unknown[], never>'.
      Type '() => Promise<AuditLog[]>' is not assignable to type 'QueryFunction<AuditLog[], readonly unknown[], never>'.
        Type 'Promise<AuditLog[]>' is not assignable to type 'AuditLog[] | Promise<AuditLog[]>'.
          Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").AuditLog[]>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog[]>'.
            Type 'import("F:/temp/white-cross/frontend/src/types/administration").AuditLog[]' is not assignable to type 'import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog[]'.
              Type 'AuditLog' is missing the following properties from type 'AuditLog': resource, details, timestamp, severity, category
  Overload 3 of 3, '(options: UseQueryOptions<AuditLog[], Error, AuditLog[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<AuditLog[], Error>', gave the following error.
    Type '() => Promise<AuditLog[]>' is not assignable to type 'unique symbol | QueryFunction<AuditLog[], readonly unknown[], never>'.
      Type '() => Promise<AuditLog[]>' is not assignable to type 'QueryFunction<AuditLog[], readonly unknown[], never>'.
        Type 'Promise<AuditLog[]>' is not assignable to type 'AuditLog[] | Promise<AuditLog[]>'.
          Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").AuditLog[]>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog[]>'.
            Type 'import("F:/temp/white-cross/frontend/src/types/administration").AuditLog[]' is not assignable to type 'import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog[]'.
              Type 'AuditLog' is missing the following properties from type 'AuditLog': resource, details, timestamp, severity, category
src/hooks/domains/administration/queries/useAdministrationQueries.ts(283,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<AuditLog, Error, AuditLog, readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<AuditLog, Error>', gave the following error.
    Type '() => Promise<AuditLog>' is not assignable to type 'QueryFunction<AuditLog, readonly unknown[]>'.
      Type 'Promise<AuditLog>' is not assignable to type 'AuditLog | Promise<AuditLog>'.
        Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").AuditLog>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog>'.
          Type 'AuditLog' is missing the following properties from type 'AuditLog': resource, details, timestamp, severity, category
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<AuditLog, Error, AuditLog, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<AuditLog>' is not assignable to type 'unique symbol | QueryFunction<AuditLog, readonly unknown[], never>'.
      Type '() => Promise<AuditLog>' is not assignable to type 'QueryFunction<AuditLog, readonly unknown[], never>'.
        Type 'Promise<AuditLog>' is not assignable to type 'AuditLog | Promise<AuditLog>'.
          Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").AuditLog>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog>'.
            Type 'AuditLog' is missing the following properties from type 'AuditLog': resource, details, timestamp, severity, category
  Overload 3 of 3, '(options: UseQueryOptions<AuditLog, Error, AuditLog, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<AuditLog, Error>', gave the following error.
    Type '() => Promise<AuditLog>' is not assignable to type 'unique symbol | QueryFunction<AuditLog, readonly unknown[], never>'.
      Type '() => Promise<AuditLog>' is not assignable to type 'QueryFunction<AuditLog, readonly unknown[], never>'.
        Type 'Promise<AuditLog>' is not assignable to type 'AuditLog | Promise<AuditLog>'.
          Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").AuditLog>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").AuditLog>'.
            Type 'AuditLog' is missing the following properties from type 'AuditLog': resource, details, timestamp, severity, category
src/hooks/domains/administration/queries/useAdministrationQueries.ts(284,82): error TS2353: Object literal may only specify known properties, and 'id' does not exist in type '{ page?: number; limit?: number; userId?: string; entityType?: string; entityId?: string; action?: string; startDate?: string; endDate?: string; }'.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(300,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(331,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(347,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<SystemHealth, Error, SystemHealth, readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Type '() => Promise<SystemHealth>' is not assignable to type 'QueryFunction<SystemHealth, readonly unknown[]>'.
      Type 'Promise<SystemHealth>' is not assignable to type 'SystemHealth | Promise<SystemHealth>'.
        Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").SystemHealth>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemHealth>'.
          Type 'SystemHealth' is missing the following properties from type 'SystemHealth': uptime, version, environment, services, lastChecked
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<SystemHealth, Error, SystemHealth, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<SystemHealth>' is not assignable to type 'unique symbol | QueryFunction<SystemHealth, readonly unknown[], never>'.
      Type '() => Promise<SystemHealth>' is not assignable to type 'QueryFunction<SystemHealth, readonly unknown[], never>'.
        Type 'Promise<SystemHealth>' is not assignable to type 'SystemHealth | Promise<SystemHealth>'.
          Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").SystemHealth>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemHealth>'.
            Type 'SystemHealth' is missing the following properties from type 'SystemHealth': uptime, version, environment, services, lastChecked
  Overload 3 of 3, '(options: UseQueryOptions<SystemHealth, Error, SystemHealth, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<SystemHealth, Error>', gave the following error.
    Type '() => Promise<SystemHealth>' is not assignable to type 'unique symbol | QueryFunction<SystemHealth, readonly unknown[], never>'.
      Type '() => Promise<SystemHealth>' is not assignable to type 'QueryFunction<SystemHealth, readonly unknown[], never>'.
        Type 'Promise<SystemHealth>' is not assignable to type 'SystemHealth | Promise<SystemHealth>'.
          Type 'Promise<import("F:/temp/white-cross/frontend/src/types/administration").SystemHealth>' is not assignable to type 'Promise<import("F:/temp/white-cross/frontend/src/hooks/domains/administration/config").SystemHealth>'.
            Type 'SystemHealth' is missing the following properties from type 'SystemHealth': uptime, version, environment, services, lastChecked
src/hooks/domains/administration/queries/useAdministrationQueries.ts(364,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(382,67): error TS2353: Object literal may only specify known properties, and 'status' does not exist in type '{ page?: number; limit?: number; search?: string; role?: string; isActive?: boolean; }'.
src/hooks/domains/administration/queries/useAdministrationQueries.ts(384,72): error TS2353: Object literal may only specify known properties, and 'sortBy' does not exist in type '{ page?: number; limit?: number; userId?: string; entityType?: string; entityId?: string; action?: string; startDate?: string; endDate?: string; }'.
src/hooks/domains/appointments/queries/useAppointments.ts(211,20): error TS2339: Property 'previousAppointments' does not exist on type 'unknown'.
src/hooks/domains/appointments/queries/useAppointments.ts(212,17): error TS2339: Property 'previousAppointments' does not exist on type 'unknown'.
src/hooks/domains/appointments/queries/useAppointments.ts(212,48): error TS7031: Binding element 'queryKey' implicitly has an 'any' type.
src/hooks/domains/appointments/queries/useAppointments.ts(212,58): error TS7031: Binding element 'data' implicitly has an 'any' type.
src/hooks/domains/compliance/queries/useComplianceQueries.ts(52,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/compliance/queries/useComplianceQueries.ts(100,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/compliance/queries/useComplianceQueries.ts(117,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/compliance/queries/useComplianceQueries.ts(148,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/compliance/queries/useComplianceQueries.ts(165,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/compliance/queries/useComplianceQueries.ts(197,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/dashboard/queries/useDashboardQueries.ts(73,9): error TS7018: Object literal's property 'recentActivity' implicitly has an 'any[]' type.
src/hooks/domains/dashboard/queries/useDashboardQueries.ts(74,9): error TS7018: Object literal's property 'notifications' implicitly has an 'any[]' type.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(40,30): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(80,38): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(89,40): error TS2304: Cannot find name 'dashboardApi'.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(127,11): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(132,29): error TS7018: Object literal's property 'records' implicitly has an 'any[]' type.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(167,11): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(167,90): error TS7018: Object literal's property 'medications' implicitly has an 'any[]' type.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(168,11): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(172,28): error TS7018: Object literal's property 'schedule' implicitly has an 'any[]' type.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(207,42): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(242,39): error TS2304: Cannot find name 'incidentapiServiceRegistry'.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(247,27): error TS7018: Object literal's property 'incidents' implicitly has an 'any[]' type.
src/hooks/domains/dashboard/queries/useStatisticsQueries.ts(330,11): error TS7018: Object literal's property 'error' implicitly has an 'any' type.
src/hooks/domains/documents/mutations/useDocumentMutations.ts(647,7): error TS7018: Object literal's property 'tags' implicitly has an 'any[]' type.
src/hooks/domains/documents/mutations/useDocumentMutations.ts(653,7): error TS7018: Object literal's property 'permissions' implicitly has an 'any[]' type.
src/hooks/domains/documents/mutations/useDocumentMutations.ts(685,7): error TS7018: Object literal's property 'permissions' implicitly has an 'any[]' type.
src/hooks/domains/health/healthRecordsCleanup.ts(69,43): error TS2304: Cannot find name 'healthRecordsKeys'.
src/hooks/domains/health/queries/useHealthRecords.ts(45,3): error TS2724: '"@/services"' has no exported member named 'CreateHealthRecordRequest'. Did you mean 'CreateHealthRecordData'?
src/hooks/domains/health/queries/useHealthRecords.ts(46,3): error TS2724: '"@/services"' has no exported member named 'CreateAllergyRequest'. Did you mean 'CreateUserRequest'?
src/hooks/domains/health/queries/useHealthRecords.ts(47,3): error TS2724: '"@/services"' has no exported member named 'CreateChronicConditionRequest'. Did you mean 'CreateChronicConditionData'?
src/hooks/domains/health/queries/useHealthRecords.ts(48,3): error TS2724: '"@/services"' has no exported member named 'CreateVaccinationRequest'. Did you mean 'CreateIntegrationRequest'?
src/hooks/domains/health/queries/useHealthRecords.ts(49,3): error TS2724: '"@/services"' has no exported member named 'HealthRecordsApiError'. Did you mean 'HealthRecordsApi'?
src/hooks/domains/health/queries/useHealthRecords.ts(50,3): error TS2614: Module '"@/services"' has no exported member 'CircuitBreakerError'. Did you mean to use 'import CircuitBreakerError from "@/services"' instead?
src/hooks/domains/health/queries/useHealthRecords.ts(103,57): error TS2339: Property 'type' does not exist on type 'HealthRecord'.
src/hooks/domains/health/queries/useHealthRecords.ts(190,15): error TS2339: Property 'statusCode' does not exist on type 'unknown'.
src/hooks/domains/health/queries/useHealthRecords.ts(197,15): error TS2339: Property 'statusCode' does not exist on type 'unknown'.
src/hooks/domains/health/queries/useHealthRecords.ts(203,34): error TS2339: Property 'message' does not exist on type 'unknown'.
src/hooks/domains/health/queries/useHealthRecords.ts(203,71): error TS2339: Property 'message' does not exist on type 'unknown'.
src/hooks/domains/health/queries/useHealthRecords.ts(205,15): error TS2339: Property 'message' does not exist on type 'unknown'.
src/hooks/domains/health/queries/useHealthRecords.ts(226,15): error TS2339: Property 'statusCode' does not exist on type 'unknown'.
src/hooks/domains/health/queries/useHealthRecords.ts(226,60): error TS2339: Property 'statusCode' does not exist on type 'unknown'.
src/hooks/domains/health/queries/useHealthRecords.ts(245,27): error TS2554: Expected 1 arguments, but got 0.
src/hooks/domains/health/queries/useHealthRecords.ts(428,22): error TS2339: Property 'type' does not exist on type 'HealthRecord'.
src/hooks/domains/health/queries/useHealthRecords.ts(2023,48): error TS2339: Property 'studentId' does not exist on type 'HealthRecordFilters'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(318,77): error TS2339: Property 'action' does not exist on type 'unknown'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(320,77): error TS2339: Property 'action' does not exist on type 'unknown'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(357,77): error TS2339: Property 'action' does not exist on type 'unknown'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(411,33): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(412,68): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(429,44): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(437,13): error TS7006: Parameter 'action' implicitly has an 'any' type.
src/hooks/domains/incidents/FollowUpActionContext.tsx(454,32): error TS7006: Parameter 'a' implicitly has an 'any' type.
src/hooks/domains/incidents/FollowUpActionContext.tsx(455,35): error TS7006: Parameter 'a' implicitly has an 'any' type.
src/hooks/domains/incidents/FollowUpActionContext.tsx(456,34): error TS7006: Parameter 'a' implicitly has an 'any' type.
src/hooks/domains/incidents/FollowUpActionContext.tsx(457,34): error TS7006: Parameter 'a' implicitly has an 'any' type.
src/hooks/domains/incidents/FollowUpActionContext.tsx(512,23): error TS2339: Property 'action' does not exist on type 'unknown'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(523,23): error TS2339: Property 'action' does not exist on type 'unknown'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(583,12): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(589,34): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(595,28): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(655,30): error TS7006: Parameter 'action' implicitly has an 'any' type.
src/hooks/domains/incidents/FollowUpActionContext.tsx(665,30): error TS7006: Parameter 'action' implicitly has an 'any' type.
src/hooks/domains/incidents/FollowUpActionContext.tsx(682,12): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(684,36): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(686,6): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(694,12): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(696,48): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(700,58): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/FollowUpActionContext.tsx(702,6): error TS2304: Cannot find name 'user'.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(208,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(220,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(281,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(293,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(341,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(353,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(422,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(432,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(489,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(499,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(552,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(562,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(631,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(641,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(698,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(708,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(769,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/incidents/mutations/useOptimisticIncidents.ts(779,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/inventory/useInventoryManagement.ts(42,64): error TS2339: Property 'updateInventory' does not exist on type 'MedicationsApi'.
src/hooks/domains/medications/mutations/useMedicationAdministration.ts(80,9): error TS2353: Object literal may only specify known properties, and 'scheduledTime' does not exist in type 'MedicationAdministrationData'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(122,23): error TS2339: Property 'isOnline' does not exist on type '{ queue: QueuedOperation[]; isProcessing: boolean; addToQueue: (operation: Omit<QueuedOperation, "timestamp">) => void; processQueue: () => Promise<...>; clearQueue: () => void; queueLength: number; }'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(123,11): error TS2339: Property 'logAdministrationAttempt' does not exist on type '{ checkSafety: (medicationId: string, studentId: string) => Promise<MedicationSafetyCheck>; validateDosage: (dosage: number, maxDosage: number) => boolean; checkAllergies: (medicationId: string, studentId: string) => Promise<...>; }'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(123,37): error TS2339: Property 'logAdministrationSuccess' does not exist on type '{ checkSafety: (medicationId: string, studentId: string) => Promise<MedicationSafetyCheck>; validateDosage: (dosage: number, maxDosage: number) => boolean; checkAllergies: (medicationId: string, studentId: string) => Promise<...>; }'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(123,63): error TS2339: Property 'logAdministrationError' does not exist on type '{ checkSafety: (medicationId: string, studentId: string) => Promise<MedicationSafetyCheck>; validateDosage: (dosage: number, maxDosage: number) => boolean; checkAllergies: (medicationId: string, studentId: string) => Promise<...>; }'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(129,14): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(132,22): error TS2345: Argument of type 'unknown' is not assignable to parameter of type 'SetStateAction<AdministrationSession>'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(136,41): error TS2339: Property 'studentId' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(137,24): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(137,84): error TS2339: Property 'studentId' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(137,103): error TS2339: Property 'medicationId' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(141,44): error TS2339: Property 'studentId' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(141,63): error TS2339: Property 'medicationId' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(142,24): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(142,87): error TS2339: Property 'studentId' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(142,106): error TS2339: Property 'medicationId' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(148,69): error TS2339: Property 'sessionId' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(241,14): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(246,23): error TS2339: Property 'valid' does not exist on type 'unknown'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(260,34): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(267,31): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(274,26): error TS2345: Argument of type 'AdministrationRecord' is not assignable to parameter of type 'Omit<QueuedOperation, "timestamp">'.
  Type 'AdministrationRecord' is missing the following properties from type 'Omit<QueuedOperation, "timestamp">': type, data, id
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(279,14): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(321,11): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(342,11): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(363,11): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(375,20): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(384,20): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(393,20): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(407,5): error TS2322: Type 'UseMutationResult<unknown, Error, string, unknown>' is not assignable to type 'UseMutationResult<AdministrationSession, Error, string, unknown>'.
  Type 'Override<MutationObserverIdleResult<unknown, Error, string, unknown>, { mutate: UseMutateFunction<unknown, Error, string, unknown>; }> & { ...; }' is not assignable to type 'UseMutationResult<AdministrationSession, Error, string, unknown>'.
    Type 'Override<MutationObserverIdleResult<unknown, Error, string, unknown>, { mutate: UseMutateFunction<unknown, Error, string, unknown>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<AdministrationSession, Error, string, unknown>, { mutate: UseMutateFunction<AdministrationSession, Error, string, unknown>; }> & { ...; }'.
      Type 'Override<MutationObserverIdleResult<unknown, Error, string, unknown>, { mutate: UseMutateFunction<unknown, Error, string, unknown>; }> & { ...; }' is not assignable to type '{ mutateAsync: UseMutateAsyncFunction<AdministrationSession, Error, string, unknown>; }'.
        Types of property 'mutateAsync' are incompatible.
          Type 'UseMutateAsyncFunction<unknown, Error, string, unknown>' is not assignable to type 'UseMutateAsyncFunction<AdministrationSession, Error, string, unknown>'.
            Type '{}' is missing the following properties from type 'AdministrationSession': sessionId, prescriptionId, studentId, medicationId, and 12 more.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(409,5): error TS2322: Type 'UseMutationResult<unknown, Error, FiveRightsData, unknown>' is not assignable to type 'UseMutationResult<FiveRightsVerificationResult, Error, FiveRightsData, unknown>'.
  Type 'Override<MutationObserverIdleResult<unknown, Error, FiveRightsData, unknown>, { mutate: UseMutateFunction<unknown, Error, FiveRightsData, unknown>; }> & { ...; }' is not assignable to type 'UseMutationResult<FiveRightsVerificationResult, Error, FiveRightsData, unknown>'.
    Type 'Override<MutationObserverIdleResult<unknown, Error, FiveRightsData, unknown>, { mutate: UseMutateFunction<unknown, Error, FiveRightsData, unknown>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<FiveRightsVerificationResult, Error, FiveRightsData, unknown>, { ...; }> & { ...; }'.
      Type 'Override<MutationObserverIdleResult<unknown, Error, FiveRightsData, unknown>, { mutate: UseMutateFunction<unknown, Error, FiveRightsData, unknown>; }> & { ...; }' is not assignable to type '{ mutateAsync: UseMutateAsyncFunction<FiveRightsVerificationResult, Error, FiveRightsData, unknown>; }'.
        Types of property 'mutateAsync' are incompatible.
          Type 'UseMutateAsyncFunction<unknown, Error, FiveRightsData, unknown>' is not assignable to type 'UseMutateAsyncFunction<FiveRightsVerificationResult, Error, FiveRightsData, unknown>'.
            Type '{}' is missing the following properties from type 'FiveRightsVerificationResult': valid, errors, warnings, criticalWarnings, and 2 more.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(411,5): error TS2322: Type 'UseMutationResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>' is not assignable to type 'UseMutationResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>'.
  Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>, { mutate: UseMutateFunction<unknown, Error, { ...; }, unknown>; }> & { ...; }' is not assignable to type 'UseMutationResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>'.
    Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>, { mutate: UseMutateFunction<unknown, Error, { ...; }, unknown>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>, { ...; }> & { ...; }'.
      Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>, { mutate: UseMutateFunction<unknown, Error, { ...; }, unknown>; }> & { ...; }' is not assignable to type '{ mutateAsync: UseMutateAsyncFunction<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>; }'.
        Types of property 'mutateAsync' are incompatible.
          Type 'UseMutateAsyncFunction<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>' is not assignable to type 'UseMutateAsyncFunction<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>'.
            Type '{}' is missing the following properties from type 'AdministrationLog': id, prescriptionId, studentId, medicationId, and 9 more.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(412,5): error TS2322: Type 'UseMutationResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>' is not assignable to type 'UseMutationResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>'.
  Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>, { mutate: UseMutateFunction<unknown, Error, { ...; }, unknown>; }> & { ...; }' is not assignable to type 'UseMutationResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>'.
    Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>, { mutate: UseMutateFunction<unknown, Error, { ...; }, unknown>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>, { ...; }> & { ...; }'.
      Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>, { mutate: UseMutateFunction<unknown, Error, { ...; }, unknown>; }> & { ...; }' is not assignable to type '{ mutateAsync: UseMutateAsyncFunction<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>; }'.
        Types of property 'mutateAsync' are incompatible.
          Type 'UseMutateAsyncFunction<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>' is not assignable to type 'UseMutateAsyncFunction<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; notes?: string; }, unknown>'.
            Type '{}' is missing the following properties from type 'AdministrationLog': id, prescriptionId, studentId, medicationId, and 9 more.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(413,5): error TS2322: Type 'UseMutationResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>' is not assignable to type 'UseMutationResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>'.
  Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>, { mutate: UseMutateFunction<...>; }> & { ...; }' is not assignable to type 'UseMutationResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>'.
    Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>, { mutate: UseMutateFunction<...>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>, { ...; }> & { ...; }'.
      Type 'Override<MutationObserverIdleResult<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>, { mutate: UseMutateFunction<...>; }> & { ...; }' is not assignable to type '{ mutateAsync: UseMutateAsyncFunction<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>; }'.
        Types of property 'mutateAsync' are incompatible.
          Type 'UseMutateAsyncFunction<unknown, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>' is not assignable to type 'UseMutateAsyncFunction<AdministrationLog, Error, { prescriptionId: string; scheduledTime: string; reason: string; clinicalRationale: string; }, unknown>'.
            Type '{}' is missing the following properties from type 'AdministrationLog': id, prescriptionId, studentId, medicationId, and 9 more.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(446,20): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationAdministrationService.ts(457,20): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(31,15): error TS2339: Property 'name' does not exist on type 'MedicationFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(44,14): error TS2339: Property 'name' does not exist on type 'MedicationFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(44,27): error TS2339: Property 'name' does not exist on type 'MedicationFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(81,15): error TS2339: Property 'description' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(85,15): error TS2339: Property 'actionsTaken' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(89,15): error TS2339: Property 'occurredAt' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(94,14): error TS2339: Property 'description' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(94,34): error TS2339: Property 'description' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(98,14): error TS2339: Property 'description' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(98,34): error TS2339: Property 'description' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(102,14): error TS2339: Property 'actionsTaken' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(102,35): error TS2339: Property 'actionsTaken' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(106,14): error TS2339: Property 'actionsTaken' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(106,35): error TS2339: Property 'actionsTaken' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(111,14): error TS2339: Property 'occurredAt' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(112,42): error TS2339: Property 'occurredAt' does not exist on type 'AdverseReactionFormData'.
src/hooks/domains/medications/mutations/useMedicationFormValidation.ts(232,3): error TS2739: Type '{ errors: FormErrors; validateMedicationForm: (data: MedicationFormData) => FormErrors; validateAdverseReactionForm: (data: AdverseReactionFormData) => FormErrors; validateInventoryForm: (data: InventoryFormData) => FormErrors; clearErrors: () => void; setFieldError: (field: string, error: string) => void; displayVa...' is missing the following properties from type 'UseFormValidationReturn': validateStudentMedicationForm, validateFiveRights
src/hooks/domains/medications/mutations/useMedicationMutations.ts(137,71): error TS2345: Argument of type 'MedicationFormData' is not assignable to parameter of type 'CreateMedicationRequest'.
  Property 'name' is missing in type 'MedicationFormData' but required in type 'CreateMedicationRequest'.
src/hooks/domains/medications/mutations/useMedicationMutations.ts(192,64): error TS2339: Property 'administer' does not exist on type 'MedicationsApi'.
src/hooks/domains/medications/mutations/useMedicationMutations.ts(241,86): error TS2345: Argument of type 'AdverseReactionFormData' is not assignable to parameter of type 'AdverseReactionData'.
  Type 'AdverseReactionFormData' is missing the following properties from type 'AdverseReactionData': actionTaken, reportedAt
src/hooks/domains/medications/mutations/useMedicationMutations.ts(264,11): error TS2367: This comparison appears to be unintentional because the types 'Priority' and '"severe"' have no overlap.
src/hooks/domains/medications/mutations/useMedicationMutations.ts(264,46): error TS2367: This comparison appears to be unintentional because the types 'Priority' and '"life-threatening"' have no overlap.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(25,26): error TS2724: '"@/services"' has no exported member named 'CreateMedicationRequest'. Did you mean 'CreateIntegrationRequest'?
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(25,51): error TS2724: '"@/services"' has no exported member named 'CreateInventoryRequest'. Did you mean 'CreateInventoryItemRequest'?
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(25,75): error TS2724: '"@/services"' has no exported member named 'UpdateInventoryRequest'. Did you mean 'UpdateInventoryItemRequest'?
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(27,3): error TS2724: '"@/types/medications"' has no exported member named 'Medication'. Did you mean 'MedicationTab'?
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(28,3): error TS2459: Module '"@/types/medications"' declares 'StudentMedication' locally, but it is not exported.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(30,3): error TS2724: '"@/types/medications"' has no exported member named 'InventoryItem'. Did you mean 'InventoryFilters'?
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(31,3): error TS2724: '"@/types/medications"' has no exported member named 'AdverseReaction'. Did you mean 'AdverseReactionData'?
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(178,52): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(219,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(231,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(253,35): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(284,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(296,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(313,33): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(343,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(355,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(372,54): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(413,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(423,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(441,37): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(489,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(499,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(517,57): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(519,5): error TS2322: Type '(newLog: MedicationAdministrationData) => Promise<{ updateId: string; studentId: any; tempId?: undefined; tempEntity?: undefined; } | { updateId: string; tempId: string; tempEntity: MedicationLog; studentId: string; }>' is not assignable to type '(variables: MedicationAdministrationData, context: MutationFunctionContext) => MedicationAdministrationContext | Promise<...>'.
  Type 'Promise<{ updateId: string; studentId: any; tempId?: undefined; tempEntity?: undefined; } | { updateId: string; tempId: string; tempEntity: MedicationLog; studentId: string; }>' is not assignable to type 'MedicationAdministrationContext | Promise<MedicationAdministrationContext>'.
    Type 'Promise<{ updateId: string; studentId: any; tempId?: undefined; tempEntity?: undefined; } | { updateId: string; tempId: string; tempEntity: MedicationLog; studentId: string; }>' is not assignable to type 'Promise<MedicationAdministrationContext>'.
      Type '{ updateId: string; studentId: any; tempId?: undefined; tempEntity?: undefined; } | { updateId: string; tempId: string; tempEntity: MedicationLog; studentId: string; }' is not assignable to type 'MedicationAdministrationContext'.
        Type '{ updateId: string; studentId: any; tempId?: undefined; tempEntity?: undefined; }' is not assignable to type 'MedicationAdministrationContext'.
          Property 'tempId' is optional in type '{ updateId: string; studentId: any; tempId?: undefined; tempEntity?: undefined; }' but required in type 'MedicationAdministrationContext'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(576,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(586,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(603,51): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(639,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(649,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(667,35): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(696,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(706,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(723,48): error TS2304: Cannot find name 'apiServiceRegistry'.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(757,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/mutations/useOptimisticMedications.ts(767,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/medications/queries/useMedicationFormulary.ts(181,5): error TS2322: Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutationResult<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").BarcodeResult, Error, string, unknown>' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutationResult<import("F:/temp/white-cross/frontend/src/types/api").BarcodeResult, Error, string, unknown>'.
  Type 'Override<MutationObserverIdleResult<BarcodeResult, Error, string, unknown>, { mutate: UseMutateFunction<BarcodeResult, Error, string, unknown>; }> & { ...; }' is not assignable to type 'UseMutationResult<BarcodeResult, Error, string, unknown>'.
    Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").E<import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").b0<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").Barc...' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").E<import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").b0<import("F:/temp/white-cross/frontend/src/types/api").BarcodeResult, Error, string, unknown>, { ...; }>...'.
      Type 'Override<MutationObserverIdleResult<BarcodeResult, Error, string, unknown>, { mutate: UseMutateFunction<BarcodeResult, Error, string, unknown>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<BarcodeResult, Error, string, unknown>, { mutate: UseMutateFunction<BarcodeResult, Error, string, unknown>; }>'.
        Types of property 'mutate' are incompatible.
          Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutateFunction<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").BarcodeResult, Error, string, unknown>' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutateFunction<import("F:/temp/white-cross/frontend/src/types/api").BarcodeResult, Error, string, unknown>'.
            Property 'success' is missing in type 'import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").BarcodeResult' but required in type 'import("F:/temp/white-cross/frontend/src/types/api").BarcodeResult'.
src/hooks/domains/medications/queries/useMedicationFormulary.ts(182,5): error TS2322: Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutationResult<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").DrugInteraction[], Error, string[], unknown>' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutationResult<import("F:/temp/white-cross/frontend/src/types/api").DrugInteraction[], Error, string[], unknown>'.
  Type 'Override<MutationObserverIdleResult<DrugInteraction[], Error, string[], unknown>, { mutate: UseMutateFunction<DrugInteraction[], Error, string[], unknown>; }> & { ...; }' is not assignable to type 'UseMutationResult<DrugInteraction[], Error, string[], unknown>'.
    Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").E<import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").b0<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").Drug...' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").E<import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").b0<import("F:/temp/white-cross/frontend/src/types/api").DrugInteraction[], Error, string[], unknown>, { ....'.
      Type 'Override<MutationObserverIdleResult<DrugInteraction[], Error, string[], unknown>, { mutate: UseMutateFunction<DrugInteraction[], Error, string[], unknown>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<DrugInteraction[], Error, string[], unknown>, { mutate: UseMutateFunction<DrugInteraction[], Error, string[], unknown>; }>'.
        Types of property 'mutate' are incompatible.
          Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutateFunction<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").DrugInteraction[], Error, string[], unknown>' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutateFunction<import("F:/temp/white-cross/frontend/src/types/api").DrugInteraction[], Error, string[], unknown>'.
            Type 'import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").DrugInteraction[]' is not assignable to type 'import("F:/temp/white-cross/frontend/src/types/api").DrugInteraction[]'.
              Type 'DrugInteraction' is missing the following properties from type 'DrugInteraction': medicationId1, medicationId2, createdAt, updatedAt
src/hooks/domains/medications/queries/useMedicationFormulary.ts(183,5): error TS2322: Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutationResult<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").Medication, Error, any, unknown>' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutationResult<import("F:/temp/white-cross/frontend/src/types/api").Medication, Error, any, unknown>'.
  Type 'Override<MutationObserverIdleResult<Medication, Error, any, unknown>, { mutate: UseMutateFunction<Medication, Error, any, unknown>; }> & { ...; }' is not assignable to type 'UseMutationResult<Medication, Error, any, unknown>'.
    Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").E<import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").b0<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").Medi...' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").E<import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").b0<import("F:/temp/white-cross/frontend/src/types/api").Medication, Error, any, unknown>, { ...; }> & { ....'.
      Type 'Override<MutationObserverIdleResult<Medication, Error, any, unknown>, { mutate: UseMutateFunction<Medication, Error, any, unknown>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<Medication, Error, any, unknown>, { mutate: UseMutateFunction<Medication, Error, any, unknown>; }>'.
        Types of property 'mutate' are incompatible.
          Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutateFunction<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").Medication, Error, any, unknown>' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutateFunction<import("F:/temp/white-cross/frontend/src/types/api").Medication, Error, any, unknown>'.
            Type 'Medication' is missing the following properties from type 'Medication': medicationName, dosageForm
src/hooks/domains/medications/queries/useMedicationFormulary.ts(184,5): error TS2322: Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutationResult<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").Medication, Error, { id: string; data: any; }, unknown>' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutationResult<import("F:/temp/white-cross/frontend/src/types/api").Medication, Error, { id: string; data: any; }, unknown>'.
  Type 'Override<MutationObserverIdleResult<Medication, Error, { id: string; data: any; }, unknown>, { mutate: UseMutateFunction<Medication, Error, { ...; }, unknown>; }> & { ...; }' is not assignable to type 'UseMutationResult<Medication, Error, { id: string; data: any; }, unknown>'.
    Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").E<import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").b0<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").Medi...' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").E<import("F:/temp/white-cross/frontend/node_modules/@tanstack/query-core/build/modern/hydration-CeGZtiZv").b0<import("F:/temp/white-cross/frontend/src/types/api").Medication, Error, { id: string; data: any; }, un...'.
      Type 'Override<MutationObserverIdleResult<Medication, Error, { id: string; data: any; }, unknown>, { mutate: UseMutateFunction<Medication, Error, { ...; }, unknown>; }> & { ...; }' is not assignable to type 'Override<MutationObserverIdleResult<Medication, Error, { id: string; data: any; }, unknown>, { mutate: UseMutateFunction<Medication, Error, { ...; }, unknown>; }>'.
        Types of property 'mutate' are incompatible.
          Type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutateFunction<import("F:/temp/white-cross/frontend/src/services/modules/medication/api/MedicationFormularyApi").Medication, Error, { id: string; data: any; }, unknown>' is not assignable to type 'import("F:/temp/white-cross/frontend/node_modules/@tanstack/react-query/build/modern/types").UseMutateFunction<import("F:/temp/white-cross/frontend/src/types/api").Medication, Error, { id: string; data: any; }, unknown>'.
            Type 'Medication' is missing the following properties from type 'Medication': medicationName, dosageForm
src/hooks/domains/medications/queries/useMedicationQueries.ts(43,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<PaginatedResponse<Medication>, Error, PaginatedResponse<Medication>, readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationsResponse>' is not assignable to type 'QueryFunction<PaginatedResponse<Medication>, readonly unknown[]>'.
      Type 'Promise<MedicationsResponse>' is not assignable to type 'PaginatedResponse<Medication> | Promise<PaginatedResponse<Medication>>'.
        Type 'Promise<MedicationsResponse>' is not assignable to type 'Promise<PaginatedResponse<Medication>>'.
          Type 'MedicationsResponse' is missing the following properties from type 'PaginatedResponse<Medication>': data, success
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<PaginatedResponse<Medication>, Error, PaginatedResponse<Medication>, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationsResponse>' is not assignable to type 'unique symbol | QueryFunction<PaginatedResponse<Medication>, readonly unknown[], never>'.
      Type '() => Promise<MedicationsResponse>' is not assignable to type 'QueryFunction<PaginatedResponse<Medication>, readonly unknown[], never>'.
        Type 'Promise<MedicationsResponse>' is not assignable to type 'PaginatedResponse<Medication> | Promise<PaginatedResponse<Medication>>'.
          Type 'Promise<MedicationsResponse>' is not assignable to type 'Promise<PaginatedResponse<Medication>>'.
            Type 'MedicationsResponse' is missing the following properties from type 'PaginatedResponse<Medication>': data, success
  Overload 3 of 3, '(options: UseQueryOptions<PaginatedResponse<Medication>, Error, PaginatedResponse<Medication>, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationsResponse>' is not assignable to type 'unique symbol | QueryFunction<PaginatedResponse<Medication>, readonly unknown[], never>'.
      Type '() => Promise<MedicationsResponse>' is not assignable to type 'QueryFunction<PaginatedResponse<Medication>, readonly unknown[], never>'.
        Type 'Promise<MedicationsResponse>' is not assignable to type 'PaginatedResponse<Medication> | Promise<PaginatedResponse<Medication>>'.
          Type 'Promise<MedicationsResponse>' is not assignable to type 'Promise<PaginatedResponse<Medication>>'.
            Type 'MedicationsResponse' is missing the following properties from type 'PaginatedResponse<Medication>': data, success
src/hooks/domains/medications/queries/useMedicationQueries.ts(87,56): error TS2339: Property 'getByStudent' does not exist on type 'MedicationsApi'.
src/hooks/domains/medications/queries/useMedicationQueries.ts(110,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<{ inventory: MedicationInventory[]; }, Error, { inventory: MedicationInventory[]; }, readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Type '() => Promise<InventoryResponse>' is not assignable to type 'QueryFunction<{ inventory: MedicationInventory[]; }, readonly unknown[]>'.
      Type 'Promise<InventoryResponse>' is not assignable to type '{ inventory: MedicationInventory[]; } | Promise<{ inventory: MedicationInventory[]; }>'.
        Type 'Promise<InventoryResponse>' is not assignable to type 'Promise<{ inventory: MedicationInventory[]; }>'.
          Type 'InventoryResponse' is not assignable to type '{ inventory: MedicationInventory[]; }'.
            Types of property 'inventory' are incompatible.
              Type 'InventoryItem[]' is not assignable to type 'MedicationInventory[]'.
                Type 'InventoryItem' is missing the following properties from type 'MedicationInventory': medicationId, batchNumber, quantity, expirationDate
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<{ inventory: MedicationInventory[]; }, Error, { inventory: MedicationInventory[]; }, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<InventoryResponse>' is not assignable to type 'unique symbol | QueryFunction<{ inventory: MedicationInventory[]; }, readonly unknown[], never>'.
      Type '() => Promise<InventoryResponse>' is not assignable to type 'QueryFunction<{ inventory: MedicationInventory[]; }, readonly unknown[], never>'.
        Type 'Promise<InventoryResponse>' is not assignable to type '{ inventory: MedicationInventory[]; } | Promise<{ inventory: MedicationInventory[]; }>'.
          Type 'Promise<InventoryResponse>' is not assignable to type 'Promise<{ inventory: MedicationInventory[]; }>'.
            Type 'InventoryResponse' is not assignable to type '{ inventory: MedicationInventory[]; }'.
              Types of property 'inventory' are incompatible.
                Type 'InventoryItem[]' is not assignable to type 'MedicationInventory[]'.
                  Type 'InventoryItem' is missing the following properties from type 'MedicationInventory': medicationId, batchNumber, quantity, expirationDate
  Overload 3 of 3, '(options: UseQueryOptions<{ inventory: MedicationInventory[]; }, Error, { inventory: MedicationInventory[]; }, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<InventoryResponse>' is not assignable to type 'unique symbol | QueryFunction<{ inventory: MedicationInventory[]; }, readonly unknown[], never>'.
      Type '() => Promise<InventoryResponse>' is not assignable to type 'QueryFunction<{ inventory: MedicationInventory[]; }, readonly unknown[], never>'.
        Type 'Promise<InventoryResponse>' is not assignable to type '{ inventory: MedicationInventory[]; } | Promise<{ inventory: MedicationInventory[]; }>'.
          Type 'Promise<InventoryResponse>' is not assignable to type 'Promise<{ inventory: MedicationInventory[]; }>'.
            Type 'InventoryResponse' is not assignable to type '{ inventory: MedicationInventory[]; }'.
              Types of property 'inventory' are incompatible.
                Type 'InventoryItem[]' is not assignable to type 'MedicationInventory[]'.
                  Type 'InventoryItem' is missing the following properties from type 'MedicationInventory': medicationId, batchNumber, quantity, expirationDate
src/hooks/domains/medications/queries/useMedicationQueries.ts(112,69): error TS2554: Expected 0 arguments, but got 1.
src/hooks/domains/medications/queries/useMedicationQueries.ts(135,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<{ reminders: MedicationReminder[]; }, Error, { reminders: MedicationReminder[]; }, readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationReminder[]>' is not assignable to type 'QueryFunction<{ reminders: MedicationReminder[]; }, readonly unknown[]>'.
      Type 'Promise<MedicationReminder[]>' is not assignable to type '{ reminders: MedicationReminder[]; } | Promise<{ reminders: MedicationReminder[]; }>'.
        Type 'Promise<MedicationReminder[]>' is not assignable to type 'Promise<{ reminders: MedicationReminder[]; }>'.
          Property 'reminders' is missing in type 'MedicationReminder[]' but required in type '{ reminders: MedicationReminder[]; }'.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<{ reminders: MedicationReminder[]; }, Error, { reminders: MedicationReminder[]; }, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationReminder[]>' is not assignable to type 'unique symbol | QueryFunction<{ reminders: MedicationReminder[]; }, readonly unknown[], never>'.
      Type '() => Promise<MedicationReminder[]>' is not assignable to type 'QueryFunction<{ reminders: MedicationReminder[]; }, readonly unknown[], never>'.
        Type 'Promise<MedicationReminder[]>' is not assignable to type '{ reminders: MedicationReminder[]; } | Promise<{ reminders: MedicationReminder[]; }>'.
          Type 'Promise<MedicationReminder[]>' is not assignable to type 'Promise<{ reminders: MedicationReminder[]; }>'.
            Property 'reminders' is missing in type 'MedicationReminder[]' but required in type '{ reminders: MedicationReminder[]; }'.
  Overload 3 of 3, '(options: UseQueryOptions<{ reminders: MedicationReminder[]; }, Error, { reminders: MedicationReminder[]; }, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationReminder[]>' is not assignable to type 'unique symbol | QueryFunction<{ reminders: MedicationReminder[]; }, readonly unknown[], never>'.
      Type '() => Promise<MedicationReminder[]>' is not assignable to type 'QueryFunction<{ reminders: MedicationReminder[]; }, readonly unknown[], never>'.
        Type 'Promise<MedicationReminder[]>' is not assignable to type '{ reminders: MedicationReminder[]; } | Promise<{ reminders: MedicationReminder[]; }>'.
          Type 'Promise<MedicationReminder[]>' is not assignable to type 'Promise<{ reminders: MedicationReminder[]; }>'.
            Property 'reminders' is missing in type 'MedicationReminder[]' but required in type '{ reminders: MedicationReminder[]; }'.
src/hooks/domains/medications/queries/useMedicationQueries.ts(176,56): error TS2339: Property 'getUpcomingReminders' does not exist on type 'MedicationsApi'.
src/hooks/domains/medications/queries/useMedicationQueries.ts(200,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<{ reactions: AdverseReaction[]; }, Error, { reactions: AdverseReaction[]; }, readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Type '() => Promise<AdverseReaction[]>' is not assignable to type 'QueryFunction<{ reactions: AdverseReaction[]; }, readonly unknown[]>'.
      Type 'Promise<AdverseReaction[]>' is not assignable to type '{ reactions: AdverseReaction[]; } | Promise<{ reactions: AdverseReaction[]; }>'.
        Type 'Promise<AdverseReaction[]>' is not assignable to type 'Promise<{ reactions: AdverseReaction[]; }>'.
          Property 'reactions' is missing in type 'AdverseReaction[]' but required in type '{ reactions: AdverseReaction[]; }'.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<{ reactions: AdverseReaction[]; }, Error, { reactions: AdverseReaction[]; }, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<AdverseReaction[]>' is not assignable to type 'unique symbol | QueryFunction<{ reactions: AdverseReaction[]; }, readonly unknown[], never>'.
      Type '() => Promise<AdverseReaction[]>' is not assignable to type 'QueryFunction<{ reactions: AdverseReaction[]; }, readonly unknown[], never>'.
        Type 'Promise<AdverseReaction[]>' is not assignable to type '{ reactions: AdverseReaction[]; } | Promise<{ reactions: AdverseReaction[]; }>'.
          Type 'Promise<AdverseReaction[]>' is not assignable to type 'Promise<{ reactions: AdverseReaction[]; }>'.
            Property 'reactions' is missing in type 'AdverseReaction[]' but required in type '{ reactions: AdverseReaction[]; }'.
  Overload 3 of 3, '(options: UseQueryOptions<{ reactions: AdverseReaction[]; }, Error, { reactions: AdverseReaction[]; }, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<AdverseReaction[]>' is not assignable to type 'unique symbol | QueryFunction<{ reactions: AdverseReaction[]; }, readonly unknown[], never>'.
      Type '() => Promise<AdverseReaction[]>' is not assignable to type 'QueryFunction<{ reactions: AdverseReaction[]; }, readonly unknown[], never>'.
        Type 'Promise<AdverseReaction[]>' is not assignable to type '{ reactions: AdverseReaction[]; } | Promise<{ reactions: AdverseReaction[]; }>'.
          Type 'Promise<AdverseReaction[]>' is not assignable to type 'Promise<{ reactions: AdverseReaction[]; }>'.
            Property 'reactions' is missing in type 'AdverseReaction[]' but required in type '{ reactions: AdverseReaction[]; }'.
src/hooks/domains/medications/queries/useMedicationQueries.ts(231,5): error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<{ alerts: MedicationAlert[]; }, Error, { alerts: MedicationAlert[]; }, readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationAlertsResponse>' is not assignable to type 'QueryFunction<{ alerts: MedicationAlert[]; }, readonly unknown[]>'.
      Type 'Promise<MedicationAlertsResponse>' is not assignable to type '{ alerts: MedicationAlert[]; } | Promise<{ alerts: MedicationAlert[]; }>'.
        Type 'Promise<MedicationAlertsResponse>' is not assignable to type 'Promise<{ alerts: MedicationAlert[]; }>'.
          Property 'alerts' is missing in type 'MedicationAlertsResponse' but required in type '{ alerts: MedicationAlert[]; }'.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<{ alerts: MedicationAlert[]; }, Error, { alerts: MedicationAlert[]; }, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationAlertsResponse>' is not assignable to type 'unique symbol | QueryFunction<{ alerts: MedicationAlert[]; }, readonly unknown[], never>'.
      Type '() => Promise<MedicationAlertsResponse>' is not assignable to type 'QueryFunction<{ alerts: MedicationAlert[]; }, readonly unknown[], never>'.
        Type 'Promise<MedicationAlertsResponse>' is not assignable to type '{ alerts: MedicationAlert[]; } | Promise<{ alerts: MedicationAlert[]; }>'.
          Type 'Promise<MedicationAlertsResponse>' is not assignable to type 'Promise<{ alerts: MedicationAlert[]; }>'.
            Property 'alerts' is missing in type 'MedicationAlertsResponse' but required in type '{ alerts: MedicationAlert[]; }'.
  Overload 3 of 3, '(options: UseQueryOptions<{ alerts: MedicationAlert[]; }, Error, { alerts: MedicationAlert[]; }, readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Type '() => Promise<MedicationAlertsResponse>' is not assignable to type 'unique symbol | QueryFunction<{ alerts: MedicationAlert[]; }, readonly unknown[], never>'.
      Type '() => Promise<MedicationAlertsResponse>' is not assignable to type 'QueryFunction<{ alerts: MedicationAlert[]; }, readonly unknown[], never>'.
        Type 'Promise<MedicationAlertsResponse>' is not assignable to type '{ alerts: MedicationAlert[]; } | Promise<{ alerts: MedicationAlert[]; }>'.
          Type 'Promise<MedicationAlertsResponse>' is not assignable to type 'Promise<{ alerts: MedicationAlert[]; }>'.
            Property 'alerts' is missing in type 'MedicationAlertsResponse' but required in type '{ alerts: MedicationAlert[]; }'.
src/hooks/domains/medications/queries/useMedicationQueries.ts(265,56): error TS2339: Property 'getStatistics' does not exist on type 'MedicationsApi'.
src/hooks/domains/medications/queries/useMedicationQueries.ts(330,56): error TS2339: Property 'getAdministrationSchedule' does not exist on type 'MedicationsApi'.
src/hooks/domains/medications/queries/useMedicationsData.ts(71,23): error TS7018: Object literal's property 'data' implicitly has an 'any' type.
src/hooks/domains/medications/queries/useMedicationsData.ts(76,23): error TS7018: Object literal's property 'data' implicitly has an 'any[]' type.
src/hooks/domains/medications/queries/useMedicationsData.ts(89,140): error TS2554: Expected 1 arguments, but got 2.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(313,20): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(317,20): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(337,33): error TS2339: Property 'totalSpent' does not exist on type '{}'.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(338,44): error TS2339: Property 'averageProcessingTime' does not exist on type '{}'.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(339,41): error TS2339: Property 'onTimeDeliveryRate' does not exist on type '{}'.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(340,34): error TS2339: Property 'costSavings' does not exist on type '{}'.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(397,9): error TS7018: Object literal's property 'results' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(400,11): error TS7018: Object literal's property 'statuses' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(401,11): error TS7018: Object literal's property 'vendors' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(402,11): error TS7018: Object literal's property 'departments' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(403,11): error TS7018: Object literal's property 'categories' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(441,11): error TS7018: Object literal's property 'ordersOverTime' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(442,11): error TS7018: Object literal's property 'spendingOverTime' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(443,11): error TS7018: Object literal's property 'processingTimeOverTime' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(448,11): error TS7018: Object literal's property 'vendorPerformance' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/composites/usePurchaseOrderComposites.ts(449,11): error TS7018: Object literal's property 'departmentSpending' implicitly has an 'any[]' type.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(323,33): error TS2339: Property 'totalSpent' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(324,44): error TS2339: Property 'averageProcessingTime' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(345,28): error TS2339: Property 'totalOrders' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(346,31): error TS2339: Property 'approvedOrders' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(347,30): error TS2339: Property 'pendingOrders' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(348,31): error TS2339: Property 'rejectedOrders' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(351,33): error TS2339: Property 'totalSpent' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(352,40): error TS2339: Property 'averageOrderValue' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(353,40): error TS2339: Property 'budgetUtilization' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(356,42): error TS2339: Property 'averageApprovalTime' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(357,42): error TS2339: Property 'averageDeliveryTime' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(358,41): error TS2339: Property 'onTimeDeliveryRate' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(361,35): error TS2339: Property 'totalVendors' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(362,40): error TS2339: Property 'topVendorsBySpend' does not exist on type 'POAnalytics'.
src/hooks/domains/purchase-orders/queries/usePurchaseOrderQueries.ts(363,45): error TS2339: Property 'vendorPerformanceScore' does not exist on type 'POAnalytics'.
src/hooks/domains/reports/mutations/useReportsMutations.ts(42,60): error TS2339: Property 'generate' does not exist on type 'ReportsApi'.
src/hooks/domains/reports/mutations/useReportsMutations.ts(66,60): error TS2339: Property 'delete' does not exist on type 'ReportsApi'.
src/hooks/domains/reports/queries/useReportsQueries.ts(33,60): error TS2339: Property 'getAll' does not exist on type 'ReportsApi'.
src/hooks/domains/reports/queries/useReportsQueries.ts(58,60): error TS2339: Property 'getById' does not exist on type 'ReportsApi'.
src/hooks/domains/reports/queries/useReportsQueries.ts(86,60): error TS2339: Property 'getTemplates' does not exist on type 'ReportsApi'.
src/hooks/domains/reports/queries/useReportsQueries.ts(111,60): error TS2339: Property 'getGenerationStatus' does not exist on type 'ReportsApi'.
src/hooks/domains/reports/queries/useReportsQueries.ts(122,20): error TS2339: Property 'status' does not exist on type 'Query<any, Error, any, readonly unknown[]>'.
src/hooks/domains/students/composites/composite.ts(102,22): error TS2339: Property 'logDataAccess' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(116,9): error TS2345: Argument of type 'Partial<Student>' is not assignable to parameter of type 'Student'.
  Property 'id' is optional in type 'Partial<Student>' but required in type 'Student'.
src/hooks/domains/students/composites/composite.ts(120,72): error TS2353: Object literal may only specify known properties, and 'data' does not exist in type '{ id: string; student: UpdateStudentData; }'.
src/hooks/domains/students/composites/composite.ts(123,22): error TS2339: Property 'logDataAccess' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(134,36): error TS2339: Property 'checkPHIPermission' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(138,38): error TS2339: Property 'deactivateStudent' does not exist on type 'StudentMutationsResult'.
src/hooks/domains/students/composites/composite.ts(142,20): error TS2339: Property 'logDataAccess' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(150,76): error TS2345: Argument of type 'Partial<Student>' is not assignable to parameter of type 'Student'.
  Property 'id' is optional in type 'Partial<Student>' but required in type 'Student'.
src/hooks/domains/students/composites/composite.ts(154,40): error TS2551: Property 'bulkUpdateStudents' does not exist on type 'StudentMutationsResult'. Did you mean 'updateStudent'?
src/hooks/domains/students/composites/composite.ts(157,22): error TS2339: Property 'logDataAccess' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(185,51): error TS2339: Property 'sanitizeData' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(186,54): error TS2339: Property 'selectedStudents' does not exist on type '{ students: Student[]; isLoading: boolean; error: Error; filters: Partial<StudentFilters>; }'.
src/hooks/domains/students/composites/composite.ts(219,37): error TS2339: Property 'selectedStudents' does not exist on type '{ students: Student[]; isLoading: boolean; error: Error; filters: Partial<StudentFilters>; }'.
src/hooks/domains/students/composites/composite.ts(219,58): error TS7006: Parameter 's' implicitly has an 'any' type.
src/hooks/domains/students/composites/composite.ts(220,38): error TS2339: Property 'hasSelection' does not exist on type '{ students: Student[]; isLoading: boolean; error: Error; filters: Partial<StudentFilters>; }'.
src/hooks/domains/students/composites/composite.ts(221,39): error TS2339: Property 'actions' does not exist on type '{ students: Student[]; isLoading: boolean; error: Error; filters: Partial<StudentFilters>; }'.
src/hooks/domains/students/composites/composite.ts(222,40): error TS2339: Property 'actions' does not exist on type '{ students: Student[]; isLoading: boolean; error: Error; filters: Partial<StudentFilters>; }'.
src/hooks/domains/students/composites/composite.ts(227,32): error TS2339: Property 'invalidatePattern' does not exist on type '{ addStudentToCache: (student: Student) => void; removeStudentFromCache: (studentId: string) => void; updateStudentInCache: (studentId: string, data: Partial<Student>) => void; clearCache: () => void; }'.
src/hooks/domains/students/composites/composite.ts(228,26): error TS2339: Property 'prefetchData' does not exist on type '{ addStudentToCache: (student: Student) => void; removeStudentFromCache: (studentId: string) => void; updateStudentInCache: (studentId: string, data: Partial<Student>) => void; clearCache: () => void; }'.
src/hooks/domains/students/composites/composite.ts(229,27): error TS2339: Property 'getCacheStats' does not exist on type '{ addStudentToCache: (student: Student) => void; removeStudentFromCache: (studentId: string) => void; updateStudentInCache: (studentId: string, data: Partial<Student>) => void; clearCache: () => void; }'.
src/hooks/domains/students/composites/composite.ts(271,5): error TS2353: Object literal may only specify known properties, and 'sortBy' does not exist in type 'StudentFilters'.
src/hooks/domains/students/composites/composite.ts(420,18): error TS2339: Property 'logDataAccess' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(434,9): error TS2345: Argument of type 'Partial<Student>' is not assignable to parameter of type 'Student'.
  Property 'id' is optional in type 'Partial<Student>' but required in type 'Student'.
src/hooks/domains/students/composites/composite.ts(441,9): error TS2353: Object literal may only specify known properties, and 'data' does not exist in type '{ id: string; student: UpdateStudentData; }'.
src/hooks/domains/students/composites/composite.ts(445,20): error TS2339: Property 'logDataAccess' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(458,32): error TS2339: Property 'data' does not exist on type 'UseStudentDetailReturn'.
src/hooks/domains/students/composites/composite.ts(459,62): error TS2339: Property 'sanitizeData' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(494,37): error TS7006: Parameter 'record' implicitly has an 'any' type.
src/hooks/domains/students/composites/composite.ts(507,39): error TS7006: Parameter 'incident' implicitly has an 'any' type.
src/hooks/domains/students/composites/composite.ts(539,43): error TS2339: Property 'isPending' does not exist on type '{ mutate: (data: { id: string; student: UpdateStudentData; }) => void; mutateAsync: (data: { id: string; student: UpdateStudentData; }) => Promise<Student>; isLoading: boolean; error: Error; isError: boolean; isSuccess: boolean; }'.
src/hooks/domains/students/composites/composite.ts(540,29): error TS2339: Property 'deactivateStudent' does not exist on type 'StudentMutationsResult'.
src/hooks/domains/students/composites/composite.ts(541,31): error TS2339: Property 'deactivateStudent' does not exist on type 'StudentMutationsResult'.
src/hooks/domains/students/composites/composite.ts(542,35): error TS2551: Property 'reactivateStudent' does not exist on type 'StudentMutationsResult'. Did you mean 'createStudent'?
src/hooks/domains/students/composites/composite.ts(637,13): error TS2339: Property 'selectedForBulk' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(657,16): error TS2339: Property 'logDataAccess' does not exist on type '{ sanitizeStudent: (student: Student) => Student; logAccessEvent: (studentId: string, action: string) => void; isEnabled: boolean; }'.
src/hooks/domains/students/composites/composite.ts(667,34): error TS2551: Property 'bulkUpdateStudents' does not exist on type 'StudentMutationsResult'. Did you mean 'updateStudent'?
src/hooks/domains/students/composites/composite.ts(675,31): error TS7006: Parameter 'id' implicitly has an 'any' type.
src/hooks/domains/students/composites/composite.ts(675,47): error TS2339: Property 'deactivateStudent' does not exist on type 'StudentMutationsResult'.
src/hooks/domains/students/composites/composite.ts(681,31): error TS7006: Parameter 'id' implicitly has an 'any' type.
src/hooks/domains/students/composites/composite.ts(681,47): error TS2551: Property 'reactivateStudent' does not exist on type 'StudentMutationsResult'. Did you mean 'createStudent'?
src/hooks/domains/students/composites/composite.ts(691,34): error TS2551: Property 'bulkUpdateStudents' does not exist on type 'StudentMutationsResult'. Did you mean 'updateStudent'?
src/hooks/domains/students/composites/composite.ts(702,24): error TS2339: Property 'invalidatePattern' does not exist on type '{ addStudentToCache: (student: Student) => void; removeStudentFromCache: (studentId: string) => void; updateStudentInCache: (studentId: string, data: Partial<Student>) => void; clearCache: () => void; }'.
src/hooks/domains/students/composites/composite.ts(703,24): error TS2339: Property 'invalidatePattern' does not exist on type '{ addStudentToCache: (student: Student) => void; removeStudentFromCache: (studentId: string) => void; updateStudentInCache: (studentId: string, data: Partial<Student>) => void; clearCache: () => void; }'.
src/hooks/domains/students/composites/composite.ts(706,13): error TS2339: Property 'clearBulkSelection' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(713,29): error TS2339: Property 'selectedCount' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(714,32): error TS2339: Property 'selectedStudents' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(715,29): error TS2339: Property 'selectedCount' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(722,28): error TS2551: Property 'bulkUpdateStudents' does not exist on type 'StudentMutationsResult'. Did you mean 'updateStudent'?
src/hooks/domains/students/composites/composite.ts(725,25): error TS2339: Property 'selectAllForBulk' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(726,30): error TS2339: Property 'clearBulkSelection' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(727,31): error TS2339: Property 'toggleBulkSelection' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(730,29): error TS2339: Property 'enterBulkMode' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(731,28): error TS2339: Property 'exitBulkMode' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/composites/composite.ts(732,26): error TS2339: Property 'isBulkMode' does not exist on type '{ bulkUpdate: (ids: string[], data: Partial<Student>) => Promise<void>; bulkDelete: (ids: string[]) => Promise<void>; bulkArchive: (ids: string[]) => Promise<...>; }'.
src/hooks/domains/students/index.ts(17,1): error TS2308: Module './queries/useStudents' has already exported a member named 'useCreateStudent'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/domains/students/index.ts(17,1): error TS2308: Module './queries/useStudents' has already exported a member named 'useDeleteStudent'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/domains/students/index.ts(17,1): error TS2308: Module './queries/useStudents' has already exported a member named 'useUpdateStudent'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/domains/students/index.ts(18,1): error TS2308: Module './queries/useStudents' has already exported a member named 'studentKeys'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/domains/students/mutations.ts(6,1): error TS2308: Module './mutations/mutations' has already exported a member named 'useCreateStudent'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/domains/students/mutations.ts(6,1): error TS2308: Module './mutations/mutations' has already exported a member named 'useStudentMutations'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/domains/students/mutations.ts(6,1): error TS2308: Module './mutations/mutations' has already exported a member named 'useUpdateStudent'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/domains/students/mutations/mutations.ts(142,30): error TS2339: Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; } | { ...'.
  Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; }'.
src/hooks/domains/students/mutations/mutations.ts(213,56): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(220,24): error TS2339: Property 'context' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(228,30): error TS2339: Property 'auditRequired' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(231,53): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(266,30): error TS2339: Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; } | { ...'.
  Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; }'.
src/hooks/domains/students/mutations/mutations.ts(269,26): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(269,30): error TS2339: Property 'data' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(288,24): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(288,28): error TS2339: Property 'data' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(290,49): error TS2345: Argument of type 'readonly ["students", "detail", string]' is not assignable to parameter of type 'unknown[]'.
  The type 'readonly ["students", "detail", string]' is 'readonly' and cannot be assigned to the mutable type 'unknown[]'.
src/hooks/domains/students/mutations/mutations.ts(305,37): error TS2339: Property 'version' does not exist on type 'Student'.
src/hooks/domains/students/mutations/mutations.ts(313,36): error TS2339: Property 'version' does not exist on type 'Student'.
src/hooks/domains/students/mutations/mutations.ts(323,33): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(323,37): error TS2339: Property 'data' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(361,59): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(364,24): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(364,28): error TS2339: Property 'data' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(375,24): error TS2339: Property 'context' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(377,30): error TS2339: Property 'auditRequired' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(380,56): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(400,30): error TS2339: Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; } | { ...'.
  Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; }'.
src/hooks/domains/students/mutations/mutations.ts(443,56): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(451,30): error TS2339: Property 'auditRequired' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(454,53): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(472,30): error TS2339: Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; } | { ...'.
  Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; }'.
src/hooks/domains/students/mutations/mutations.ts(514,56): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(522,30): error TS2339: Property 'auditRequired' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(525,53): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(547,30): error TS2339: Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; } | { ...'.
  Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; }'.
src/hooks/domains/students/mutations/mutations.ts(550,26): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(550,30): error TS2339: Property 'data' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(568,33): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(568,37): error TS2339: Property 'data' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(578,18): error TS2339: Property 'previousStudent' does not exist on type 'unknown'.
src/hooks/domains/students/mutations/mutations.ts(590,59): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(593,24): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(593,28): error TS2339: Property 'data' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(599,30): error TS2339: Property 'auditRequired' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(602,56): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(620,30): error TS2339: Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; } | { ...'.
  Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; }'.
src/hooks/domains/students/mutations/mutations.ts(699,54): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(707,30): error TS2339: Property 'auditRequired' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(710,51): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(735,30): error TS2339: Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; } | { ...'.
  Property 'mutations' does not exist on type '{ readonly lists: { readonly staleTime: number; readonly gcTime: number; readonly refetchOnWindowFocus: boolean; readonly refetchOnMount: boolean; readonly refetchOnReconnect: true; readonly retry: false | 3; readonly retryDelay: (attemptIndex: number) => number; }; ... 8 more ...; readonly imports: { ...; }; }'.
src/hooks/domains/students/mutations/mutations.ts(738,26): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(738,30): error TS2339: Property 'reason' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(738,38): error TS2339: Property 'authorization' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(763,33): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(763,37): error TS2339: Property 'reason' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(763,45): error TS2339: Property 'authorization' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(787,76): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/mutations.ts(790,24): error TS2339: Property 'id' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(790,28): error TS2339: Property 'reason' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(790,36): error TS2339: Property 'authorization' does not exist on type 'void'.
src/hooks/domains/students/mutations/mutations.ts(795,24): error TS2339: Property 'context' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(798,30): error TS2339: Property 'auditRequired' does not exist on type 'Error'.
src/hooks/domains/students/mutations/mutations.ts(801,73): error TS2345: Argument of type 'QueryClient' is not assignable to parameter of type 'MutationFunctionContext'.
  Type 'QueryClient' is missing the following properties from type 'MutationFunctionContext': client, meta
src/hooks/domains/students/mutations/useOptimisticStudents.ts(169,34): error TS2339: Property 'addOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'addOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(188,36): error TS2339: Property 'removeOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'removeOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(190,34): error TS2339: Property 'addOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'addOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(202,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(215,36): error TS2339: Property 'removeOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'removeOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(219,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(278,32): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(290,32): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(311,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(324,36): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(331,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(381,32): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(399,34): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(405,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(418,36): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(422,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(464,32): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(476,32): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(483,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(495,34): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(498,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(552,32): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(564,32): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(573,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(586,36): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(593,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(643,32): error TS2339: Property 'removeOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'removeOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(666,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(679,36): error TS2339: Property 'addOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'addOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/mutations/useOptimisticStudents.ts(683,16): error TS2554: Expected 4 arguments, but got 3.
src/hooks/domains/students/mutations/useStudentManagement.ts(31,94): error TS2345: Argument of type '{ firstName: string; phoneNumber: string; }' is not assignable to parameter of type 'EmergencyContactFormData | (() => EmergencyContactFormData)'.
  Type '{ firstName: string; phoneNumber: string; }' is missing the following properties from type 'EmergencyContactFormData': lastName, relationship, priority
src/hooks/domains/students/mutations/useStudentManagement.ts(43,15): error TS2339: Property 'apiServiceRegistry' does not exist on type 'typeof import("F:/temp/white-cross/frontend/src/services/api")'.
src/hooks/domains/students/mutations/useStudentManagement.ts(76,29): error TS2345: Argument of type '{ firstName: string; phoneNumber: string; }' is not assignable to parameter of type 'SetStateAction<EmergencyContactFormData>'.
  Type '{ firstName: string; phoneNumber: string; }' is missing the following properties from type 'EmergencyContactFormData': lastName, relationship, priority
src/hooks/domains/students/mutations/useStudentMutations.ts(106,15): error TS2554: Expected 3-4 arguments, but got 1.
src/hooks/domains/students/mutations/useStudentMutations.ts(116,47): error TS2339: Property 'CREATE_FAILED' does not exist on type '{ readonly NOT_FOUND: "STUDENT_NOT_FOUND"; readonly ACCESS_DENIED: "STUDENT_ACCESS_DENIED"; readonly INACTIVE: "STUDENT_INACTIVE"; readonly GRADE_MISMATCH: "STUDENT_GRADE_MISMATCH"; readonly SCHOOL_MISMATCH: "STUDENT_SCHOOL_MISMATCH"; readonly HEALTH_RECORD_MISSING: "HEALTH_RECORD_MISSING"; readonly EMERGENCY_CONTAC...'.
src/hooks/domains/students/mutations/useStudentMutations.ts(127,36): error TS2339: Property 'all' does not exist on type '{ readonly domain: readonly ["students"]; readonly base: { readonly lists: () => readonly ["students", "list"]; readonly details: () => readonly ["students", "detail"]; readonly search: () => readonly ["students", "search"]; readonly directory: () => readonly [...]; readonly health: () => readonly [...]; readonly ac...'.
src/hooks/domains/students/mutations/useStudentMutations.ts(142,34): error TS2339: Property 'mutations' does not exist on type '{ readonly directory: { readonly sensitivity: "public"; readonly staleTime: number; readonly cacheTime: number; }; readonly list: { readonly sensitivity: "internal"; readonly staleTime: number; readonly cacheTime: number; }; readonly details: { ...; }; readonly health: { ...; }; readonly critical: { ...; }; }'.
src/hooks/domains/students/mutations/useStudentMutations.ts(151,15): error TS2554: Expected 3-4 arguments, but got 1.
src/hooks/domains/students/mutations/useStudentMutations.ts(162,47): error TS2339: Property 'UPDATE_FAILED' does not exist on type '{ readonly NOT_FOUND: "STUDENT_NOT_FOUND"; readonly ACCESS_DENIED: "STUDENT_ACCESS_DENIED"; readonly INACTIVE: "STUDENT_INACTIVE"; readonly GRADE_MISMATCH: "STUDENT_GRADE_MISMATCH"; readonly SCHOOL_MISMATCH: "STUDENT_SCHOOL_MISMATCH"; readonly HEALTH_RECORD_MISSING: "HEALTH_RECORD_MISSING"; readonly EMERGENCY_CONTAC...'.
src/hooks/domains/students/mutations/useStudentMutations.ts(202,42): error TS2339: Property '_def' does not exist on type '{ readonly all: () => readonly ["students", "list"]; readonly filtered: (filters: StudentListFilters) => readonly ["students", "list", "filtered", StudentListFilters]; ... 4 more ...; readonly inactive: () => readonly [...]; }'.
src/hooks/domains/students/mutations/useStudentMutations.ts(219,34): error TS2339: Property 'mutations' does not exist on type '{ readonly directory: { readonly sensitivity: "public"; readonly staleTime: number; readonly cacheTime: number; }; readonly list: { readonly sensitivity: "internal"; readonly staleTime: number; readonly cacheTime: number; }; readonly details: { ...; }; readonly health: { ...; }; readonly critical: { ...; }; }'.
src/hooks/domains/students/mutations/useStudentMutations.ts(228,15): error TS2554: Expected 3-4 arguments, but got 1.
src/hooks/domains/students/mutations/useStudentMutations.ts(239,65): error TS2339: Property 'DELETE_FAILED' does not exist on type '{ readonly NOT_FOUND: "STUDENT_NOT_FOUND"; readonly ACCESS_DENIED: "STUDENT_ACCESS_DENIED"; readonly INACTIVE: "STUDENT_INACTIVE"; readonly GRADE_MISMATCH: "STUDENT_GRADE_MISMATCH"; readonly SCHOOL_MISMATCH: "STUDENT_SCHOOL_MISMATCH"; readonly HEALTH_RECORD_MISSING: "HEALTH_RECORD_MISSING"; readonly EMERGENCY_CONTAC...'.
src/hooks/domains/students/mutations/useStudentMutations.ts(273,42): error TS2339: Property '_def' does not exist on type '{ readonly all: () => readonly ["students", "list"]; readonly filtered: (filters: StudentListFilters) => readonly ["students", "list", "filtered", StudentListFilters]; ... 4 more ...; readonly inactive: () => readonly [...]; }'.
src/hooks/domains/students/mutations/useStudentMutations.ts(290,34): error TS2339: Property 'mutations' does not exist on type '{ readonly directory: { readonly sensitivity: "public"; readonly staleTime: number; readonly cacheTime: number; }; readonly list: { readonly sensitivity: "internal"; readonly staleTime: number; readonly cacheTime: number; }; readonly details: { ...; }; readonly health: { ...; }; readonly critical: { ...; }; }'.
src/hooks/domains/students/mutations/useStudentMutations.ts(303,57): error TS2339: Property 'all' does not exist on type '{ readonly domain: readonly ["students"]; readonly base: { readonly lists: () => readonly ["students", "list"]; readonly details: () => readonly ["students", "detail"]; readonly search: () => readonly ["students", "search"]; readonly directory: () => readonly [...]; readonly health: () => readonly [...]; readonly ac...'.
src/hooks/domains/students/mutations/useStudentMutations.ts(305,36): error TS2339: Property 'all' does not exist on type '{ readonly domain: readonly ["students"]; readonly base: { readonly lists: () => readonly ["students", "list"]; readonly details: () => readonly ["students", "detail"]; readonly search: () => readonly ["students", "search"]; readonly directory: () => readonly [...]; readonly health: () => readonly [...]; readonly ac...'.
src/hooks/domains/students/queries/coreQueries.ts(500,5): error TS2739: Type 'InfiniteData<PaginatedStudentsResponse, unknown>' is missing the following properties from type 'PaginatedStudentsResponse': students, pagination
src/hooks/domains/students/queries/statistics.ts(439,36): error TS2769: No overload matches this call.
  Overload 1 of 3, '(callbackfn: (previousValue: Student, currentValue: Student, currentIndex: number, array: Student[]) => Student, initialValue: Student): Student', gave the following error.
    Argument of type '(acc: Record<string, number>, student: Student) => Record<string, number>' is not assignable to parameter of type '(previousValue: Student, currentValue: Student, currentIndex: number, array: Student[]) => Student'.
      Types of parameters 'acc' and 'previousValue' are incompatible.
        Type 'Student' is not assignable to type 'Record<string, number>'.
          Index signature for type 'string' is missing in type 'Student'.
  Overload 2 of 3, '(callbackfn: (previousValue: Record<string, number>, currentValue: Student, currentIndex: number, array: Student[]) => Record<string, number>, initialValue: Record<...>): Record<...>', gave the following error.
    Argument of type 'Record<string, Student[]>' is not assignable to parameter of type 'Record<string, number>'.
      'string' index signatures are incompatible.
        Type 'Student[]' is not assignable to type 'number'.
src/hooks/domains/students/queries/statistics.ts(441,26): error TS2322: Type 'undefined[]' is not assignable to type 'number'.
src/hooks/domains/students/queries/statistics.ts(442,20): error TS2339: Property 'push' does not exist on type 'number'.
src/hooks/domains/students/queries/useStudents.ts(610,32): error TS2339: Property 'addOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'addOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/queries/useStudents.ts(662,32): error TS2339: Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateOne' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/domains/students/queries/useStudentsList.ts(43,45): error TS2312: An interface can only extend an object type or intersection of object types with statically known members.
src/hooks/domains/students/queries/useStudentsList.ts(75,39): error TS2345: Argument of type 'ComplianceLevel' is not assignable to parameter of type 'DataSensitivity'.
  Type '"restricted"' is not assignable to type 'DataSensitivity'.
src/hooks/domains/students/queries/useStudentsList.ts(102,61): error TS2339: Property 'getStudentsPaginated' does not exist on type 'StudentsApi'.
src/hooks/domains/students/queries/useStudentsList.ts(132,47): error TS2339: Property 'hasNextPage' does not exist on type 'PaginatedStudentsResponse'.
src/hooks/domains/students/queries/useStudentsList.ts(144,7): error TS2345: Argument of type 'readonly ["students", "list", "filtered", StudentListFilters] | readonly ["students", "list", "paginated", PaginationParams]' is not assignable to parameter of type 'string[]'.
  The type 'readonly ["students", "list", "filtered", StudentListFilters]' is 'readonly' and cannot be assigned to the mutable type 'string[]'.
src/hooks/domains/students/queries/useStudentsList.ts(145,44): error TS2339: Property 'getStudentsPaginated' does not exist on type 'StudentsApi'.
src/hooks/domains/students/queries/useStudentsList.ts(153,23): error TS2339: Property 'hasNextPage' does not exist on type 'PaginatedStudentsResponse'.
src/hooks/domains/students/queries/useStudentsList.ts(163,34): error TS2345: Argument of type 'readonly ["students", "list"]' is not assignable to parameter of type 'string | string[]'.
  The type 'readonly ["students", "list"]' is 'readonly' and cannot be assigned to the mutable type 'string[]'.
src/hooks/domains/students/queries/useStudentsList.ts(172,38): error TS2339: Property 'data' does not exist on type 'PaginatedStudentsResponse'.
src/hooks/domains/students/queries/useStudentsList.ts(173,40): error TS2339: Property 'totalCount' does not exist on type 'PaginatedStudentsResponse'.
src/hooks/domains/students/queries/useStudentsList.ts(174,41): error TS2339: Property 'hasNextPage' does not exist on type 'PaginatedStudentsResponse'.
src/hooks/domains/students/useStudents.ts(110,28): error TS2304: Cannot find name 'useCacheManager'.
src/hooks/domains/students/useStudents.ts(111,34): error TS2304: Cannot find name 'useHealthcareCompliance'.
src/hooks/domains/students/useStudents.ts(127,5): error TS2353: Object literal may only specify known properties, and 'enableInfiniteScroll' does not exist in type 'UseStudentsListOptions'.
src/hooks/domains/students/useStudents.ts(150,12): error TS2304: Cannot find name 'useStudentDetails'.
src/hooks/domains/students/useStudents.ts(222,24): error TS2349: This expression is not callable.
  Type '{ readonly global: (query: string) => readonly ["students", "search", "global", string]; readonly byName: (name: string) => readonly ["students", "search", "name", string]; readonly byGrade: (grade: string, query: string) => readonly [...]; }' has no call signatures.
src/hooks/domains/students/useStudents.ts(242,7): error TS2304: Cannot find name 'STUDENT_CACHE_CONFIG'.
src/hooks/domains/students/useStudents.ts(272,34): error TS2339: Property 'all' does not exist on type '{ readonly domain: readonly ["students"]; readonly base: { readonly lists: () => readonly ["students", "list"]; readonly details: () => readonly ["students", "detail"]; readonly search: () => readonly ["students", "search"]; readonly directory: () => readonly [...]; readonly health: () => readonly [...]; readonly ac...'.
src/hooks/domains/students/useStudents.ts(280,20): error TS2339: Property 'isLoading' does not exist on type 'StudentsListResult'.
src/hooks/domains/students/useStudents.ts(286,18): error TS2339: Property 'isLoading' does not exist on type 'StudentsListResult'.
src/hooks/domains/students/useStudents.ts(294,20): error TS2339: Property 'isError' does not exist on type 'StudentsListResult'.
src/hooks/domains/students/useStudents.ts(300,18): error TS2339: Property 'isError' does not exist on type 'StudentsListResult'.
src/hooks/domains/students/useStudents.ts(311,31): error TS2339: Property 'isLoading' does not exist on type 'StudentsListResult'.
src/hooks/domains/students/useStudents.ts(312,29): error TS2339: Property 'isError' does not exist on type 'StudentsListResult'.
src/hooks/domains/students/useStudents.ts(313,27): error TS2339: Property 'error' does not exist on type 'StudentsListResult'.
src/hooks/domains/students/useStudents.ts(314,29): error TS2339: Property 'refetch' does not exist on type 'StudentsListResult'.
src/hooks/domains/students/useStudents.ts(316,35): error TS2551: Property 'fetchNextPage' does not exist on type 'StudentsListResult'. Did you mean 'prefetchNextPage'?
src/hooks/domains/students/useStudents.ts(317,40): error TS2339: Property 'isFetchingNextPage' does not exist on type 'StudentsListResult'.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'AssessmentQuestion'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'TrainingAssessment'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'TrainingModule'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'invalidateTrainingQueries'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useCreateIncident'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useCreateTraining'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useDeleteTraining'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useIncidentDetails'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useIncidents'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useTraining'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useTrainingDetails'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useUpdateIncident'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/index.ts(55,1): error TS2308: Module './domains/compliance' has already exported a member named 'useUpdateTraining'. Consider explicitly re-exporting to resolve the ambiguity.
src/hooks/shared/advancedHooks.ts(354,9): error TS2741: Property 'retryPolicy' is missing in type '{ priority?: "LOW" | "MEDIUM" | "HIGH" | "CRITICAL"; timeout?: number; }' but required in type '{ priority: "LOW" | "MEDIUM" | "HIGH" | "CRITICAL"; timeout: number; retryPolicy: { maxRetries: number; backoffStrategy: "LINEAR" | "EXPONENTIAL"; }; }'.
src/hooks/shared/advancedHooks.ts(470,31): error TS2345: Argument of type '{ pagination: { page: number; limit: number; }; entityType?: string; entityId?: string; userId?: string; action?: string; dateRange?: { start: string; end: string; }; riskLevel?: string; page?: number; limit?: number; }' is not assignable to parameter of type 'AuditQueryRequest | unique symbol'.
  Type '{ pagination: { page: number; limit: number; }; entityType?: string; entityId?: string; userId?: string; action?: string; dateRange?: { start: string; end: string; }; riskLevel?: string; page?: number; limit?: number; }' is not assignable to type 'AuditQueryRequest'.
    Types of property 'riskLevel' are incompatible.
      Type 'string' is not assignable to type '"LOW" | "MEDIUM" | "HIGH" | "CRITICAL"'.
src/hooks/shared/allDomainHooks.ts(84,3): error TS2724: '"@/stores/slices/communicationSlice"' has no exported member named 'selectUnreadMessages'. Did you mean 'selectSentMessages'?
src/hooks/shared/allDomainHooks.ts(85,3): error TS2724: '"@/stores/slices/communicationSlice"' has no exported member named 'selectMessagesByThread'. Did you mean 'selectMessagesByType'?
src/hooks/shared/allDomainHooks.ts(93,3): error TS2724: '"@/stores/slices/inventorySlice"' has no exported member named 'selectExpiredItems'. Did you mean 'selectExpiringItems'?
src/hooks/shared/allDomainHooks.ts(136,54): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: User[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/allDomainHooks.ts(176,57): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: Student[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/allDomainHooks.ts(181,61): error TS2339: Property 'bulkDelete' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'bulkDelete' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/shared/allDomainHooks.ts(221,62): error TS2339: Property 'fetchAll' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(222,61): error TS2339: Property 'fetchById' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(223,57): error TS2339: Property 'create' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(224,81): error TS2339: Property 'update' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(225,58): error TS2339: Property 'delete' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(238,65): error TS2554: Expected 1 arguments, but got 2.
src/hooks/shared/allDomainHooks.ts(251,60): error TS2339: Property 'fetchAll' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(252,59): error TS2339: Property 'fetchById' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(253,55): error TS2339: Property 'create' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(254,79): error TS2339: Property 'update' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(255,56): error TS2339: Property 'delete' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(273,63): error TS2554: Expected 1 arguments, but got 2.
src/hooks/shared/allDomainHooks.ts(291,61): error TS2339: Property 'fetchAll' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(292,60): error TS2339: Property 'fetchById' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(293,56): error TS2339: Property 'create' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(294,80): error TS2339: Property 'update' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(295,57): error TS2339: Property 'delete' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(313,64): error TS2554: Expected 1 arguments, but got 2.
src/hooks/shared/allDomainHooks.ts(326,66): error TS2339: Property 'fetchAll' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(327,65): error TS2339: Property 'fetchById' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(328,61): error TS2339: Property 'create' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(329,85): error TS2339: Property 'update' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(330,62): error TS2339: Property 'delete' does not exist on type '{}'.
src/hooks/shared/allDomainHooks.ts(343,60): error TS2554: Expected 1 arguments, but got 2.
src/hooks/shared/allDomainHooks.ts(356,58): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: Document[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/allDomainHooks.ts(386,62): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: Message[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/allDomainHooks.ts(415,58): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: InventoryItem[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/allDomainHooks.ts(449,56): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: Report[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/allDomainHooks.ts(471,57): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: SystemConfiguration[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/allDomainHooks.ts(492,58): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: District[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/allDomainHooks.ts(521,56): error TS2339: Property 'fetchAll' does not exist on type '{ fetchList: AsyncThunk<{ data: School[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/shared/store-hooks-index.ts(17,27): error TS2305: Module '"@/types/common"' has no exported member 'StandardEntityState'.
src/hooks/shared/store-hooks-index.ts(17,48): error TS2305: Module '"@/types/common"' has no exported member 'LoadingState'.
src/hooks/shared/store-hooks-index.ts(105,12): error TS7006: Parameter 'id' implicitly has an 'any' type.
src/hooks/shared/store-hooks-index.ts(106,16): error TS7006: Parameter 'entity' implicitly has an 'any' type.
src/hooks/shared/useApiError.ts(132,7): error TS7053: Element implicitly has an 'any' type because expression of type '"error" | "warning"' can't be used to index type '{ (message: Message, opts?: Partial<Pick<Toast, "id" | "duration" | "icon" | "className" | "style" | "ariaProps" | "position" | "iconTheme" | "toasterId" | "removeDelay">>): string; ... 8 more ...; promise<T>(promise: Promise<...> | (() => Promise<...>), msgs: { ...; }, opts?: DefaultToastOptions): Promise<...>; }'.
  Property 'warning' does not exist on type '{ (message: Message, opts?: Partial<Pick<Toast, "id" | "duration" | "icon" | "className" | "style" | "ariaProps" | "position" | "iconTheme" | "toasterId" | "removeDelay">>): string; ... 8 more ...; promise<T>(promise: Promise<...> | (() => Promise<...>), msgs: { ...; }, opts?: DefaultToastOptions): Promise<...>; }'.
src/hooks/shared/useApiError_new.ts(131,7): error TS7053: Element implicitly has an 'any' type because expression of type '"error" | "warning"' can't be used to index type '{ (message: Message, opts?: Partial<Pick<Toast, "id" | "duration" | "icon" | "className" | "style" | "ariaProps" | "position" | "iconTheme" | "toasterId" | "removeDelay">>): string; ... 8 more ...; promise<T>(promise: Promise<...> | (() => Promise<...>), msgs: { ...; }, opts?: DefaultToastOptions): Promise<...>; }'.
  Property 'warning' does not exist on type '{ (message: Message, opts?: Partial<Pick<Toast, "id" | "duration" | "icon" | "className" | "style" | "ariaProps" | "position" | "iconTheme" | "toasterId" | "removeDelay">>): string; ... 8 more ...; promise<T>(promise: Promise<...> | (() => Promise<...>), msgs: { ...; }, opts?: DefaultToastOptions): Promise<...>; }'.
src/hooks/shared/useAudit.ts(110,30): error TS2554: Expected 0 arguments, but got 1.
src/hooks/shared/useAudit.ts(127,34): error TS7006: Parameter 'error' implicitly has an 'any' type.
src/hooks/shared/useAuditLog.ts(13,10): error TS2305: Module '"../utilities/AuthContext"' has no exported member 'useAuthContext'.
src/hooks/slices/studentsSlice.ts(12,8): error TS2459: Module '"../../pages/students/store/studentsSlice"' declares 'StudentFilters' locally, but it is not exported.
src/hooks/useOptimisticStudents.ts(15,3): error TS2305: Module '"./domains/students/mutations/useOptimisticStudents"' has no exported member 'useOptimisticEmergencyContactCreate'.
src/hooks/useOptimisticStudents.ts(16,3): error TS2305: Module '"./domains/students/mutations/useOptimisticStudents"' has no exported member 'useOptimisticEmergencyContactUpdate'.
src/hooks/useOptimisticStudents.ts(17,3): error TS2305: Module '"./domains/students/mutations/useOptimisticStudents"' has no exported member 'useOptimisticEmergencyContactDelete'.
src/hooks/utilities/AuthContext.enhanced.tsx(137,19): error TS2345: Argument of type 'User' is not assignable to parameter of type 'SetStateAction<User>'.
  Type 'User' is missing the following properties from type 'User': name, permissions
src/hooks/utilities/AuthContext.enhanced.tsx(140,34): error TS2554: Expected 0 arguments, but got 1.
src/hooks/utilities/AuthContext.enhanced.tsx(143,26): error TS2339: Property 'refreshToken' does not exist on type 'typeof CsrfProtection'.
src/hooks/utilities/AuthContext.enhanced.tsx(192,22): error TS2339: Property 'refreshToken' does not exist on type 'typeof CsrfProtection'.
src/hooks/utilities/AuthContext.enhanced.tsx(195,15): error TS2345: Argument of type 'User' is not assignable to parameter of type 'SetStateAction<User>'.
  Type 'User' is missing the following properties from type 'User': name, permissions
src/hooks/utilities/AuthContext.enhanced.tsx(198,30): error TS2554: Expected 0 arguments, but got 1.
src/hooks/utilities/AuthContext.enhanced.tsx(303,9): error TS2322: Type '{ isOpen: boolean; onLoginAgain: () => void; }' is not assignable to type 'IntrinsicAttributes & SessionExpiredModalProps'.
  Property 'onLoginAgain' does not exist on type 'IntrinsicAttributes & SessionExpiredModalProps'.
src/hooks/utilities/AuthContext.tsx(17,10): error TS2614: Module '"@/utils/tokenSecurity"' has no exported member 'tokenSecurityManager'. Did you mean to use 'import tokenSecurityManager from "@/utils/tokenSecurity"' instead?
src/hooks/utilities/AuthContext.tsx(17,32): error TS2614: Module '"@/utils/tokenSecurity"' has no exported member 'legacyTokenUtils'. Did you mean to use 'import legacyTokenUtils from "@/utils/tokenSecurity"' instead?
src/hooks/utilities/AuthContext.tsx(17,50): error TS2614: Module '"@/utils/tokenSecurity"' has no exported member 'validateTokenFormat'. Did you mean to use 'import validateTokenFormat from "@/utils/tokenSecurity"' instead?
src/hooks/utilities/AuthContext.tsx(17,71): error TS2614: Module '"@/utils/tokenSecurity"' has no exported member 'isTokenExpired'. Did you mean to use 'import isTokenExpired from "@/utils/tokenSecurity"' instead?
src/hooks/utilities/AuthContext.tsx(138,21): error TS2345: Argument of type 'User' is not assignable to parameter of type 'SetStateAction<User>'.
  Type 'User' is missing the following properties from type 'User': name, permissions
src/hooks/utilities/AuthContext.tsx(176,13): error TS2345: Argument of type 'User' is not assignable to parameter of type 'SetStateAction<User>'.
  Type 'User' is missing the following properties from type 'User': name, permissions
src/hooks/utilities/AuthContext.tsx(204,9): error TS2322: Type '{ isOpen: boolean; onLoginAgain: () => void; }' is not assignable to type 'IntrinsicAttributes & SessionExpiredModalProps'.
  Property 'onLoginAgain' does not exist on type 'IntrinsicAttributes & SessionExpiredModalProps'.
src/hooks/utilities/routeValidation.ts(245,14): error TS2344: Type '[string, ...string[]]' does not satisfy the constraint 'Readonly<Record<string, EnumValue>>'.
  Index signature for type 'string' is missing in type '[string, ...string[]]'.
src/hooks/utilities/routeValidation.ts(247,3): error TS2322: Type 'ZodEnum<{ [x: string]: string; }>' is not assignable to type 'ZodEnum<[string, ...string[]]>'.
  Type '{ [x: string]: string; }' is not assignable to type '[string, ...string[]]'.
src/hooks/utilities/routeValidation.ts(247,12): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: [string, ...string[]], params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<{ [x: string]: string; }>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type '[string, ...string[]]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type '[string, ...string[]]'.
src/hooks/utilities/routeValidation.ts(391,14): error TS2769: No overload matches this call.
  Overload 1 of 2, '(def: number): ZodDefault<ZodOptional<ZodPipe<ZodString, ZodTransform<number, string>>>>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number'.
  Overload 2 of 2, '(def: () => number): ZodDefault<ZodOptional<ZodPipe<ZodString, ZodTransform<number, string>>>>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '() => number'.
src/hooks/utilities/routeValidation.ts(399,14): error TS2769: No overload matches this call.
  Overload 1 of 2, '(def: number): ZodDefault<ZodOptional<ZodPipe<ZodString, ZodTransform<number, string>>>>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number'.
  Overload 2 of 2, '(def: () => number): ZodDefault<ZodOptional<ZodPipe<ZodString, ZodTransform<number, string>>>>', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '() => number'.
src/hooks/utilities/studentRedux.ts(208,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(209,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(213,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(218,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(222,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(227,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(231,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(235,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(240,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(244,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(249,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(253,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(257,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(258,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(263,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(264,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(268,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(269,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(270,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(321,47): error TS2339: Property 'students' does not exist on type 'unknown'.
src/hooks/utilities/studentRedux.ts(328,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(333,18): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(339,18): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(345,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(349,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(363,18): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(368,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(370,18): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(411,85): error TS2339: Property 'students' does not exist on type 'unknown'.
src/hooks/utilities/studentRedux.ts(418,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(437,14): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(445,14): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(449,14): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(492,20): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(495,20): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(522,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(526,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(531,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(535,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(536,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(537,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(571,57): error TS2339: Property 'students' does not exist on type 'unknown'.
src/hooks/utilities/studentRedux.ts(579,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(583,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(588,59): error TS2339: Property 'students' does not exist on type 'unknown'.
src/hooks/utilities/studentRedux.ts(590,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(594,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(602,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(611,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentRedux.ts(612,16): error TS2345: Argument of type 'void' is not assignable to parameter of type 'UnknownAction'.
src/hooks/utilities/studentUtils.ts(123,43): error TS2339: Property 'all' does not exist on type '{ readonly lists: () => readonly ["students", "list"]; readonly details: () => readonly ["students", "detail"]; readonly searches: () => readonly ["students", "search"]; readonly statistics: () => readonly ["students", "statistics"]; readonly relationships: () => readonly [...]; readonly assignments: () => readonly ...'.
src/hooks/utilities/studentUtils.ts(195,39): error TS2339: Property 'all' does not exist on type '{ readonly lists: () => readonly ["students", "list"]; readonly details: () => readonly ["students", "detail"]; readonly searches: () => readonly ["students", "search"]; readonly statistics: () => readonly ["students", "statistics"]; readonly relationships: () => readonly [...]; readonly assignments: () => readonly ...'.
src/hooks/utilities/studentUtils.ts(431,58): error TS2339: Property 'isFetching' does not exist on type 'QueryState<unknown, Error>'.
src/hooks/utilities/useCommunicationOptions.ts(23,10): error TS2614: Module '"@/services/config/apiConfig"' has no exported member 'apiInstance'. Did you mean to use 'import apiInstance from "@/services/config/apiConfig"' instead?
src/hooks/utilities/useMedicationsRoute.ts(32,3): error TS2724: '"@/types/medications"' has no exported member named 'Medication'. Did you mean 'MedicationTab'?
src/hooks/utilities/useMedicationsRoute.ts(33,3): error TS2459: Module '"@/types/medications"' declares 'StudentMedication' locally, but it is not exported.
src/hooks/utilities/useMedicationsRoute.ts(35,3): error TS2724: '"@/types/medications"' has no exported member named 'InventoryItem'. Did you mean 'InventoryFilters'?
src/hooks/utilities/useMedicationsRoute.ts(36,3): error TS2724: '"@/types/medications"' has no exported member named 'AdverseReaction'. Did you mean 'AdverseReactionData'?
src/hooks/utilities/useMedicationsRoute.ts(94,5): error TS2353: Object literal may only specify known properties, and 'categoryFilter' does not exist in type 'MedicationFilters'.
src/hooks/utilities/useMedicationsRoute.ts(149,11): error TS2339: Property 'showMedicationToast' does not exist on type '{ showSuccess: (message: string) => void; showError: (message: string) => void; showInfo: (message: string) => void; showWarning: (message: string) => void; }'.
src/hooks/utilities/useMedicationsRoute.ts(152,11): error TS2339: Property 'routeState' does not exist on type '[unknown, (value: unknown) => void, () => void]'.
src/hooks/utilities/useMedicationsRoute.ts(152,23): error TS2339: Property 'updateRouteState' does not exist on type '[unknown, (value: unknown) => void, () => void]'.
src/hooks/utilities/useMedicationsRoute.ts(152,73): error TS2554: Expected 1 arguments, but got 2.
src/hooks/utilities/useMedicationsRoute.ts(184,7): error TS2345: Argument of type 'Date' is not assignable to parameter of type 'string'.
src/hooks/utilities/useMedicationsRoute.ts(203,76): error TS2554: Expected 1 arguments, but got 2.
src/hooks/utilities/useMedicationsRoute.ts(204,54): error TS2551: Property 'getAdministrationLogs' does not exist on type 'MedicationsApi'. Did you mean 'logAdministration'?
src/hooks/utilities/useMedicationsRoute.ts(219,67): error TS2345: Argument of type 'Date' is not assignable to parameter of type 'string'.
src/hooks/utilities/useMedicationsRoute.ts(296,48): error TS2339: Property 'data' does not exist on type 'MedicationsResponse'.
src/hooks/utilities/useMedicationsRoute.ts(299,40): error TS7006: Parameter 'medication' implicitly has an 'any' type.
src/hooks/utilities/useMedicationsRoute.ts(309,23): error TS2339: Property 'categoryFilter' does not exist on type 'MedicationFilters'.
src/hooks/utilities/useMedicationsRoute.ts(310,34): error TS7006: Parameter 'm' implicitly has an 'any' type.
src/hooks/utilities/useMedicationsRoute.ts(310,68): error TS2339: Property 'categoryFilter' does not exist on type 'MedicationFilters'.
src/hooks/utilities/useMedicationsRoute.ts(312,23): error TS2339: Property 'statusFilter' does not exist on type 'MedicationFilters'.
src/hooks/utilities/useMedicationsRoute.ts(313,34): error TS7006: Parameter 'm' implicitly has an 'any' type.
src/hooks/utilities/useMedicationsRoute.ts(314,23): error TS2339: Property 'statusFilter' does not exist on type 'MedicationFilters'.
src/hooks/utilities/useMedicationsRoute.ts(355,42): error TS2339: Property 'data' does not exist on type 'StudentMedication[]'.
src/hooks/utilities/useMedicationsRoute.ts(360,30): error TS7006: Parameter 'item' implicitly has an 'any' type.
src/hooks/utilities/useMedicationsRoute.ts(363,33): error TS7006: Parameter 'item' implicitly has an 'any' type.
src/hooks/utilities/useMedicationsRoute.ts(366,32): error TS7006: Parameter 'item' implicitly has an 'any' type.
src/hooks/utilities/useMedicationsRoute.ts(376,44): error TS2339: Property 'data' does not exist on type 'InventoryResponse'.
src/hooks/utilities/useMedicationsRoute.ts(380,34): error TS7006: Parameter 'item' implicitly has an 'any' type.
src/hooks/utilities/useMedicationsRoute.ts(383,38): error TS7006: Parameter 'item' implicitly has an 'any' type.
src/hooks/utilities/useMedicationsRoute.ts(388,33): error TS7006: Parameter 'item' implicitly has an 'any' type.
src/hooks/utilities/useOfflineQueue.ts(27,10): error TS2305: Module '"../api"' has no exported member 'apiServiceRegistry'.
src/hooks/utilities/useOfflineQueue.ts(28,15): error TS2305: Module '"../api"' has no exported member 'AdministrationRecord'.
src/hooks/utilities/useOfflineQueue.ts(28,37): error TS2305: Module '"../api"' has no exported member 'AdministrationLog'.
src/hooks/utilities/useOfflineQueue.ts(106,36): error TS2345: Argument of type 'boolean' is not assignable to parameter of type 'IDBKeyRange | IDBValidKey'.
src/hooks/utilities/useOfflineQueue.ts(331,27): error TS2339: Property 'medicationId' does not exist on type 'QueuedAdministration'.
src/hooks/utilities/useOfflineQueue.ts(331,60): error TS2339: Property 'studentId' does not exist on type 'QueuedAdministration'.
src/hooks/utilities/useReminderManagement.ts(35,64): error TS2339: Property 'updateReminderStatus' does not exist on type 'MedicationsApi'.
src/hooks/utilities/useStudentSelection.ts(184,44): error TS2339: Property 'isActive' does not exist on type '{ id: EntityId; }'.
src/hooks/utilities/useStudentSelection.ts(188,76): error TS2339: Property 'grade' does not exist on type '{ id: EntityId; }'.
src/hooks/utilities/useStudentSelection.ts(192,42): error TS2339: Property 'nurseId' does not exist on type '{ id: EntityId; }'.
src/hooks/utilities/useStudentSelection.ts(263,34): error TS2345: Argument of type 'EntityId[]' is not assignable to parameter of type 'string[]'.
  Type 'EntityId' is not assignable to type 'string'.
    Type 'number' is not assignable to type 'string'.
src/hooks/utilities/useStudentsRoute.ts(69,5): error TS2353: Object literal may only specify known properties, and 'searchTerm' does not exist in type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(122,11): error TS2339: Property 'routeState' does not exist on type '[unknown, (value: unknown) => void, () => void]'.
src/hooks/utilities/useStudentsRoute.ts(122,23): error TS2339: Property 'updateRouteState' does not exist on type '[unknown, (value: unknown) => void, () => void]'.
src/hooks/utilities/useStudentsRoute.ts(122,70): error TS2554: Expected 1 arguments, but got 2.
src/hooks/utilities/useStudentsRoute.ts(139,20): error TS2304: Cannot find name 'studentsApi'.
src/hooks/utilities/useStudentsRoute.ts(156,20): error TS2304: Cannot find name 'studentsApi'.
src/hooks/utilities/useStudentsRoute.ts(235,37): error TS7006: Parameter 'student' implicitly has an 'any' type.
src/hooks/utilities/useStudentsRoute.ts(236,41): error TS2339: Property 'searchTerm' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(245,23): error TS2339: Property 'gradeFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(246,72): error TS2339: Property 'gradeFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(248,23): error TS2339: Property 'genderFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(249,73): error TS2339: Property 'genderFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(251,23): error TS2339: Property 'statusFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(253,23): error TS2339: Property 'statusFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(256,24): error TS2339: Property 'showArchived' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRoute.ts(262,22): error TS7006: Parameter 'a' implicitly has an 'any' type.
src/hooks/utilities/useStudentsRoute.ts(262,25): error TS7006: Parameter 'b' implicitly has an 'any' type.
src/hooks/utilities/useStudentsRouteEnhanced.ts(112,52): error TS2551: Property 'studentUI' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'. Did you mean 'students'?
src/hooks/utilities/useStudentsRouteEnhanced.ts(116,42): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => Student[], equalityFn?: EqualityFn<...>): Student[]', gave the following error.
    Argument of type '(state: any, grade: string) => Student[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => Student[]'.
      Target signature provides too few arguments. Expected 2 or more, but got 1.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => Student[], options?: UseSelectorOptions<...>): Student[]', gave the following error.
    Argument of type '(state: any, grade: string) => Student[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => Student[]'.
      Target signature provides too few arguments. Expected 2 or more, but got 1.
src/hooks/utilities/useStudentsRouteEnhanced.ts(137,7): error TS2353: Object literal may only specify known properties, and 'searchTerm' does not exist in type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(200,29): error TS2339: Property 'data' does not exist on type 'PaginatedStudentsResponse'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(201,31): error TS2339: Property 'syncFromQuery' does not exist on type '{ fetchList: AsyncThunk<{ data: Student[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(201,64): error TS2339: Property 'data' does not exist on type 'PaginatedStudentsResponse'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(210,51): error TS2554: Expected 1 arguments, but got 0.
src/hooks/utilities/useStudentsRouteEnhanced.ts(222,32): error TS2339: Property 'addEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'addEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(235,32): error TS2339: Property 'updateEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(246,32): error TS2339: Property 'updateEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(261,32): error TS2339: Property 'updateEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'updateEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(275,32): error TS2339: Property 'removeEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'removeEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(285,32): error TS2339: Property 'removeEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'removeEntity' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(302,47): error TS2339: Property 'data' does not exist on type 'PaginatedStudentsResponse'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(311,37): error TS7006: Parameter 'student' implicitly has an 'any' type.
src/hooks/utilities/useStudentsRouteEnhanced.ts(312,35): error TS2339: Property 'searchTerm' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(313,38): error TS2339: Property 'searchTerm' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(319,37): error TS2339: Property 'gradeFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(319,78): error TS2339: Property 'gradeFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(320,38): error TS2339: Property 'genderFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(320,81): error TS2339: Property 'genderFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(321,38): error TS2339: Property 'statusFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(322,18): error TS2339: Property 'statusFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(323,18): error TS2339: Property 'statusFilter' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(325,39): error TS2339: Property 'showArchived' does not exist on type 'StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(332,22): error TS7006: Parameter 'a' implicitly has an 'any' type.
src/hooks/utilities/useStudentsRouteEnhanced.ts(332,25): error TS7006: Parameter 'b' implicitly has an 'any' type.
src/hooks/utilities/useStudentsRouteEnhanced.ts(415,20): error TS2345: Argument of type '"searchTerm"' is not assignable to parameter of type 'keyof StudentFilters'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(445,31): error TS2339: Property 'fetchStudents' does not exist on type '{ fetchList: AsyncThunk<{ data: Student[]; total?: number; pagination?: Partial<PaginationState>; }, void | EntityQueryParams, {}>; ... 5 more ...; bulkUpdate?: AsyncThunk<...>; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(466,31): error TS2345: Argument of type '{ nurseId: string; id: string; }' is not assignable to parameter of type '{ id: string; data: TransferStudentRequest; }'.
  Property 'data' is missing in type '{ nurseId: string; id: string; }' but required in type '{ id: string; data: TransferStudentRequest; }'.
src/hooks/utilities/useStudentsRouteEnhanced.ts(484,48): error TS7006: Parameter 's' implicitly has an 'any' type.
src/hooks/utilities/useStudentsRouteEnhanced.ts(614,30): error TS2339: Property 'setCurrentPage' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; } | { ...; }'.
  Property 'setCurrentPage' does not exist on type '{ selectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/selectStudent">; deselectStudent: ActionCreatorWithOptionalPayload<string, "studentUI/deselectStudent">; ... 17 more ...; resetUIState: ActionCreatorWithoutPayload<...>; }'.
src/hooks/utilities/useSystemHealth.ts(21,10): error TS2305: Module '"@/hooks/api"' has no exported member 'apiServiceRegistry'.
src/main.tsx(28,9): error TS2322: Type '{ type: string; endpoint: any; apiKey: any; enabled: boolean; }[]' is not assignable to type 'MetricsBackend[]'.
  Type '{ type: string; endpoint: any; apiKey: any; enabled: boolean; }' is not assignable to type 'MetricsBackend'.
    Types of property 'type' are incompatible.
      Type 'string' is not assignable to type '"custom" | "datadog" | "newrelic" | "prometheus" | "cloudwatch"'.
src/main.tsx(47,9): error TS2322: Type 'string' is not assignable to type '"development" | "staging" | "production"'.
src/middleware/index.ts(153,14): error TS2323: Cannot redeclare exported variable 'middlewarePresets'.
src/middleware/index.ts(328,14): error TS2323: Cannot redeclare exported variable 'enterpriseMiddlewareFactory'.
src/middleware/index.ts(328,44): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/middleware/index.ts(333,14): error TS2451: Cannot redeclare block-scoped variable 'createDevelopmentPreset'.
src/middleware/index.ts(333,40): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/middleware/index.ts(338,14): error TS2451: Cannot redeclare block-scoped variable 'createProductionPreset'.
src/middleware/index.ts(338,39): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/middleware/index.ts(343,14): error TS2451: Cannot redeclare block-scoped variable 'createTestingPreset'.
src/middleware/index.ts(343,36): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/middleware/index.ts(352,10): error TS2323: Cannot redeclare exported variable 'enterpriseMiddlewareFactory'.
src/middleware/index.ts(352,10): error TS2484: Export declaration conflicts with exported declaration of 'enterpriseMiddlewareFactory'.
src/middleware/index.ts(353,10): error TS2323: Cannot redeclare exported variable 'middlewarePresets'.
src/middleware/index.ts(353,10): error TS2484: Export declaration conflicts with exported declaration of 'middlewarePresets'.
src/middleware/index.ts(356,14): error TS2451: Cannot redeclare block-scoped variable 'createDevelopmentPreset'.
src/middleware/index.ts(357,14): error TS2451: Cannot redeclare block-scoped variable 'createProductionPreset'.
src/middleware/index.ts(358,14): error TS2451: Cannot redeclare block-scoped variable 'createTestingPreset'.
src/middleware/monitoring/monitoring.middleware.ts(199,14): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any' return type.
src/middleware/redux/index.ts(12,15): error TS2307: Cannot find module './stateSyncMiddleware.examples' or its corresponding type declarations.
src/pages/access-control/index.ts(44,27): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any' return type.
src/pages/access-control/routes.tsx(9,32): error TS2307: Cannot find module '@/components/auth/ProtectedRoute' or its corresponding type declarations.
src/pages/access-control/store/accessControlSlice.ts(851,69): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(852,56): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(853,62): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(854,68): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(855,59): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(856,65): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(857,61): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(858,63): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(859,69): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(860,67): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(861,66): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(862,65): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(863,66): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(864,72): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(865,70): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(866,69): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(867,58): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(868,56): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(869,64): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(873,9): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(876,9): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(881,9): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(884,48): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(912,39): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/access-control/store/accessControlSlice.ts(927,69): error TS2339: Property 'accessControl' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/admin/hooks/useInventoryData.ts(6,5): error TS7018: Object literal's property 'data' implicitly has an 'any[]' type.
src/pages/admin/hooks/useInventoryData.ts(8,5): error TS7018: Object literal's property 'error' implicitly has an 'any' type.
src/pages/admin/Inventory.tsx(41,15): error TS2305: Module '"./types"' has no exported member 'InventoryTab'.
src/pages/admin/Inventory.tsx(41,29): error TS2305: Module '"./types"' has no exported member 'InventorySortColumn'.
src/pages/admin/Inventory.tsx(41,50): error TS2305: Module '"./types"' has no exported member 'InventoryFilters'.
src/pages/admin/Inventory.tsx(88,5): error TS2339: Property 'inventoryItems' does not exist on type '{ data: any[]; isLoading: boolean; error: any; }'.
src/pages/admin/Inventory.tsx(89,5): error TS2339: Property 'alerts' does not exist on type '{ data: any[]; isLoading: boolean; error: any; }'.
src/pages/admin/Inventory.tsx(90,5): error TS2339: Property 'vendors' does not exist on type '{ data: any[]; isLoading: boolean; error: any; }'.
src/pages/admin/Inventory.tsx(91,5): error TS2339: Property 'purchaseOrders' does not exist on type '{ data: any[]; isLoading: boolean; error: any; }'.
src/pages/admin/Inventory.tsx(92,5): error TS2339: Property 'budgetCategories' does not exist on type '{ data: any[]; isLoading: boolean; error: any; }'.
src/pages/admin/Inventory.tsx(93,5): error TS2339: Property 'categories' does not exist on type '{ data: any[]; isLoading: boolean; error: any; }'.
src/pages/admin/Inventory.tsx(94,5): error TS2339: Property 'loading' does not exist on type '{ data: any[]; isLoading: boolean; error: any; }'.
src/pages/admin/Inventory.tsx(95,5): error TS2339: Property 'refetchData' does not exist on type '{ data: any[]; isLoading: boolean; error: any; }'.
src/pages/admin/Inventory.tsx(96,24): error TS2554: Expected 0 arguments, but got 1.
src/pages/admin/Inventory.tsx(102,11): error TS2339: Property 'filteredItems' does not exist on type '{ filters: {}; setFilters: () => void; }'.
src/pages/admin/Inventory.tsx(102,49): error TS2554: Expected 0 arguments, but got 1.
src/pages/admin/Inventory.tsx(136,24): error TS2322: Type '{ onAddItem: () => void; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'onAddItem' does not exist on type 'IntrinsicAttributes'.
src/pages/admin/Inventory.tsx(140,9): error TS2322: Type '{ inventoryItems: any; alerts: any; vendors: any; purchaseOrders: any; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'inventoryItems' does not exist on type 'IntrinsicAttributes'.
src/pages/admin/Inventory.tsx(147,24): error TS2322: Type '{ alerts: any; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'alerts' does not exist on type 'IntrinsicAttributes'.
src/pages/admin/Inventory.tsx(150,22): error TS2322: Type '{ activeTab: InventoryTab; onTabChange: Dispatch<any>; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'activeTab' does not exist on type 'IntrinsicAttributes'.
src/pages/admin/Reports.tsx(21,15): error TS2305: Module '"./types"' has no exported member 'TabType'.
src/pages/admin/Reports.tsx(21,24): error TS2305: Module '"./types"' has no exported member 'DateRange'.
src/pages/appointments/AppointmentDetail.tsx(15,28): error TS2724: '"../../constants/routes"' has no exported member named 'buildAppointmentEditRoute'. Did you mean 'buildAppointmentRoute'?
src/pages/appointments/AppointmentDetail.tsx(118,19): error TS2304: Cannot find name 'user'.
src/pages/appointments/AppointmentDetail.tsx(118,45): error TS2304: Cannot find name 'user'.
src/pages/appointments/Appointments.tsx(116,33): error TS2304: Cannot find name 'user'.
src/pages/appointments/Appointments.tsx(116,59): error TS2304: Cannot find name 'user'.
src/pages/appointments/AppointmentSchedule.tsx(97,21): error TS2339: Property 'getStudents' does not exist on type 'StudentsApi'.
src/pages/appointments/AppointmentSchedule.tsx(121,30): error TS2551: Property 'appointmentDate' does not exist on type 'Appointment'. Did you mean 'appointmentType'?
src/pages/appointments/AppointmentSchedule.tsx(133,15): error TS2339: Property 'startTime' does not exist on type 'Appointment'.
src/pages/appointments/AppointmentSchedule.tsx(166,34): error TS2551: Property 'appointmentDate' does not exist on type 'Appointment'. Did you mean 'appointmentType'?
src/pages/appointments/AppointmentSchedule.tsx(288,71): error TS2339: Property 'studentId' does not exist on type 'Student'.
src/pages/appointments/AppointmentSchedule.tsx(356,12): error TS2678: Type '"CONFIRMED"' is not comparable to type 'AppointmentStatus'.
src/pages/appointments/store/appointmentsSlice.ts(9,29): error TS2307: Cannot find module '@/types/students' or its corresponding type declarations.
src/pages/appointments/store/appointmentsSlice.ts(10,10): error TS2305: Module '"@/services/core/ApiClient"' has no exported member 'appointmentsApi'.
src/pages/auth/Login.tsx(38,9): error TS2304: Cannot find name 'user'.
src/pages/auth/Login.tsx(42,7): error TS2304: Cannot find name 'user'.
src/pages/auth/Login.tsx(48,13): error TS2304: Cannot find name 'login'.
src/pages/auth/Login.tsx(88,20): error TS2304: Cannot find name 'loading'.
src/pages/auth/Login.tsx(89,11): error TS2322: Type '(e: React.FormEvent) => Promise<void>' is not assignable to type '() => void'.
  Target signature provides too few arguments. Expected 1 or more, but got 0.
src/pages/budget/components/AlertConfiguration.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ApprovalHistory.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ApprovalWorkflow.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetAlerts.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetAllocation.tsx(27,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[], equalityFn?: EqualityFn<...>): BudgetCategoryWithMetrics[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[], options?: UseSelectorOptions<...>): BudgetCategoryWithMetrics[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetAllocation.tsx(28,34): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetSummary, equalityFn?: EqualityFn<...>): BudgetSummary', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetSummary' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetSummary'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetSummary, options?: UseSelectorOptions<...>): BudgetSummary', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetSummary' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetSummary'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetAllocation.tsx(29,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetApprovals.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetCategories.tsx(33,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[], equalityFn?: EqualityFn<...>): BudgetCategoryWithMetrics[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[], options?: UseSelectorOptions<...>): BudgetCategoryWithMetrics[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetCategories.tsx(34,34): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, equalityFn?: EqualityFn<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, options?: UseSelectorOptions<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetCategories.tsx(35,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetCategories.tsx(124,15): error TS2322: Type '{ key: string; category: BudgetCategoryWithMetrics; onClick: () => void; viewMode: "list" | "grid"; }' is not assignable to type 'IntrinsicAttributes & CategoryCardProps'.
  Property 'category' does not exist on type 'IntrinsicAttributes & CategoryCardProps'.
src/pages/budget/components/BudgetDashboard.tsx(30,34): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetSummary, equalityFn?: EqualityFn<...>): BudgetSummary', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetSummary' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetSummary'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetSummary, options?: UseSelectorOptions<...>): BudgetSummary', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetSummary' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetSummary'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetDashboard.tsx(31,34): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, equalityFn?: EqualityFn<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, options?: UseSelectorOptions<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetDashboard.tsx(32,47): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => OverBudgetCategory[], equalityFn?: EqualityFn<...>): OverBudgetCategory[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => OverBudgetCategory[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => OverBudgetCategory[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => OverBudgetCategory[], options?: UseSelectorOptions<...>): OverBudgetCategory[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => OverBudgetCategory[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => OverBudgetCategory[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetDashboard.tsx(33,44): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetDetails.tsx(29,35): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics, equalityFn?: EqualityFn<...>): BudgetCategoryWithMetrics', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics, options?: UseSelectorOptions<...>): BudgetCategoryWithMetrics', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetDetails.tsx(30,34): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, equalityFn?: EqualityFn<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, options?: UseSelectorOptions<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetDetails.tsx(31,39): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetTransaction[], equalityFn?: EqualityFn<...>): BudgetTransaction[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetTransaction[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetTransaction[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetTransaction[], options?: UseSelectorOptions<...>): BudgetTransaction[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetTransaction[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetTransaction[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetForecasting.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetForm.tsx(29,44): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetList.tsx(33,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[], equalityFn?: EqualityFn<...>): BudgetCategoryWithMetrics[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[], options?: UseSelectorOptions<...>): BudgetCategoryWithMetrics[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetList.tsx(34,34): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, equalityFn?: EqualityFn<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, options?: UseSelectorOptions<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetList.tsx(35,44): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetProjections.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetReports.tsx(14,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetRollover.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/BudgetThresholds.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/CategoryAllocation.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/CategoryForm.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ComplianceReport.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/CostCenterAllocation.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/CostCenterCard.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/CostCenters.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/DepartmentBudgets.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ExpenseForm.tsx(18,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[], equalityFn?: EqualityFn<...>): BudgetCategoryWithMetrics[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[], options?: UseSelectorOptions<...>): BudgetCategoryWithMetrics[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetCategoryWithMetrics[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetCategoryWithMetrics[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ExpenseTracking.tsx(32,39): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetTransaction[], equalityFn?: EqualityFn<...>): BudgetTransaction[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetTransaction[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetTransaction[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetTransaction[], options?: UseSelectorOptions<...>): BudgetTransaction[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => BudgetTransaction[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => BudgetTransaction[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ExpenseTracking.tsx(33,34): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, equalityFn?: EqualityFn<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, options?: UseSelectorOptions<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ExpenseTracking.tsx(34,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => { ...; }, equalityFn?: EqualityFn<...>): { ...; }', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => { page: number; limit: number; total: number; totalPages: number; }' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => { ...; }'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => { ...; }, options?: UseSelectorOptions<...>): { ...; }', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => { page: number; limit: number; total: number; totalPages: number; }' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => { ...; }'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ExpenseTracking.tsx(35,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/FiscalYearCard.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/FiscalYearManagement.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/ForecastChart.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/OverspendingAlerts.tsx(27,47): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => OverBudgetCategory[], equalityFn?: EqualityFn<...>): OverBudgetCategory[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => OverBudgetCategory[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => OverBudgetCategory[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => OverBudgetCategory[], options?: UseSelectorOptions<...>): OverBudgetCategory[]', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => OverBudgetCategory[]' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => OverBudgetCategory[]'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/OverspendingAlerts.tsx(28,34): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, equalityFn?: EqualityFn<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean, options?: UseSelectorOptions<...>): boolean', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => boolean' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => boolean'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/PendingApprovals.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/RevenueCard.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/RevenueDetails.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/RevenueForm.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/RevenueList.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/RevenueTracking.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/SpendingReport.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/TrendAnalysis.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/VarianceReport.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/components/YearEndClosing.tsx(19,37): error TS2769: No overload matches this call.
  Overload 1 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, equalityFn?: EqualityFn<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
  Overload 2 of 2, '(selector: (state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number, options?: UseSelectorOptions<...>): number', gave the following error.
    Argument of type '(state: { budget: BudgetState; }) => number' is not assignable to parameter of type '(state: { auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }) => number'.
      Types of parameters 'state' and 'state' are incompatible.
        Property 'budget' is missing in type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }' but required in type '{ budget: BudgetState; }'.
src/pages/budget/store/budgetSlice.ts(9,10): error TS2724: '"../../../services/modules/budgetApi"' has no exported member named 'budgetApi'. Did you mean 'BudgetApi'?
src/pages/compliance/index.ts(110,3): error TS18004: No value exists in scope for the shorthand property 'ComplianceRoutes'. Either declare one or provide an initializer.
src/pages/compliance/routes.tsx(10,32): error TS2307: Cannot find module '@/components/auth/ProtectedRoute' or its corresponding type declarations.
src/pages/compliance/store/complianceSlice.ts(632,66): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(633,58): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(634,65): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(635,63): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(636,59): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(637,60): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(638,61): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(639,65): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(640,70): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(641,65): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(642,64): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(643,69): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(644,64): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(645,66): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(646,68): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(647,73): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(648,69): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(649,70): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(650,58): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(651,56): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(652,64): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(656,9): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(659,9): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(664,16): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(670,38): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(694,43): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(709,39): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/compliance/store/complianceSlice.ts(724,64): error TS2339: Property 'compliance' does not exist on type '{ auth: WritableDraft<AuthState>; dashboard: WritableDraft<DashboardState>; incidentReports: WritableDraft<IncidentReportsState>; ... 14 more ...; orchestration: WritableDraft<...>; }'.
src/pages/configuration/store/configurationSlice.ts(214,69): error TS2345: Argument of type 'void | ConfigurationFilter' is not assignable to parameter of type 'ConfigurationFilter'.
  Type 'void' is not assignable to type 'ConfigurationFilter'.
src/pages/configuration/store/configurationSlice.ts(374,68): error TS2345: Argument of type 'number | void' is not assignable to parameter of type 'number'.
  Type 'void' is not assignable to type 'number'.
src/pages/configuration/store/configurationSlice.ts(406,72): error TS2345: Argument of type 'void | { category?: string; scope?: string; }' is not assignable to parameter of type '{ category?: string; scope?: string; }'.
  Type 'void' is not assignable to type '{ category?: string; scope?: string; }'.
src/pages/configuration/store/configurationSlice.ts(490,47): error TS2339: Property 'data' does not exist on type 'SystemConfiguration[]'.
src/pages/configuration/store/configurationSlice.ts(492,49): error TS2339: Property 'total' does not exist on type 'SystemConfiguration[]'.
src/pages/configuration/store/configurationSlice.ts(508,53): error TS2339: Property 'data' does not exist on type 'SystemConfiguration[]'.
src/pages/configuration/store/configurationSlice.ts(523,53): error TS2339: Property 'data' does not exist on type 'SystemConfiguration'.
src/pages/configuration/store/configurationSlice.ts(539,42): error TS2339: Property 'data' does not exist on type 'SystemConfiguration & { key: string; }'.
src/pages/configuration/store/configurationSlice.ts(540,56): error TS2339: Property 'data' does not exist on type 'SystemConfiguration & { key: string; }'.
src/pages/configuration/store/configurationSlice.ts(542,86): error TS2339: Property 'data' does not exist on type 'SystemConfiguration & { key: string; }'.
src/pages/configuration/store/configurationSlice.ts(543,55): error TS2339: Property 'data' does not exist on type 'SystemConfiguration & { key: string; }'.
src/pages/configuration/store/configurationSlice.ts(559,28): error TS2339: Property 'data' does not exist on type 'SystemConfiguration'.
src/pages/configuration/store/configurationSlice.ts(560,52): error TS2339: Property 'data' does not exist on type 'SystemConfiguration'.
src/pages/configuration/store/configurationSlice.ts(596,40): error TS2339: Property 'data' does not exist on type 'ConfigurationHistory[]'.
src/pages/configuration/store/configurationSlice.ts(597,56): error TS2339: Property 'total' does not exist on type 'ConfigurationHistory[]'.
src/pages/configuration/store/configurationSlice.ts(613,46): error TS2339: Property 'data' does not exist on type 'ConfigurationHistory[]'.
src/pages/contacts/components/ContactsDashboard.tsx(8,10): error TS2305: Module '"@apollo/client"' has no exported member 'useQuery'.
src/pages/contacts/components/ContactsList.tsx(8,10): error TS2305: Module '"@apollo/client"' has no exported member 'useQuery'.
src/pages/contacts/components/CreateContactDialog.tsx(8,10): error TS2305: Module '"@apollo/client"' has no exported member 'useMutation'.
src/pages/contacts/components/CreateContactDialog.tsx(39,19): error TS7006: Parameter 'data' implicitly has an 'any' type.
src/pages/contacts/components/CreateContactDialog.tsx(44,15): error TS7006: Parameter 'error' implicitly has an 'any' type.
src/pages/dashboard/components/DashboardOverview.tsx(28,10): error TS2614: Module '"./DashboardCharts"' has no exported member 'DashboardCharts'. Did you mean to use 'import DashboardCharts from "./DashboardCharts"' instead?
src/pages/dashboard/components/DashboardOverview.tsx(29,10): error TS2614: Module '"./RecentActivities"' has no exported member 'RecentActivities'. Did you mean to use 'import RecentActivities from "./RecentActivities"' instead?
src/pages/dashboard/components/DashboardOverview.tsx(30,10): error TS2614: Module '"./UpcomingAppointments"' has no exported member 'UpcomingAppointments'. Did you mean to use 'import UpcomingAppointments from "./UpcomingAppointments"' instead?
src/pages/dashboard/components/DashboardOverview.tsx(31,10): error TS2724: '"./HealthAlerts"' has no exported member named 'HealthAlerts'. Did you mean 'HealthAlert'?
src/pages/dashboard/components/DashboardOverview.tsx(121,38): error TS2339: Property 'name' does not exist on type 'WritableDraft<User>'.
src/pages/dashboard/components/DashboardOverview.tsx(163,33): error TS2322: Type '{ onFiltersChange: (filters: any) => void; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'onFiltersChange' does not exist on type 'IntrinsicAttributes'.
src/pages/dashboard/components/DashboardOverview.tsx(163,51): error TS7006: Parameter 'filters' implicitly has an 'any' type.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(50,5): error TS2353: Object literal may only specify known properties, and 'dateFrom' does not exist in type 'DashboardStatisticsFilters'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(65,5): error TS2353: Object literal may only specify known properties, and 'dateFrom' does not exist in type 'DashboardStatisticsFilters'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(76,5): error TS2339: Property 'data' does not exist on type '{ alerts: any[]; loading: boolean; error: Error; refresh: () => Promise<void>; }'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(77,5): error TS2339: Property 'isLoading' does not exist on type '{ alerts: any[]; loading: boolean; error: Error; refresh: () => Promise<void>; }'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(153,14): error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ReactNode'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(162,14): error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ReactNode'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(171,14): error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ReactNode'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(181,14): error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ReactNode'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(191,14): error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ReactNode'.
src/pages/dashboard/components/DashboardStatsWithRealData.tsx(201,14): error TS2322: Type 'ForwardRefExoticComponent<Omit<LucideProps, "ref"> & RefAttributes<SVGSVGElement>>' is not assignable to type 'ReactNode'.
src/pages/dashboard/components/index.ts(36,3): error TS7018: Object literal's property 'AlertCard' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(37,3): error TS7018: Object literal's property 'AlertsList' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(38,3): error TS7018: Object literal's property 'AlertModal' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(43,3): error TS7018: Object literal's property 'ActionGrid' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(46,3): error TS7018: Object literal's property 'StatisticsChart' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(47,3): error TS7018: Object literal's property 'TrendChart' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(48,3): error TS7018: Object literal's property 'PieChart' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(49,3): error TS7018: Object literal's property 'LineChart' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(50,3): error TS7018: Object literal's property 'BarChart' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(54,3): error TS7018: Object literal's property 'ChartWidget' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(55,3): error TS7018: Object literal's property 'ListWidget' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(58,3): error TS7018: Object literal's property 'DateRangePicker' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(59,3): error TS7018: Object literal's property 'ScopeSelector' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(60,3): error TS7018: Object literal's property 'RefreshButton' implicitly has an 'any' type.
src/pages/dashboard/components/index.ts(61,3): error TS7018: Object literal's property 'DashboardFilters' implicitly has an 'any' type.
src/pages/dashboard/components/RealDataIntegrationExample.tsx(96,56): error TS2345: Argument of type '{ nurseId: string; startDate: string; endDate: string; }' is not assignable to parameter of type 'string'.
src/pages/dashboard/components/RealDataIntegrationExample.tsx(211,73): error TS2339: Property 'data' does not exist on type '{ appointments: Appointment[]; }'.
src/pages/dashboard/components/RealDataIntegrationExample.tsx(213,42): error TS2339: Property 'data' does not exist on type '{ appointments: Appointment[]; }'.
src/pages/dashboard/components/RealDataIntegrationExample.tsx(216,43): error TS2339: Property 'data' does not exist on type '{ appointments: Appointment[]; }'.
src/pages/dashboard/Dashboard.tsx(159,25): error TS2304: Cannot find name 'user'.
src/pages/dashboard/Dashboard.tsx(162,9): error TS2304: Cannot find name 'user'.
src/pages/dashboard/Dashboard.tsx(172,28): error TS2304: Cannot find name 'user'.
src/pages/dashboard/Dashboard.tsx(191,28): error TS2304: Cannot find name 'user'.
src/pages/dashboard/DashboardReduxExample.tsx(223,25): error TS2339: Property 'activeAppointments' does not exist on type 'WritableDraft<DashboardStats>'.
src/pages/dashboard/DashboardReduxExample.tsx(249,25): error TS2339: Property 'healthRecordsToday' does not exist on type 'WritableDraft<DashboardStats>'.
src/pages/dashboard/DashboardReduxExample.tsx(262,25): error TS2339: Property 'medicationsAdministered' does not exist on type 'WritableDraft<DashboardStats>'.
src/pages/dashboard/DashboardReduxExample.tsx(275,25): error TS2339: Property 'emergencyContacts' does not exist on type 'WritableDraft<DashboardStats>'.
src/pages/dashboard/DashboardReduxExample.tsx(316,78): error TS2339: Property 'title' does not exist on type 'WritableDraft<DashboardRecentActivity>'.
src/pages/dashboard/DashboardReduxExample.tsx(317,66): error TS2339: Property 'description' does not exist on type 'WritableDraft<DashboardRecentActivity>'.
src/pages/dashboard/DashboardReduxExample.tsx(318,71): error TS2339: Property 'timestamp' does not exist on type 'WritableDraft<DashboardRecentActivity>'.
src/pages/dashboard/DashboardReduxExample.tsx(335,81): error TS2339: Property 'studentName' does not exist on type 'WritableDraft<DashboardUpcomingAppointment>'.
src/pages/dashboard/DashboardReduxExample.tsx(337,74): error TS2339: Property 'scheduledTime' does not exist on type 'WritableDraft<DashboardUpcomingAppointment>'.
src/pages/dashboard/store/dashboardSlice.ts(288,24): error TS2554: Expected 1-2 arguments, but got 0.
src/pages/health/Appointments.tsx(34,15): error TS2305: Module '"./types"' has no exported member 'ViewMode'.
src/pages/health/Appointments.tsx(34,25): error TS2305: Module '"./types"' has no exported member 'AppointmentFilters'.
src/pages/health/Appointments.tsx(34,45): error TS2305: Module '"./types"' has no exported member 'AppointmentSortColumn'.
src/pages/health/Appointments.tsx(71,5): error TS2339: Property 'waitlist' does not exist on type '{ appointments: any[]; isLoading: boolean; error: any; }'.
src/pages/health/Appointments.tsx(72,5): error TS2339: Property 'statistics' does not exist on type '{ appointments: any[]; isLoading: boolean; error: any; }'.
src/pages/health/Appointments.tsx(73,5): error TS2339: Property 'loading' does not exist on type '{ appointments: any[]; isLoading: boolean; error: any; }'.
src/pages/health/Appointments.tsx(74,5): error TS2339: Property 'loadData' does not exist on type '{ appointments: any[]; isLoading: boolean; error: any; }'.
src/pages/health/Appointments.tsx(75,27): error TS2554: Expected 0 arguments, but got 1.
src/pages/health/Appointments.tsx(127,10): error TS2304: Cannot find name 'user'.
src/pages/health/Appointments.tsx(133,57): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(44,27): error TS2307: Cannot find module '../../components/healthRecords/tabs/VitalsTab' or its corresponding type declarations.
src/pages/health/HealthRecords.tsx(46,37): error TS2307: Cannot find module '../../components/modals/SessionExpiredModal' or its corresponding type declarations.
src/pages/health/HealthRecords.tsx(47,40): error TS2307: Cannot find module '../../components/modals/SensitiveRecordWarning' or its corresponding type declarations.
src/pages/health/HealthRecords.tsx(48,35): error TS2307: Cannot find module '../../components/modals/HealthRecordModal' or its corresponding type declarations.
src/pages/health/HealthRecords.tsx(50,15): error TS2305: Module '"./types"' has no exported member 'TabType'.
src/pages/health/HealthRecords.tsx(51,15): error TS2305: Module '"./types"' has no exported member 'HealthRecordFilters'.
src/pages/health/HealthRecords.tsx(89,5): error TS2339: Property 'activeTab' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(90,5): error TS2339: Property 'healthRecords' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(91,5): error TS2339: Property 'allergies' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(92,5): error TS2339: Property 'chronicConditions' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(93,5): error TS2339: Property 'vaccinations' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(94,5): error TS2339: Property 'growthMeasurements' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(95,5): error TS2339: Property 'screenings' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(96,5): error TS2339: Property 'healthSummary' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(97,5): error TS2339: Property 'loading' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(98,5): error TS2339: Property 'summaryLoading' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(99,5): error TS2339: Property 'isExporting' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(100,5): error TS2339: Property 'setActiveTab' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(101,5): error TS2339: Property 'handleExport' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(102,5): error TS2339: Property 'loadTabData' does not exist on type '{ records: any[]; isLoading: boolean; error: any; }'.
src/pages/health/HealthRecords.tsx(103,32): error TS2554: Expected 0 arguments, but got 1.
src/pages/health/HealthRecords.tsx(197,9): error TS2322: Type '{ user: any; selectedStudentId: any; isExporting: any; onNewRecord: () => void; onImport: () => void; onExport: (format: "json" | "pdf") => Promise<void>; onSettings: () => void; onReports: () => void; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'user' does not exist on type 'IntrinsicAttributes'.
src/pages/health/HealthRecords.tsx(197,15): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(213,11): error TS2322: Type '{ selectedStudentId: any; onStudentSelect: (student: any) => void; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'selectedStudentId' does not exist on type 'IntrinsicAttributes'.
src/pages/health/HealthRecords.tsx(214,29): error TS7006: Parameter 'student' implicitly has an 'any' type.
src/pages/health/HealthRecords.tsx(370,27): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(373,24): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(395,14): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(451,17): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(508,21): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(516,21): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(532,21): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(539,21): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(546,21): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(550,69): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(552,41): error TS2304: Cannot find name 'user'.
src/pages/health/HealthRecords.tsx(561,11): error TS2304: Cannot find name 'expireSession'.
src/pages/health/hooks/useAppointmentsData.ts(6,5): error TS7018: Object literal's property 'appointments' implicitly has an 'any[]' type.
src/pages/health/hooks/useAppointmentsData.ts(8,5): error TS7018: Object literal's property 'error' implicitly has an 'any' type.
src/pages/health/hooks/useHealthRecordsPageData.ts(6,5): error TS7018: Object literal's property 'records' implicitly has an 'any[]' type.
src/pages/health/hooks/useHealthRecordsPageData.ts(8,5): error TS7018: Object literal's property 'error' implicitly has an 'any' type.
src/pages/health/Medications.tsx(29,36): error TS2307: Cannot find module './hooks/useMedicationsData' or its corresponding type declarations.
src/pages/health/Medications.tsx(40,3): error TS2305: Module '"./types"' has no exported member 'MedicationTab'.
src/pages/health/Medications.tsx(41,3): error TS2305: Module '"./types"' has no exported member 'MedicationFilters'.
src/pages/health/Medications.tsx(42,3): error TS2305: Module '"./types"' has no exported member 'MedicationFormData'.
src/pages/health/Medications.tsx(43,3): error TS2305: Module '"./types"' has no exported member 'MedicationFormErrors'.
src/pages/health/Medications.tsx(44,3): error TS2305: Module '"./types"' has no exported member 'Medication'.
src/pages/health/Medications.tsx(250,9): error TS2322: Type '{ activeTab: MedicationTab; onAddMedication: () => void; onReportReaction: () => void; onInventoryAction: () => void; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'activeTab' does not exist on type 'IntrinsicAttributes'.
src/pages/health/Medications.tsx(257,24): error TS2322: Type '{ activeTab: MedicationTab; onTabChange: Dispatch<any>; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'activeTab' does not exist on type 'IntrinsicAttributes'.
src/pages/health/Medications.tsx(262,11): error TS2322: Type '{ onTabChange: (tab: string) => void; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'onTabChange' does not exist on type 'IntrinsicAttributes'.
src/pages/health/Medications.tsx(278,13): error TS2322: Type '{ medications: any; searchTerm: any; onSearchChange: (value: any) => void; onMedicationSelect: (medication: Medication) => void; loading: any; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'medications' does not exist on type 'IntrinsicAttributes'.
src/pages/health/Medications.tsx(280,30): error TS7006: Parameter 'value' implicitly has an 'any' type.
src/pages/health/Medications.tsx(289,34): error TS2322: Type '{ data: any; loading: any; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'data' does not exist on type 'IntrinsicAttributes'.
src/pages/health/Medications.tsx(294,34): error TS2322: Type '{ data: any; loading: any; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'data' does not exist on type 'IntrinsicAttributes'.
src/pages/health/Medications.tsx(300,11): error TS2322: Type '{ data: any; loading: any; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'data' does not exist on type 'IntrinsicAttributes'.
src/pages/health/Medications.tsx(307,9): error TS2322: Type '{ show: boolean; formData: MedicationFormData; formErrors: MedicationFormErrors; onClose: () => void; onSubmit: (e: FormEvent<Element>) => void; onFormDataChange: Dispatch<any>; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'show' does not exist on type 'IntrinsicAttributes'.
src/pages/health/Medications.tsx(316,9): error TS2322: Type '{ show: boolean; medication: any; onClose: () => void; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'show' does not exist on type 'IntrinsicAttributes'.
src/pages/incidents/IncidentReportDetail.tsx(33,25): error TS2307: Cannot find module './index.main' or its corresponding type declarations.
src/pages/incidents/IncidentReports.tsx(20,25): error TS2307: Cannot find module './index.main' or its corresponding type declarations.
src/pages/incidents/IncidentReports.tsx(23,46): error TS2307: Cannot find module './IncidentWitnesses' or its corresponding type declarations.
src/pages/incidents/IncidentReports.tsx(24,44): error TS2307: Cannot find module './IncidentActions' or its corresponding type declarations.
src/pages/incidents/IncidentReports.tsx(25,45): error TS2307: Cannot find module './IncidentEvidence' or its corresponding type declarations.
src/pages/incidents/IncidentReports.tsx(26,45): error TS2307: Cannot find module './IncidentTimeline' or its corresponding type declarations.
src/pages/incidents/IncidentReports.tsx(27,43): error TS2307: Cannot find module './IncidentExport' or its corresponding type declarations.
src/pages/incidents/index.ts(8,38): error TS2307: Cannot find module './Incidents' or its corresponding type declarations.
src/pages/incidents/store/incidentReportsSlice.ts(31,36): error TS2307: Cannot find module '../../services/modules/incidentReportsApi' or its corresponding type declarations.
src/pages/incidents/store/incidentReportsSlice.ts(901,18): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ LOW: number; MEDIUM: number; HIGH: number; CRITICAL: number; }'.
src/pages/incidents/store/incidentReportsSlice.ts(902,18): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ LOW: number; MEDIUM: number; HIGH: number; CRITICAL: number; }'.
src/pages/integration/routes.tsx(24,3): error TS2724: '"./components"' has no exported member named 'EHRIntegrationSetup'. Did you mean 'SISIntegrationSetup'?
src/pages/inventory/InventoryAlerts.tsx(16,10): error TS2614: Module '"../../contexts/AuthContext"' has no exported member 'useAuthContext'. Did you mean to use 'import useAuthContext from "../../contexts/AuthContext"' instead?
src/pages/inventory/InventoryItems.tsx(64,40): error TS2307: Cannot find module '../../store' or its corresponding type declarations.
src/pages/inventory/InventoryItems.tsx(131,36): error TS2367: This comparison appears to be unintentional because the types 'string | number | true' and 'false' have no overlap.
src/pages/inventory/InventoryItems.tsx(535,35): error TS2339: Property 'search' does not exist on type 'InventoryFilters'.
src/pages/inventory/InventoryItems.tsx(536,55): error TS2353: Object literal may only specify known properties, and 'search' does not exist in type 'Partial<InventoryFilters>'.
src/pages/inventory/InventoryItems.tsx(540,63): error TS2339: Property 'target' does not exist on type 'string | number | (string | number)[]'.
  Property 'target' does not exist on type 'string'.
src/pages/inventory/InventoryTransactions.tsx(15,10): error TS2614: Module '"../../contexts/AuthContext"' has no exported member 'useAuthContext'. Did you mean to use 'import useAuthContext from "../../contexts/AuthContext"' instead?
src/pages/inventory/InventoryVendors.tsx(14,10): error TS2614: Module '"../../contexts/AuthContext"' has no exported member 'useAuthContext'. Did you mean to use 'import useAuthContext from "../../contexts/AuthContext"' instead?
src/pages/inventory/routes.tsx(4,10): error TS2724: '"./components"' has no exported member named 'InventoryItems'. Did you mean 'InventoryList'?
src/pages/inventory/routes.tsx(4,26): error TS2724: '"./components"' has no exported member named 'InventoryAlerts'. Did you mean 'InventoryList'?
src/pages/inventory/store/inventorySlice.ts(585,38): error TS2339: Property 'data' does not exist on type '{ items: InventoryItem[]; pagination: { page: number; limit: number; total: number; totalPages: number; }; }'.
src/pages/inventory/store/inventorySlice.ts(591,51): error TS2551: Property 'pages' does not exist on type '{ page: number; limit: number; total: number; totalPages: number; }'. Did you mean 'page'?
src/pages/inventory/store/inventorySlice.ts(607,45): error TS2339: Property 'data' does not exist on type 'InventoryItem'.
src/pages/inventory/store/inventorySlice.ts(621,45): error TS2339: Property 'data' does not exist on type '{ transactions: InventoryTransaction[]; pagination: { page: number; limit: number; total: number; totalPages: number; }; }'.
src/pages/inventory/store/inventorySlice.ts(627,51): error TS2551: Property 'pages' does not exist on type '{ page: number; limit: number; total: number; totalPages: number; }'. Did you mean 'page'?
src/pages/inventory/store/inventorySlice.ts(643,52): error TS2339: Property 'data' does not exist on type 'MaintenanceLog[]'.
src/pages/inventory/store/inventorySlice.ts(657,39): error TS2339: Property 'data' does not exist on type 'InventoryAlert[]'.
src/pages/inventory/store/inventorySlice.ts(671,38): error TS2339: Property 'data' does not exist on type 'InventoryStats'.
src/pages/inventory/store/inventorySlice.ts(685,47): error TS2339: Property 'data' does not exist on type 'UsageAnalytics[]'.
src/pages/inventory/store/inventorySlice.ts(699,52): error TS2339: Property 'data' does not exist on type 'SupplierPerformance[]'.
src/pages/inventory/store/inventorySlice.ts(713,42): error TS2339: Property 'data' does not exist on type '{ totalValue: number; breakdown: { category: string; value: number; }[]; }'.
src/pages/inventory/store/inventorySlice.ts(727,46): error TS2339: Property 'data' does not exist on type 'InventoryItem[]'.
src/pages/medications/components/AdverseReactionsTab.tsx(145,43): error TS2339: Property 'name' does not exist on type 'Medication'.
src/pages/medications/components/index.ts(72,10): error TS2614: Module '"./MedicationDetails"' has no exported member 'MedicationDetails'. Did you mean to use 'import MedicationDetails from "./MedicationDetails"' instead?
src/pages/medications/components/index.ts(78,10): error TS2614: Module '"./MedicationHistory"' has no exported member 'MedicationHistory'. Did you mean to use 'import MedicationHistory from "./MedicationHistory"' instead?
src/pages/medications/components/index.ts(84,10): error TS2614: Module '"./MedicationTimeline"' has no exported member 'MedicationTimeline'. Did you mean to use 'import MedicationTimeline from "./MedicationTimeline"' instead?
src/pages/medications/components/index.ts(90,10): error TS2614: Module '"./MedicationNotes"' has no exported member 'MedicationNotes'. Did you mean to use 'import MedicationNotes from "./MedicationNotes"' instead?
src/pages/medications/components/index.ts(100,10): error TS2614: Module '"./MedicationAdministration"' has no exported member 'MedicationAdministration'. Did you mean to use 'import MedicationAdministration from "./MedicationAdministration"' instead?
src/pages/medications/components/InventoryTab.tsx(141,43): error TS2339: Property 'name' does not exist on type 'Medication'.
src/pages/medications/components/MedicationCard.tsx(9,10): error TS2724: '"@/types/medications"' has no exported member named 'Medication'. Did you mean 'MedicationTab'?
src/pages/medications/components/MedicationCard.tsx(26,14): error TS2345: Argument of type 'AsyncThunkAction<{ id: string; isActive: boolean; }, string, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction>; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>' is not assignable to parameter of type 'UnknownAction'.
src/pages/medications/components/MedicationsDashboard.tsx(14,11): error TS2339: Property 'statistics' does not exist on type '{}'.
src/pages/medications/components/MedicationsDashboard.tsx(14,23): error TS2339: Property 'medications' does not exist on type '{}'.
src/pages/medications/components/MedicationsDashboard.tsx(14,36): error TS2339: Property 'loading' does not exist on type '{}'.
src/pages/medications/components/MedicationsDashboard.tsx(17,14): error TS2345: Argument of type 'AsyncThunkAction<Record<string, any>, void, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction>; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>' is not assignable to parameter of type 'UnknownAction'.
src/pages/medications/components/MedicationsDashboard.tsx(18,14): error TS2345: Argument of type 'AsyncThunkAction<{ data: any[]; total: number; }, void | { page?: number; limit?: number; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction>; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>' is not assignable to parameter of type 'UnknownAction'.
src/pages/medications/components/MedicationsList.tsx(28,5): error TS2339: Property 'medications' does not exist on type '{}'.
src/pages/medications/components/MedicationsList.tsx(29,5): error TS2339: Property 'loading' does not exist on type '{}'.
src/pages/medications/components/MedicationsList.tsx(30,5): error TS2339: Property 'error' does not exist on type '{}'.
src/pages/medications/components/MedicationsList.tsx(31,5): error TS2339: Property 'filters' does not exist on type '{}'.
src/pages/medications/components/MedicationsList.tsx(32,5): error TS2339: Property 'pagination' does not exist on type '{}'.
src/pages/medications/components/MedicationsList.tsx(39,14): error TS2345: Argument of type 'AsyncThunkAction<{ data: any[]; total: number; }, void | { page?: number; limit?: number; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction>; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>' is not assignable to parameter of type 'UnknownAction'.
src/pages/medications/components/MedicationsList.tsx(79,37): error TS2345: Argument of type 'AsyncThunkAction<{ data: any[]; total: number; }, void | { page?: number; limit?: number; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction>; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>' is not assignable to parameter of type 'UnknownAction'.
src/pages/medications/components/MedicationsList.tsx(79,56): error TS2353: Object literal may only specify known properties, and 'studentId' does not exist in type '{ page?: number; limit?: number; }'.
src/pages/medications/components/MedicationsList.tsx(128,28): error TS7006: Parameter 'medication' implicitly has an 'any' type.
src/pages/medications/components/MedicationsList.tsx(133,46): error TS2345: Argument of type 'AsyncThunkAction<{ data: any[]; total: number; }, void | { page?: number; limit?: number; }, { rejectValue: string; state?: unknown; dispatch?: ThunkDispatch<unknown, unknown, UnknownAction>; extra?: unknown; serializedErrorType?: unknown; pendingMeta?: unknown; fulfilledMeta?: unknown; rejectedMeta?: unknown; }>' is not assignable to parameter of type 'UnknownAction'.
src/pages/medications/components/MedicationsList.tsx(133,65): error TS2353: Object literal may only specify known properties, and 'studentId' does not exist in type '{ page?: number; limit?: number; }'.
src/pages/medications/components/MedicationsTab.tsx(16,44): error TS2307: Cannot find module '../../../../utils/medications' or its corresponding type declarations.
src/pages/medications/components/MedicationsTab.tsx(38,9): error TS2339: Property 'name' does not exist on type 'Medication'.
src/pages/medications/components/MedicationsTab.tsx(136,40): error TS2345: Argument of type '(medication: LegacyMedicationWithCount) => JSX.Element' is not assignable to parameter of type '(value: Medication, index: number, array: Medication[]) => Element'.
  Types of parameters 'medication' and 'value' are incompatible.
    Property 'name' is missing in type 'Medication' but required in type 'LegacyMedicationWithCount'.
src/pages/medications/components/RemindersTab.tsx(17,28): error TS2307: Cannot find module '../../../../utils/medications' or its corresponding type declarations.
src/pages/medications/components/tabs/MedicationsInventoryTab.tsx(15,40): error TS2307: Cannot find module '../../../../../hooks/domains/inventory' or its corresponding type declarations.
src/pages/medications/components/tabs/MedicationsInventoryTab.tsx(16,40): error TS2307: Cannot find module '../../../../../utils/medications' or its corresponding type declarations.
src/pages/medications/components/tabs/MedicationsListTab.tsx(15,45): error TS2307: Cannot find module '../../../../../hooks/domains/medications' or its corresponding type declarations.
src/pages/medications/components/tabs/MedicationsListTab.tsx(16,29): error TS2307: Cannot find module '../../../../../hooks/domains/students' or its corresponding type declarations.
src/pages/medications/components/tabs/MedicationsListTab.tsx(252,36): error TS7006: Parameter 'student' implicitly has an 'any' type.
src/pages/medications/hooks/useMedicationsData.ts(6,5): error TS7018: Object literal's property 'medications' implicitly has an 'any[]' type.
src/pages/medications/hooks/useMedicationsData.ts(8,5): error TS7018: Object literal's property 'error' implicitly has an 'any' type.
src/pages/medications/index.ts(8,40): error TS2307: Cannot find module './Medications' or its corresponding type declarations.
src/pages/medications/store/medicationsSlice.ts(9,35): error TS2307: Cannot find module '@/types/students' or its corresponding type declarations.
src/pages/medications/store/medicationsSlice.ts(10,10): error TS2305: Module '"@/services/core/ApiClient"' has no exported member 'medicationsApi'.
src/pages/purchase-order/store/purchaseOrderSlice.ts(2,10): error TS2724: '"../../../services/modules/purchaseOrderApi"' has no exported member named 'purchaseOrderApi'. Did you mean 'PurchaseOrderApi'?
src/pages/reports/ReportsGenerate.tsx(15,10): error TS2614: Module '"../../contexts/AuthContext"' has no exported member 'useAuthContext'. Did you mean to use 'import useAuthContext from "../../contexts/AuthContext"' instead?
src/pages/reports/ScheduledReports.tsx(15,10): error TS2614: Module '"../../contexts/AuthContext"' has no exported member 'useAuthContext'. Did you mean to use 'import useAuthContext from "../../contexts/AuthContext"' instead?
src/pages/students/components/modals/StudentDetailsModal.tsx(114,28): error TS2339: Property 'name' does not exist on type 'StudentMedication'.
src/pages/students/components/StudentHealthRecord.tsx(16,32): error TS2307: Cannot find module '../../../../contexts/AuthContext' or its corresponding type declarations.
src/pages/students/components/StudentHealthRecord.tsx(17,10): error TS2305: Module '"@/services/core/ApiClient"' has no exported member 'healthRecordsApi'.
src/pages/students/components/StudentSelector.tsx(15,10): error TS2305: Module '"@/services/core/ApiClient"' has no exported member 'studentsApi'.
src/pages/students/components/StudentSelector.tsx(51,32): error TS7006: Parameter 's' implicitly has an 'any' type.
src/pages/students/store/emergencyContactsSlice.ts(9,90): error TS2307: Cannot find module '@/types/students' or its corresponding type declarations.
src/pages/students/store/emergencyContactsSlice.ts(10,10): error TS2305: Module '"@/services/core/ApiClient"' has no exported member 'emergencyContactsApi'.
src/pages/students/store/healthRecordsSlice.ts(9,30): error TS2307: Cannot find module '@/types/students' or its corresponding type declarations.
src/pages/students/store/healthRecordsSlice.ts(10,10): error TS2305: Module '"@/services/core/ApiClient"' has no exported member 'healthRecordsApi'.
src/pages/students/store/studentsSlice.ts(8,79): error TS2307: Cannot find module '@/types/students' or its corresponding type declarations.
src/pages/students/store/studentsSlice.ts(11,10): error TS2305: Module '"@/services/core/ApiClient"' has no exported member 'studentsApi'.
src/pages/students/store/studentsSlice.ts(184,5): error TS2698: Spread types may only be created from object types.
src/pages/students/store/studentsSlice.ts(202,11): error TS2698: Spread types may only be created from object types.
src/pages/students/Students.tsx(24,10): error TS2614: Module '"../../contexts/AuthContext"' has no exported member 'useAuthContext'. Did you mean to use 'import useAuthContext from "../../contexts/AuthContext"' instead?
src/pages/vendor/store/vendorSlice.ts(2,10): error TS2724: '"../../../services/modules/vendorApi"' has no exported member named 'vendorApi'. Did you mean 'VendorApi'?
src/routes/guards.tsx(30,10): error TS2614: Module '"../contexts/AuthContext"' has no exported member 'useAuthContext'. Did you mean to use 'import useAuthContext from "../contexts/AuthContext"' instead?
src/routes/index.tsx(30,10): error TS2305: Module '"../hooks/utilities/AuthContext"' has no exported member 'useAuthContext'.
src/routes/index.tsx(606,57): error TS2322: Type '"MANAGER"' is not assignable to type 'UserRole'.
src/routes/index.tsx(620,57): error TS2322: Type '"MANAGER"' is not assignable to type 'UserRole'.
src/routes/index.tsx(634,57): error TS2322: Type '"MANAGER"' is not assignable to type 'UserRole'.
src/routes/index.tsx(648,57): error TS2322: Type '"MANAGER"' is not assignable to type 'UserRole'.
src/routes/routeUtils.ts(100,3): error TS1117: An object literal cannot have multiple properties with the same name.
src/routes/routeUtils.ts(133,3): error TS1117: An object literal cannot have multiple properties with the same name.
src/routes/routeUtils.ts(166,3): error TS1117: An object literal cannot have multiple properties with the same name.
src/routes/routeUtils.ts(344,45): error TS2345: Argument of type 'string' is not assignable to parameter of type '"/login" | "/forgot-password" | "/reset-password" | "/verify-email"'.
src/routes/routeUtils.ts(698,49): error TS2345: Argument of type 'string' is not assignable to parameter of type '"/login" | "/forgot-password" | "/reset-password" | "/verify-email"'.
src/schemas/complianceSchemas.ts(299,15): error TS2554: Expected 2-3 arguments, but got 1.
src/schemas/complianceSchemas.ts(301,22): error TS2554: Expected 2-3 arguments, but got 1.
src/schemas/complianceSchemas.ts(401,14): error TS2554: Expected 2-3 arguments, but got 1.
src/schemas/documentSchemas.ts(113,5): error TS2345: Argument of type '(val: any) => { message: string; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/schemas/documentSchemas.ts(113,6): error TS7006: Parameter 'val' implicitly has an 'any' type.
src/schemas/documentSchemas.ts(226,5): error TS2345: Argument of type '(data: any) => { message: string; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/schemas/documentSchemas.ts(226,6): error TS7006: Parameter 'data' implicitly has an 'any' type.
src/schemas/documentSchemas.ts(254,21): error TS2554: Expected 2-3 arguments, but got 1.
src/schemas/documentSchemas.ts(349,19): error TS2554: Expected 2-3 arguments, but got 1.
src/schemas/documentSchemas.ts(359,19): error TS2554: Expected 2-3 arguments, but got 1.
src/services/api.ts(40,1): error TS2308: Module './modules/analyticsApi' has already exported a member named 'DashboardData'. Consider explicitly re-exporting to resolve the ambiguity.
src/services/api.ts(46,1): error TS2308: Module './modules/administrationApi' has already exported a member named 'AdministrationApi'. Consider explicitly re-exporting to resolve the ambiguity.
src/services/api.ts(46,1): error TS2308: Module './modules/administrationApi' has already exported a member named 'createAdministrationApi'. Consider explicitly re-exporting to resolve the ambiguity.
src/services/audit/config.ts(259,14): error TS2739: Type '{ DELETE: AuditSeverity.CRITICAL; DELETE_HEALTH_RECORD: AuditSeverity.CRITICAL; DELETE_ALLERGY: AuditSeverity.CRITICAL; DELETE_CHRONIC_CONDITION: AuditSeverity.CRITICAL; ... 83 more ...; VIEW_STUDENTS: AuditSeverity.LOW; }' is missing the following properties from type 'Record<AuditAction, AuditSeverity>': QUERY_ERROR, NETWORK_ERROR, GRAPHQL_ERROR
src/services/audit/config.ts(409,14): error TS2739: Type '{ HEALTH_RECORD: true; ALLERGY: true; CHRONIC_CONDITION: true; VACCINATION: true; SCREENING: true; GROWTH_MEASUREMENT: true; VITAL_SIGNS: true; MEDICATION: true; STUDENT_MEDICATION: true; MEDICATION_LOG: true; ... 6 more ...; INVENTORY: false; }' is missing the following properties from type 'Record<AuditResourceType, boolean>': API, APPOINTMENT
src/services/cache/CacheManager.ts(103,24): error TS2345: Argument of type '"hit"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(104,24): error TS2345: Argument of type '"miss"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(105,24): error TS2345: Argument of type '"set"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(106,24): error TS2345: Argument of type '"invalidate"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(107,24): error TS2345: Argument of type '"evict"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(108,24): error TS2345: Argument of type '"persist"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(109,24): error TS2345: Argument of type '"restore"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(255,20): error TS2345: Argument of type '"set"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(303,20): error TS2345: Argument of type '"invalidate"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(525,22): error TS2345: Argument of type '"evict"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(560,20): error TS2345: Argument of type '"hit"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(570,20): error TS2345: Argument of type '"miss"' is not assignable to parameter of type 'CacheEventType'.
src/services/cache/CacheManager.ts(706,10): error TS2554: Expected 2-3 arguments, but got 1.
src/services/cache/index.ts(117,32): error TS2304: Cannot find name 'getPersistenceManager'.
src/services/cache/index.ts(130,26): error TS2304: Cannot find name 'getCacheManager'.
src/services/cache/index.ts(155,26): error TS2304: Cannot find name 'getCacheManager'.
src/services/cache/index.ts(160,32): error TS2304: Cannot find name 'getPersistenceManager'.
src/services/cache/index.ts(177,24): error TS2304: Cannot find name 'CacheManager'.
src/services/cache/index.ts(178,33): error TS2304: Cannot find name 'PersistenceManager'.
src/services/cache/index.ts(184,24): error TS2304: Cannot find name 'getCacheManager'.
src/services/cache/index.ts(185,30): error TS2304: Cannot find name 'getPersistenceManager'.
src/services/cache/index.ts(189,35): error TS2304: Cannot find name 'getOptimisticUpdateManager'.
src/services/cache/index.ts(210,3): error TS18004: No value exists in scope for the shorthand property 'getCacheManager'. Either declare one or provide an initializer.
src/services/cache/index.ts(211,3): error TS18004: No value exists in scope for the shorthand property 'getInvalidationStrategy'. Either declare one or provide an initializer.
src/services/cache/index.ts(212,3): error TS18004: No value exists in scope for the shorthand property 'getOptimisticUpdateManager'. Either declare one or provide an initializer.
src/services/cache/index.ts(213,3): error TS18004: No value exists in scope for the shorthand property 'getPersistenceManager'. Either declare one or provide an initializer.
src/services/cache/index.ts(221,3): error TS18004: No value exists in scope for the shorthand property 'queryKeys'. Either declare one or provide an initializer.
src/services/cache/index.ts(224,11): error TS2304: Cannot find name 'CACHE_CONFIG'.
src/services/cache/index.ts(225,8): error TS2304: Cannot find name 'TTL_CONFIG'.
src/services/cache/index.ts(226,22): error TS2304: Cannot find name 'REFETCH_STRATEGIES'.
src/services/cache/InvalidationStrategy.ts(632,36): error TS2339: Property 'test' does not exist on type 'string | RegExp'.
  Property 'test' does not exist on type 'string'.
src/services/cache/InvalidationStrategy.ts(700,5): error TS2322: Type 'string' is not assignable to type '"update" | "delete" | "create" | "bulk"'.
src/services/cache/OptimisticUpdateManager.ts(118,7): error TS2352: Conversion of type 'string' to type 'unknown[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
src/services/cache/OptimisticUpdateManager.ts(163,9): error TS1361: 'ConflictStrategy' cannot be used as a value because it was imported using 'import type'.
src/services/cache/OptimisticUpdateManager.ts(168,11): error TS2352: Conversion of type 'string' to type 'unknown[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
src/services/cache/OptimisticUpdateManager.ts(173,39): error TS2352: Conversion of type 'string' to type 'unknown[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
src/services/cache/OptimisticUpdateManager.ts(177,37): error TS2352: Conversion of type 'string' to type 'unknown[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
src/services/cache/OptimisticUpdateManager.ts(206,7): error TS2352: Conversion of type 'string' to type 'unknown[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
src/services/cache/OptimisticUpdateManager.ts(297,12): error TS1361: 'ConflictStrategy' cannot be used as a value because it was imported using 'import type'.
src/services/cache/OptimisticUpdateManager.ts(304,12): error TS1361: 'ConflictStrategy' cannot be used as a value because it was imported using 'import type'.
src/services/cache/OptimisticUpdateManager.ts(311,12): error TS1361: 'ConflictStrategy' cannot be used as a value because it was imported using 'import type'.
src/services/cache/OptimisticUpdateManager.ts(314,12): error TS1361: 'ConflictStrategy' cannot be used as a value because it was imported using 'import type'.
src/services/cache/OptimisticUpdateManager.ts(322,12): error TS1361: 'ConflictStrategy' cannot be used as a value because it was imported using 'import type'.
src/services/cache/OptimisticUpdateManager.ts(328,21): error TS1361: 'ConflictStrategy' cannot be used as a value because it was imported using 'import type'.
src/services/cache/OptimisticUpdateManager.ts(411,17): error TS1361: 'ConflictStrategy' cannot be used as a value because it was imported using 'import type'.
src/services/configurationApi.ts(13,10): error TS2614: Module '"./config/apiConfig"' has no exported member 'apiInstance'. Did you mean to use 'import apiInstance from "./config/apiConfig"' instead?
src/services/core/ApiClient.ts(311,25): error TS2554: Expected 0 arguments, but got 1.
src/services/core/ApiClient.ts(335,13): error TS2322: Type 'AxiosRequestHeaders | {}' is not assignable to type 'AxiosRequestHeaders'.
  Type '{}' is not assignable to type 'AxiosRequestHeaders'.
    Type '{}' is missing the following properties from type 'AxiosHeaders': set, get, has, delete, and 24 more.
src/services/core/ApiClient.ts(347,9): error TS2322: Type 'AxiosRequestHeaders | {}' is not assignable to type 'AxiosRequestHeaders'.
  Type '{}' is not assignable to type 'AxiosRequestHeaders'.
    Type '{}' is missing the following properties from type 'AxiosHeaders': set, get, has, delete, and 24 more.
src/services/core/ApiClient.ts(447,7): error TS2345: Argument of type '(config: AxiosRequestConfig<any>) => AxiosRequestConfig<any> | Promise<AxiosRequestConfig<any>>' is not assignable to parameter of type '(value: InternalAxiosRequestConfig<any>) => InternalAxiosRequestConfig<any> | Promise<InternalAxiosRequestConfig<any>>'.
  Type 'AxiosRequestConfig<any> | Promise<AxiosRequestConfig<any>>' is not assignable to type 'InternalAxiosRequestConfig<any> | Promise<InternalAxiosRequestConfig<any>>'.
    Type 'AxiosRequestConfig<any>' is not assignable to type 'InternalAxiosRequestConfig<any> | Promise<InternalAxiosRequestConfig<any>>'.
      Type 'AxiosRequestConfig<any>' is not assignable to type 'InternalAxiosRequestConfig<any>'.
        Types of property 'headers' are incompatible.
          Type 'AxiosHeaders | (Partial<RawAxiosHeaders & { Authorization: AxiosHeaderValue; Accept: AxiosHeaderValue; "User-Agent": AxiosHeaderValue; "Content-Length": AxiosHeaderValue; "Content-Encoding": AxiosHeaderValue; } & { ...; }> & Partial<...>)' is not assignable to type 'AxiosRequestHeaders'.
            Type 'Partial<RawAxiosHeaders & { Authorization: AxiosHeaderValue; Accept: AxiosHeaderValue; "User-Agent": AxiosHeaderValue; "Content-Length": AxiosHeaderValue; "Content-Encoding": AxiosHeaderValue; } & { ...; }> & Partial<...>' is not assignable to type 'AxiosRequestHeaders'.
              Type 'Partial<RawAxiosHeaders & { Authorization: AxiosHeaderValue; Accept: AxiosHeaderValue; "User-Agent": AxiosHeaderValue; "Content-Length": AxiosHeaderValue; "Content-Encoding": AxiosHeaderValue; } & { ...; }> & Partial<...>' is missing the following properties from type 'AxiosHeaders': set, has, clear, normalize, and 22 more.
src/services/core/errors.ts(81,19): error TS2416: Property 'name' in type 'ValidationError' is not assignable to the same property in base type 'ApiError'.
  Type '"ValidationError"' is not assignable to type '"ApiError"'.
src/services/core/errors.ts(112,19): error TS2416: Property 'name' in type 'NetworkError' is not assignable to the same property in base type 'ApiError'.
  Type '"NetworkError"' is not assignable to type '"ApiError"'.
src/services/core/errors.ts(143,19): error TS2416: Property 'name' in type 'AuthenticationError' is not assignable to the same property in base type 'ApiError'.
  Type '"AuthenticationError"' is not assignable to type '"ApiError"'.
src/services/core/errors.ts(184,34): error TS2345: Argument of type '{ response?: { data?: { message?: string; }; status?: number; }; message?: string; code?: string; }' is not assignable to parameter of type 'Error'.
  Property 'name' is missing in type '{ response?: { data?: { message?: string; }; status?: number; }; message?: string; code?: string; }' but required in type 'Error'.
src/services/core/QueryHooksFactory.ts(362,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(366,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(400,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(404,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(434,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(438,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(459,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(463,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(487,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/QueryHooksFactory.ts(491,18): error TS2554: Expected 4 arguments, but got 3.
src/services/core/ResilientApiClient.ts(188,45): error TS2345: Argument of type 'AxiosRequestConfig<any>' is not assignable to parameter of type 'CancellableRequestConfig'.
  Types of property 'signal' are incompatible.
    Type 'GenericAbortSignal' is missing the following properties from type 'AbortSignal': reason, throwIfAborted, dispatchEvent
src/services/core/ResilientApiClient.ts(190,52): error TS2345: Argument of type 'AxiosRequestConfig<any>' is not assignable to parameter of type 'CancellableRequestConfig'.
  Types of property 'signal' are incompatible.
    Type 'GenericAbortSignal' is missing the following properties from type 'AbortSignal': reason, throwIfAborted, dispatchEvent
src/services/core/ResilientApiClient.ts(192,51): error TS2345: Argument of type 'AxiosRequestConfig<any>' is not assignable to parameter of type 'CancellableRequestConfig'.
  Types of property 'signal' are incompatible.
    Type 'GenericAbortSignal' is missing the following properties from type 'AbortSignal': reason, throwIfAborted, dispatchEvent
src/services/core/ResilientApiClient.ts(194,53): error TS2345: Argument of type 'AxiosRequestConfig<any>' is not assignable to parameter of type 'CancellableRequestConfig'.
  Types of property 'signal' are incompatible.
    Type 'GenericAbortSignal' is missing the following properties from type 'AbortSignal': reason, throwIfAborted, dispatchEvent
src/services/core/ResilientApiClient.ts(196,48): error TS2345: Argument of type 'AxiosRequestConfig<any>' is not assignable to parameter of type 'CancellableRequestConfig'.
  Types of property 'signal' are incompatible.
    Type 'GenericAbortSignal' is missing the following properties from type 'AbortSignal': reason, throwIfAborted, dispatchEvent
src/services/core/ServiceManager.ts(283,11): error TS2739: Type '{ enabled: boolean; failureThreshold: number; successThreshold: number; resetTimeout: number; monitoringPeriod: number; }' is missing the following properties from type 'CircuitBreakerConfig': timeout, monitoringWindow
src/services/core/ServiceManager.ts(284,11): error TS2740: Type '{ enabled: boolean; maxConcurrent: number; maxQueue: number; timeout: number; }' is missing the following properties from type 'BulkheadConfig': criticalMaxConcurrent, highMaxConcurrent, normalMaxConcurrent, lowMaxConcurrent, and 3 more.
src/services/core/ServiceManager.ts(296,30): error TS2673: Constructor of class 'AuditService' is private and only accessible within the class declaration.
src/services/core/ServiceRegistry.ts(146,37): error TS2339: Property 'getInstance' does not exist on type 'typeof ApiMonitoring'.
src/services/domain/adapters/HttpServiceAdapter.ts(83,31): error TS2339: Property 'DELETE_RECORD' does not exist on type 'typeof HealthcareOperationType'.
src/services/domain/adapters/HttpServiceAdapter.ts(94,33): error TS2339: Property 'HEALTH_CHECK' does not exist on type 'typeof HealthcareOperationType'.
src/services/domain/adapters/HttpServiceAdapter.ts(144,36): error TS2339: Property 'CREATE_RECORD' does not exist on type 'typeof HealthcareOperationType'.
src/services/domain/examples/StudentServiceSOA.ts(59,31): error TS2339: Property 'CREATE_RECORD' does not exist on type 'typeof HealthcareOperationType'.
src/services/domain/examples/StudentServiceSOA.ts(89,31): error TS2339: Property 'UPDATE_RECORD' does not exist on type 'typeof HealthcareOperationType'.
src/services/domain/examples/StudentServiceSOA.ts(114,31): error TS2339: Property 'UPDATE_RECORD' does not exist on type 'typeof HealthcareOperationType'.
src/services/domain/examples/StudentServiceSOA.ts(130,31): error TS2339: Property 'VIEW_STUDENT_DATA' does not exist on type 'typeof HealthcareOperationType'.
src/services/domain/examples/StudentServiceSOA.ts(163,31): error TS2339: Property 'UPDATE_RECORD' does not exist on type 'typeof HealthcareOperationType'.
src/services/domain/orchestration/ServiceOrchestrator.ts(209,15): error TS2345: Argument of type '(contacts: any[]) => Promise<any[]>' is not assignable to parameter of type '(result: any[]) => Promise<void>'.
  Type 'Promise<any[]>' is not assignable to type 'Promise<void>'.
    Type 'any[]' is not assignable to type 'void'.
src/services/domain/orchestration/ServiceOrchestrator.ts(336,13): error TS2741: Property 'id' is missing in type '{}' but required in type '{ [key: string]: unknown; id: string; }'.
src/services/domain/orchestration/ServiceOrchestrator.ts(393,7): error TS2741: Property 'id' is missing in type '{}' but required in type '{ [key: string]: unknown; id: string; }'.
src/services/domain/orchestration/ServiceOrchestrator.ts(401,34): error TS2339: Property 'id' does not exist on type 'unknown'.
src/services/domain/orchestration/ServiceOrchestrator.ts(457,36): error TS2339: Property 'id' does not exist on type 'unknown'.
src/services/index.ts(74,3): error TS2614: Module '"./config/apiConfig"' has no exported member 'apiInstance'. Did you mean to use 'import apiInstance from "./config/apiConfig"' instead?
src/services/index.ts(75,3): error TS2614: Module '"./config/apiConfig"' has no exported member 'tokenUtils'. Did you mean to use 'import tokenUtils from "./config/apiConfig"' instead?
src/services/index.ts(76,3): error TS2724: '"./config/apiConfig"' has no exported member named 'API_CONFIG'. Did you mean 'apiConfig'?
src/services/index.ts(77,3): error TS2614: Module '"./config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "./config/apiConfig"' instead?
src/services/index.ts(447,41): error TS7018: Object literal's property 'data' implicitly has an 'any[]' type.
src/services/index.ts(471,41): error TS7018: Object literal's property 'data' implicitly has an 'any[]' type.
src/services/index.ts(515,7): error TS7018: Object literal's property 'categories' implicitly has an 'any[]' type.
src/services/index.ts(542,10): error TS2614: Module '"./config/apiConfig"' has no exported member 'apiInstance'. Did you mean to use 'import apiInstance from "./config/apiConfig"' instead?
src/services/modules/accessControlApi.ts(102,7): error TS2741: Property 'roles' is missing in type '{}' but required in type '{ roles: Role[]; }'.
src/services/modules/accessControlApi.ts(102,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(114,7): error TS2741: Property 'role' is missing in type '{}' but required in type '{ role: Role; }'.
src/services/modules/accessControlApi.ts(114,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(126,7): error TS2741: Property 'role' is missing in type '{}' but required in type '{ role: Role; }'.
src/services/modules/accessControlApi.ts(126,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(138,7): error TS2741: Property 'role' is missing in type '{}' but required in type '{ role: Role; }'.
src/services/modules/accessControlApi.ts(138,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(150,7): error TS2741: Property 'success' is missing in type '{}' but required in type 'DeleteResponse'.
src/services/modules/accessControlApi.ts(150,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(163,7): error TS2741: Property 'permissions' is missing in type '{}' but required in type '{ permissions: Permission[]; }'.
src/services/modules/accessControlApi.ts(163,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(175,7): error TS2741: Property 'permission' is missing in type '{}' but required in type '{ permission: Permission; }'.
src/services/modules/accessControlApi.ts(175,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(188,7): error TS2741: Property 'rolePermission' is missing in type '{}' but required in type '{ rolePermission: RolePermission; }'.
src/services/modules/accessControlApi.ts(188,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(200,7): error TS2741: Property 'success' is missing in type '{}' but required in type 'DeleteResponse'.
src/services/modules/accessControlApi.ts(200,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(213,7): error TS2741: Property 'userRole' is missing in type '{}' but required in type '{ userRole: UserRoleAssignment; }'.
src/services/modules/accessControlApi.ts(213,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(225,7): error TS2741: Property 'success' is missing in type '{}' but required in type 'DeleteResponse'.
src/services/modules/accessControlApi.ts(225,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(238,7): error TS2739: Type '{}' is missing the following properties from type 'UserPermissionsResult': roles, permissions
src/services/modules/accessControlApi.ts(238,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(252,7): error TS2741: Property 'hasPermission' is missing in type '{}' but required in type 'PermissionCheckResponse'.
src/services/modules/accessControlApi.ts(252,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(265,7): error TS2741: Property 'sessions' is missing in type '{}' but required in type '{ sessions: Session[]; }'.
src/services/modules/accessControlApi.ts(265,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(277,7): error TS2741: Property 'success' is missing in type '{}' but required in type 'DeleteResponse'.
src/services/modules/accessControlApi.ts(277,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(289,7): error TS2741: Property 'deleted' is missing in type '{}' but required in type 'DeleteSessionsResponse'.
src/services/modules/accessControlApi.ts(289,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(302,7): error TS2739: Type '{}' is missing the following properties from type 'SecurityIncidentsPaginatedResponse': incidents, pagination
src/services/modules/accessControlApi.ts(302,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(314,7): error TS2741: Property 'incident' is missing in type '{}' but required in type '{ incident: SecurityIncident; }'.
src/services/modules/accessControlApi.ts(314,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(326,7): error TS2741: Property 'incident' is missing in type '{}' but required in type '{ incident: SecurityIncident; }'.
src/services/modules/accessControlApi.ts(326,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(339,7): error TS2741: Property 'restrictions' is missing in type '{}' but required in type '{ restrictions: IpRestriction[]; }'.
src/services/modules/accessControlApi.ts(339,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(351,7): error TS2741: Property 'restriction' is missing in type '{}' but required in type '{ restriction: IpRestriction; }'.
src/services/modules/accessControlApi.ts(351,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(363,7): error TS2741: Property 'success' is missing in type '{}' but required in type 'DeleteResponse'.
src/services/modules/accessControlApi.ts(363,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(376,7): error TS2739: Type '{}' is missing the following properties from type 'SecurityStatistics': incidents, authentication, ipRestrictions
src/services/modules/accessControlApi.ts(376,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(389,7): error TS2741: Property 'roles' is missing in type '{}' but required in type '{ roles: Role[]; }'.
src/services/modules/accessControlApi.ts(389,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/accessControlApi.ts(407,15): error TS2484: Export declaration conflicts with exported declaration of 'IAccessControlApi'.
src/services/modules/accessControlApi.ts(413,33): error TS2552: Cannot find name 'createaccessControlApi'. Did you mean 'createAccessControlApi'?
src/services/modules/AdministrationService.ts(404,29): error TS2339: Property 'USER_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(435,29): error TS2339: Property 'USER_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(452,32): error TS2339: Property 'DISTRICTS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(469,29): error TS2339: Property 'DISTRICT_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(486,29): error TS2339: Property 'DISTRICTS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(517,29): error TS2339: Property 'DISTRICT_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(535,29): error TS2339: Property 'DISTRICT_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(557,32): error TS2339: Property 'SCHOOLS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(574,29): error TS2339: Property 'SCHOOL_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(591,29): error TS2339: Property 'SCHOOLS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(622,29): error TS2339: Property 'SCHOOL_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(640,29): error TS2339: Property 'SCHOOL_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(657,29): error TS2339: Property 'SYSTEM_HEALTH' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(674,32): error TS2551: Property 'BACKUPS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'. Did you mean 'BACKUP'?
src/services/modules/AdministrationService.ts(689,29): error TS2551: Property 'BACKUPS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'. Did you mean 'BACKUP'?
src/services/modules/AdministrationService.ts(723,29): error TS2339: Property 'LICENSE_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(771,29): error TS2339: Property 'LICENSE_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(789,29): error TS2339: Property 'LICENSE_DEACTIVATE' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(809,32): error TS2339: Property 'CONFIGURATIONS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(826,29): error TS2339: Property 'CONFIGURATION_BY_KEY' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(841,29): error TS2339: Property 'CONFIGURATIONS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(859,29): error TS2339: Property 'CONFIGURATION_BY_KEY' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(882,32): error TS2339: Property 'METRICS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(897,29): error TS2339: Property 'METRICS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(918,32): error TS2339: Property 'TRAINING' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(935,29): error TS2339: Property 'TRAINING_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(952,29): error TS2339: Property 'TRAINING' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(983,29): error TS2339: Property 'TRAINING_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(1001,29): error TS2339: Property 'TRAINING_BY_ID' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(1021,29): error TS2339: Property 'TRAINING_COMPLETE' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(1039,29): error TS2339: Property 'TRAINING_PROGRESS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/AdministrationService.ts(1075,32): error TS2339: Property 'AUDIT_LOGS' does not exist on type '{ readonly BASE: "/admin"; readonly SETTINGS: "/admin/settings"; readonly USERS: "/admin/users"; readonly INTEGRATIONS: "/admin/integrations"; readonly SYSTEM: "/admin/system"; readonly BACKUP: "/admin/backup"; readonly AUDIT: "/admin/audit"; readonly LICENSES: "/admin/licenses"; }'.
src/services/modules/analyticsApi.ts(333,29): error TS2552: Cannot find name 'createanalyticsApi'. Did you mean 'createAnalyticsApi'?
src/services/modules/appointmentsApi.ts(71,15): error TS2724: '"../types"' has no exported member named 'IAppointmentsApi'. Did you mean 'Appointment'?
src/services/modules/appointmentsApi.ts(75,3): error TS2724: '"../types"' has no exported member named 'AppointmentCreateData'. Did you mean 'AppointmentUpdateData'?
src/services/modules/appointmentsApi.ts(80,3): error TS2724: '"../types"' has no exported member named 'WaitlistEntry'. Did you mean 'WaitlistEntryData'?
src/services/modules/appointmentsApi.ts(141,7): error TS2739: Type '{}' is missing the following properties from type 'PaginatedResponse<Appointment>': data, pagination, success
src/services/modules/appointmentsApi.ts(141,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(153,7): error TS2741: Property 'appointment' is missing in type '{}' but required in type '{ appointment: Appointment; }'.
src/services/modules/appointmentsApi.ts(153,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(165,7): error TS2741: Property 'appointment' is missing in type '{}' but required in type '{ appointment: Appointment; }'.
src/services/modules/appointmentsApi.ts(165,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(177,7): error TS2741: Property 'appointment' is missing in type '{}' but required in type '{ appointment: Appointment; }'.
src/services/modules/appointmentsApi.ts(177,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(189,7): error TS2741: Property 'appointment' is missing in type '{}' but required in type '{ appointment: Appointment; }'.
src/services/modules/appointmentsApi.ts(189,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(205,7): error TS2741: Property 'slots' is missing in type '{}' but required in type '{ slots: AvailabilitySlot[]; }'.
src/services/modules/appointmentsApi.ts(205,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(218,7): error TS2741: Property 'appointments' is missing in type '{}' but required in type '{ appointments: Appointment[]; }'.
src/services/modules/appointmentsApi.ts(218,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(235,7): error TS2739: Type '{}' is missing the following properties from type 'AppointmentStatistics': total, byStatus, byType, noShowRate, completionRate
src/services/modules/appointmentsApi.ts(235,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(247,7): error TS2739: Type '{}' is missing the following properties from type '{ appointments: Appointment[]; count: number; }': appointments, count
src/services/modules/appointmentsApi.ts(247,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(260,7): error TS2741: Property 'availability' is missing in type '{}' but required in type '{ availability: NurseAvailability; }'.
src/services/modules/appointmentsApi.ts(260,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(273,7): error TS2741: Property 'availability' is missing in type '{}' but required in type '{ availability: NurseAvailability[]; }'.
src/services/modules/appointmentsApi.ts(273,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(285,7): error TS2741: Property 'availability' is missing in type '{}' but required in type '{ availability: NurseAvailability; }'.
src/services/modules/appointmentsApi.ts(285,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(318,7): error TS2741: Property 'entry' is missing in type '{}' but required in type '{ entry: WaitlistEntry; }'.
src/services/modules/appointmentsApi.ts(318,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(331,7): error TS2741: Property 'waitlist' is missing in type '{}' but required in type '{ waitlist: WaitlistEntry[]; }'.
src/services/modules/appointmentsApi.ts(331,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(345,7): error TS2741: Property 'entry' is missing in type '{}' but required in type '{ entry: WaitlistEntry; }'.
src/services/modules/appointmentsApi.ts(345,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(364,7): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/appointmentsApi.ts(378,7): error TS2739: Type '{}' is missing the following properties from type 'ReminderProcessingResult': total, sent, failed
src/services/modules/appointmentsApi.ts(378,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(390,7): error TS2741: Property 'reminders' is missing in type '{}' but required in type '{ reminders: AppointmentReminder[]; }'.
src/services/modules/appointmentsApi.ts(390,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(407,7): error TS2741: Property 'reminder' is missing in type '{}' but required in type '{ reminder: AppointmentReminder; }'.
src/services/modules/appointmentsApi.ts(407,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(419,7): error TS2741: Property 'reminder' is missing in type '{}' but required in type '{ reminder: AppointmentReminder; }'.
src/services/modules/appointmentsApi.ts(419,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(446,7): error TS2739: Type '{}' is missing the following properties from type 'ConflictCheckResult': hasConflict, conflicts, availableSlots
src/services/modules/appointmentsApi.ts(446,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(459,7): error TS2741: Property 'entry' is missing in type '{}' but required in type '{ entry: WaitlistEntry; }'.
src/services/modules/appointmentsApi.ts(459,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(474,7): error TS2741: Property 'entry' is missing in type '{}' but required in type '{ entry: WaitlistEntry; }'.
src/services/modules/appointmentsApi.ts(474,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(486,7): error TS2739: Type '{}' is missing the following properties from type '{ position: number; total: number; }': position, total
src/services/modules/appointmentsApi.ts(486,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(501,7): error TS2739: Type '{}' is missing the following properties from type '{ entry: WaitlistEntry; notification: any; }': entry, notification
src/services/modules/appointmentsApi.ts(501,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(514,7): error TS2741: Property 'appointment' is missing in type '{}' but required in type '{ appointment: Appointment; }'.
src/services/modules/appointmentsApi.ts(514,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(531,7): error TS2741: Property 'appointment' is missing in type '{}' but required in type '{ appointment: Appointment; }'.
src/services/modules/appointmentsApi.ts(531,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(543,7): error TS2741: Property 'appointment' is missing in type '{}' but required in type '{ appointment: Appointment; }'.
src/services/modules/appointmentsApi.ts(543,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(562,7): error TS2741: Property 'appointment' is missing in type '{}' but required in type '{ appointment: Appointment; }'.
src/services/modules/appointmentsApi.ts(562,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(581,7): error TS2739: Type '{}' is missing the following properties from type '{ cancelled: number; failed: number; }': cancelled, failed
src/services/modules/appointmentsApi.ts(581,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(597,7): error TS2741: Property 'appointments' is missing in type '{}' but required in type '{ appointments: Appointment[]; }'.
src/services/modules/appointmentsApi.ts(597,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(615,7): error TS2741: Property 'appointments' is missing in type '{}' but required in type '{ appointments: Appointment[]; }'.
src/services/modules/appointmentsApi.ts(615,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(628,7): error TS2739: Type '{}' is missing the following properties from type 'PaginatedResponse<Appointment>': data, pagination, success
src/services/modules/appointmentsApi.ts(628,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(646,7): error TS2741: Property 'trends' is missing in type '{}' but required in type '{ trends: any[]; }'.
src/services/modules/appointmentsApi.ts(646,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(668,7): error TS2739: Type '{}' is missing the following properties from type '{ rate: number; total: number; noShows: number; byStudent: any[]; }': rate, total, noShows, byStudent
src/services/modules/appointmentsApi.ts(668,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(691,7): error TS2739: Type '{}' is missing the following properties from type '{ utilizationRate: number; totalSlots: number; bookedSlots: number; availableSlots: number; byDay: any[]; }': utilizationRate, totalSlots, bookedSlots, availableSlots, byDay
src/services/modules/appointmentsApi.ts(691,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/appointmentsApi.ts(714,32): error TS2552: Cannot find name 'createappointmentsApi'. Did you mean 'createAppointmentsApi'?
src/services/modules/auditApi.ts(269,5): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/auditApi.ts(385,25): error TS2552: Cannot find name 'createauditApi'. Did you mean 'createAuditApi'?
src/services/modules/authApi.ts(61,10): error TS2614: Module '"../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../config/apiConfig"' instead?
src/services/modules/authApi.ts(61,25): error TS2614: Module '"../config/apiConfig"' has no exported member 'tokenUtils'. Did you mean to use 'import tokenUtils from "../config/apiConfig"' instead?
src/services/modules/authApi.ts(330,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/broadcastsApi.ts(262,30): error TS2304: Cannot find name 'createbroadcastsApi'.
src/services/modules/budgetApi.ts(19,10): error TS2614: Module '"../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../config/apiConfig"' instead?
src/services/modules/budgetApi.ts(476,12): error TS1361: 'BudgetRecommendation' cannot be used as a value because it was imported using 'import type'.
src/services/modules/budgetApi.ts(478,12): error TS1361: 'BudgetRecommendation' cannot be used as a value because it was imported using 'import type'.
src/services/modules/budgetApi.ts(480,12): error TS1361: 'BudgetRecommendation' cannot be used as a value because it was imported using 'import type'.
src/services/modules/communicationApi.ts(68,15): error TS2305: Module '"../types"' has no exported member 'ICommunicationApi'.
src/services/modules/communicationApi.ts(147,7): error TS2741: Property 'templates' is missing in type '{}' but required in type '{ templates: MessageTemplate[]; }'.
src/services/modules/communicationApi.ts(147,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(159,7): error TS2741: Property 'template' is missing in type '{}' but required in type '{ template: MessageTemplate; }'.
src/services/modules/communicationApi.ts(159,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(171,7): error TS2741: Property 'template' is missing in type '{}' but required in type '{ template: MessageTemplate; }'.
src/services/modules/communicationApi.ts(171,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(183,7): error TS2741: Property 'template' is missing in type '{}' but required in type '{ template: MessageTemplate; }'.
src/services/modules/communicationApi.ts(183,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(195,7): error TS2741: Property 'success' is missing in type '{}' but required in type '{ success: boolean; }'.
src/services/modules/communicationApi.ts(195,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(211,7): error TS2739: Type '{}' is missing the following properties from type 'SendMessageResponse': message, deliveryStatuses
src/services/modules/communicationApi.ts(211,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(223,7): error TS2739: Type '{}' is missing the following properties from type 'SendMessageResponse': message, deliveryStatuses
src/services/modules/communicationApi.ts(223,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(246,7): error TS2739: Type '{}' is missing the following properties from type 'GetMessagesResponse': messages, pagination
src/services/modules/communicationApi.ts(246,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(258,7): error TS2741: Property 'message' is missing in type '{}' but required in type '{ message: Message; }'.
src/services/modules/communicationApi.ts(258,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(270,7): error TS2739: Type '{}' is missing the following properties from type 'MessageDeliveryStatusResponse': deliveries, summary
src/services/modules/communicationApi.ts(270,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(286,7): error TS2739: Type '{}' is missing the following properties from type 'SendMessageResponse': message, deliveryStatuses
src/services/modules/communicationApi.ts(286,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(302,7): error TS2741: Property 'processedCount' is missing in type '{}' but required in type 'ProcessScheduledMessagesResponse'.
src/services/modules/communicationApi.ts(302,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(323,7): error TS2739: Type '{}' is missing the following properties from type 'CommunicationStatistics': totalMessages, byCategory, byPriority, byChannel, deliveryStatus
src/services/modules/communicationApi.ts(323,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(339,7): error TS2739: Type '{}' is missing the following properties from type 'TranslationResponse': translated, targetLanguage
src/services/modules/communicationApi.ts(339,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(355,7): error TS2739: Type '{}' is missing the following properties from type 'CommunicationOptions': channels, notificationTypes, priorityLevels, verificationMethods
src/services/modules/communicationApi.ts(355,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/communicationApi.ts(371,33): error TS2304: Cannot find name 'createcommunicationApi'.
src/services/modules/complianceApi.ts(13,15): error TS2305: Module '"../types"' has no exported member 'IComplianceApi'.
src/services/modules/complianceApi.ts(71,7): error TS2739: Type '{}' is missing the following properties from type 'ComplianceReportsResponse': reports, pagination
src/services/modules/complianceApi.ts(71,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(83,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'ComplianceReportResponse'.
src/services/modules/complianceApi.ts(83,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(95,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'ComplianceReportResponse'.
src/services/modules/complianceApi.ts(95,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(107,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'ComplianceReportResponse'.
src/services/modules/complianceApi.ts(107,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(119,7): error TS2741: Property 'success' is missing in type '{}' but required in type 'SuccessResponse'.
src/services/modules/complianceApi.ts(119,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(131,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'ComplianceReportResponse'.
src/services/modules/complianceApi.ts(131,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(147,7): error TS2741: Property 'item' is missing in type '{}' but required in type 'ChecklistItemResponse'.
src/services/modules/complianceApi.ts(147,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(159,7): error TS2741: Property 'item' is missing in type '{}' but required in type 'ChecklistItemResponse'.
src/services/modules/complianceApi.ts(159,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(177,7): error TS2741: Property 'forms' is missing in type '{}' but required in type 'ConsentFormsResponse'.
src/services/modules/complianceApi.ts(177,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(189,7): error TS2741: Property 'form' is missing in type '{}' but required in type 'ConsentFormResponse'.
src/services/modules/complianceApi.ts(189,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(210,7): error TS2741: Property 'signature' is missing in type '{}' but required in type 'ConsentSignatureResponse'.
src/services/modules/complianceApi.ts(210,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(222,7): error TS2741: Property 'consents' is missing in type '{}' but required in type 'StudentConsentsResponse'.
src/services/modules/complianceApi.ts(222,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(234,7): error TS2741: Property 'signature' is missing in type '{}' but required in type 'ConsentSignatureResponse'.
src/services/modules/complianceApi.ts(234,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(250,7): error TS2741: Property 'policies' is missing in type '{}' but required in type 'PolicyDocumentsResponse'.
src/services/modules/complianceApi.ts(250,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(262,7): error TS2741: Property 'policy' is missing in type '{}' but required in type 'PolicyDocumentResponse'.
src/services/modules/complianceApi.ts(262,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(274,7): error TS2741: Property 'policy' is missing in type '{}' but required in type 'PolicyDocumentResponse'.
src/services/modules/complianceApi.ts(274,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(286,7): error TS2741: Property 'acknowledgment' is missing in type '{}' but required in type 'PolicyAcknowledgmentResponse'.
src/services/modules/complianceApi.ts(286,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(304,7): error TS2739: Type '{}' is missing the following properties from type 'ComplianceStatistics': reports, checklistItems
src/services/modules/complianceApi.ts(304,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(316,7): error TS2739: Type '{}' is missing the following properties from type 'AuditLogsResponse': logs, pagination
src/services/modules/complianceApi.ts(316,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/complianceApi.ts(332,30): error TS2304: Cannot find name 'createcomplianceApi'.
src/services/modules/dashboardApi.ts(572,29): error TS2304: Cannot find name 'createdashboardApi'.
src/services/modules/documentsApi.ts(14,10): error TS2614: Module '"../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../config/apiConfig"' instead?
src/services/modules/documentsApi.ts(205,28): error TS2339: Property 'document' does not exist on type 'unknown'.
src/services/modules/documentsApi.ts(225,5): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/documentsApi.ts(245,29): error TS2339: Property 'success' does not exist on type 'unknown'.
src/services/modules/documentsApi.ts(245,57): error TS2339: Property 'sharedWith' does not exist on type 'unknown'.
src/services/modules/documentsApi.ts(255,32): error TS2339: Property 'templates' does not exist on type 'unknown'.
src/services/modules/documentsApi.ts(263,31): error TS2339: Property 'document' does not exist on type 'unknown'.
src/services/modules/documentsApi.ts(356,31): error TS2339: Property 'archived' does not exist on type 'unknown'.
src/services/modules/documentsApi.ts(368,29): error TS2304: Cannot find name 'createdocumentsApi'.
src/services/modules/emergencyContactsApi.ts(13,15): error TS2724: '"../types"' has no exported member named 'IEmergencyContactsApi'. Did you mean 'EmergencyContact'?
src/services/modules/emergencyContactsApi.ts(69,7): error TS2741: Property 'contacts' is missing in type '{}' but required in type '{ contacts: EmergencyContact[]; }'.
src/services/modules/emergencyContactsApi.ts(69,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/emergencyContactsApi.ts(81,7): error TS2741: Property 'contact' is missing in type '{}' but required in type '{ contact: EmergencyContact; }'.
src/services/modules/emergencyContactsApi.ts(81,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/emergencyContactsApi.ts(93,7): error TS2741: Property 'contact' is missing in type '{}' but required in type '{ contact: EmergencyContact; }'.
src/services/modules/emergencyContactsApi.ts(93,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/emergencyContactsApi.ts(105,7): error TS2741: Property 'success' is missing in type '{}' but required in type '{ success: boolean; }'.
src/services/modules/emergencyContactsApi.ts(123,7): error TS2741: Property 'results' is missing in type '{}' but required in type '{ results: EmergencyNotificationResult[]; }'.
src/services/modules/emergencyContactsApi.ts(123,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/emergencyContactsApi.ts(141,7): error TS2741: Property 'result' is missing in type '{}' but required in type '{ result: EmergencyNotificationResult; }'.
src/services/modules/emergencyContactsApi.ts(141,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/emergencyContactsApi.ts(159,7): error TS2739: Type '{}' is missing the following properties from type 'ContactVerificationResponse': method, success
src/services/modules/emergencyContactsApi.ts(159,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/emergencyContactsApi.ts(171,7): error TS2739: Type '{}' is missing the following properties from type 'EmergencyContactStatistics': totalContacts, studentsWithoutContacts, byPriority
src/services/modules/emergencyContactsApi.ts(171,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/emergencyContactsApi.ts(188,37): error TS2304: Cannot find name 'createemergencyContactsApi'.
src/services/modules/health/allergiesApi.ts(16,10): error TS2614: Module '"../../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../../config/apiConfig"' instead?
src/services/modules/health/chronicConditionsApi.ts(16,10): error TS2614: Module '"../../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../../config/apiConfig"' instead?
src/services/modules/health/growthMeasurementsApi.ts(16,10): error TS2614: Module '"../../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../../config/apiConfig"' instead?
src/services/modules/health/healthRecordsApi.ts(16,10): error TS2614: Module '"../../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../../config/apiConfig"' instead?
src/services/modules/health/healthRecordsApi.ts(256,42): error TS2345: Argument of type '{ query: string; type?: HealthRecordType; dateFrom?: string; dateTo?: string; schoolId?: string; includeConfidential?: boolean; } & PaginationParams' is not assignable to parameter of type 'FilterParams'.
  Index signature for type 'string' is missing in type '{ query: string; type?: HealthRecordType; dateFrom?: string; dateTo?: string; schoolId?: string; includeConfidential?: boolean; } & PaginationParams'.
src/services/modules/health/index.ts(273,41): error TS2339: Property 'total' does not exist on type 'PaginatedResponse<HealthRecord>'.
src/services/modules/health/index.ts(273,64): error TS2339: Property 'total' does not exist on type 'PaginatedResponse<Screening>'.
src/services/modules/health/index.ts(273,87): error TS2339: Property 'total' does not exist on type 'PaginatedResponse<ChronicCondition>'.
src/services/modules/health/screeningsApi.ts(16,10): error TS2614: Module '"../../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../../config/apiConfig"' instead?
src/services/modules/health/screeningsApi.ts(168,17): error TS2554: Expected 2-3 arguments, but got 1.
src/services/modules/health/screeningsApi.ts(169,16): error TS2554: Expected 2-3 arguments, but got 1.
src/services/modules/health/screeningsApi.ts(190,29): error TS2554: Expected 2-3 arguments, but got 1.
src/services/modules/health/screeningsApi.ts(228,7): error TS2322: Type 'ZodObject<{ studentId: ZodString; type: ZodEnum<{ OTHER: "OTHER"; BEHAVIORAL: "BEHAVIORAL"; DENTAL: "DENTAL"; VISION: "VISION"; HEARING: "HEARING"; SCOLIOSIS: "SCOLIOSIS"; BMI: "BMI"; BLOOD_PRESSURE: "BLOOD_PRESSURE"; DEVELOPMENTAL: "DEVELOPMENTAL"; }>; ... 14 more ...; notes: ZodOptional<...>; }, $strip>' is not assignable to type 'ZodType<ScreeningCreate, unknown, $ZodTypeInternals<ScreeningCreate, unknown>>'.
  The types of '_output.details.hearingThresholds.rightEar' are incompatible between these types.
    Type 'Record<number, unknown>' is not assignable to type 'Record<string, number>'.
      'number' and 'string' index signatures are incompatible.
        Type 'unknown' is not assignable to type 'number'.
src/services/modules/health/screeningsApi.ts(229,7): error TS2322: Type 'ZodObject<{ studentId: ZodOptional<ZodString>; type: ZodOptional<ZodEnum<{ OTHER: "OTHER"; BEHAVIORAL: "BEHAVIORAL"; DENTAL: "DENTAL"; VISION: "VISION"; HEARING: "HEARING"; SCOLIOSIS: "SCOLIOSIS"; BMI: "BMI"; BLOOD_PRESSURE: "BLOOD_PRESSURE"; DEVELOPMENTAL: "DEVELOPMENTAL"; }>>; ... 15 more ...; followUpCompleted: Z...' is not assignable to type 'ZodType<ScreeningUpdate, unknown, $ZodTypeInternals<ScreeningUpdate, unknown>>'.
  The types of '_output.details.hearingThresholds.rightEar' are incompatible between these types.
    Type 'Record<number, unknown>' is not assignable to type 'Record<string, number>'.
      'number' and 'string' index signatures are incompatible.
        Type 'unknown' is not assignable to type 'number'.
src/services/modules/health/screeningsApi.ts(361,9): error TS2416: Property 'bulkCreate' in type 'ScreeningsApiService' is not assignable to the same property in base type 'BaseApiService<Screening, ScreeningCreate, ScreeningUpdate>'.
  Type '(screenings: ScreeningCreate[]) => Promise<{ created: number; failed: number; errors: { index: number; error: string; }[]; }>' is not assignable to type '(data: ScreeningCreate[]) => Promise<Screening[]>'.
    Type 'Promise<{ created: number; failed: number; errors: { index: number; error: string; }[]; }>' is not assignable to type 'Promise<Screening[]>'.
      Type '{ created: number; failed: number; errors: { index: number; error: string; }[]; }' is missing the following properties from type 'Screening[]': length, pop, push, concat, and 28 more.
src/services/modules/health/vaccinationsApi.ts(16,10): error TS2614: Module '"../../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../../config/apiConfig"' instead?
src/services/modules/health/vitalSignsApi.ts(16,10): error TS2614: Module '"../../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../../config/apiConfig"' instead?
src/services/modules/health/vitalSignsApi.ts(425,9): error TS2416: Property 'bulkCreate' in type 'VitalSignsApiService' is not assignable to the same property in base type 'BaseApiService<VitalSigns, VitalSignsCreate, VitalSignsUpdate>'.
  Type '(vitalSigns: VitalSignsCreate[]) => Promise<{ created: number; failed: number; errors: { index: number; error: string; }[]; criticalAlerts: VitalSignsAlert[]; }>' is not assignable to type '(data: VitalSignsCreate[]) => Promise<VitalSigns[]>'.
    Type 'Promise<{ created: number; failed: number; errors: { index: number; error: string; }[]; criticalAlerts: VitalSignsAlert[]; }>' is not assignable to type 'Promise<VitalSigns[]>'.
      Type '{ created: number; failed: number; errors: { index: number; error: string; }[]; criticalAlerts: VitalSignsAlert[]; }' is missing the following properties from type 'VitalSigns[]': length, pop, push, concat, and 28 more.
src/services/modules/healthAssessmentsApi.ts(347,37): error TS2304: Cannot find name 'createhealthAssessmentsApi'.
src/services/modules/healthRecordsApi.ts(42,10): error TS2614: Module '"../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../config/apiConfig"' instead?
src/services/modules/healthRecordsApi.ts(709,29): error TS2693: 'AllergyType' only refers to a type, but is being used as a value here.
src/services/modules/healthRecordsApi.ts(710,26): error TS2693: 'AllergySeverity' only refers to a type, but is being used as a value here.
src/services/modules/healthRecordsApi.ts(766,19): error TS2554: Expected 2-3 arguments, but got 1.
src/services/modules/healthRecordsApi.ts(1052,7): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/healthRecordsApi.ts(1644,7): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/healthRecordsApi.ts(2258,33): error TS2552: Cannot find name 'createhealthRecordsApi'. Did you mean 'createHealthRecordsApi'?
src/services/modules/incidentReportsApi.ts(13,15): error TS2724: '"../types"' has no exported member named 'IIncidentReportsApi'. Did you mean 'IncidentReport'?
src/services/modules/incidentReportsApi.ts(81,7): error TS2739: Type '{}' is missing the following properties from type 'IncidentReportListResponse': reports, pagination
src/services/modules/incidentReportsApi.ts(81,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(94,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(94,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(107,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(107,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(120,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(120,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(133,7): error TS2741: Property 'success' is missing in type '{}' but required in type '{ success: boolean; }'.
src/services/modules/incidentReportsApi.ts(133,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(154,7): error TS2739: Type '{}' is missing the following properties from type 'IncidentReportListResponse': reports, pagination
src/services/modules/incidentReportsApi.ts(154,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(173,7): error TS2740: Type '{}' is missing the following properties from type 'IncidentStatistics': total, byType, bySeverity, byLocation, and 3 more.
src/services/modules/incidentReportsApi.ts(173,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(186,7): error TS2739: Type '{}' is missing the following properties from type 'IncidentReportListResponse': reports, pagination
src/services/modules/incidentReportsApi.ts(186,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(199,7): error TS2739: Type '{}' is missing the following properties from type 'IncidentReportListResponse': reports, pagination
src/services/modules/incidentReportsApi.ts(199,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(216,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(216,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(229,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(229,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(246,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(246,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(259,7): error TS2741: Property 'action' is missing in type '{}' but required in type 'FollowUpActionResponse'.
src/services/modules/incidentReportsApi.ts(259,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(272,7): error TS2741: Property 'action' is missing in type '{}' but required in type 'FollowUpActionResponse'.
src/services/modules/incidentReportsApi.ts(272,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(285,17): error TS1361: 'ActionStatus' cannot be used as a value because it was imported using 'import type'.
src/services/modules/incidentReportsApi.ts(288,7): error TS2741: Property 'action' is missing in type '{}' but required in type 'FollowUpActionResponse'.
src/services/modules/incidentReportsApi.ts(288,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(300,7): error TS2741: Property 'actions' is missing in type '{}' but required in type 'FollowUpActionListResponse'.
src/services/modules/incidentReportsApi.ts(300,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(312,7): error TS2741: Property 'success' is missing in type '{}' but required in type '{ success: boolean; }'.
src/services/modules/incidentReportsApi.ts(312,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(329,7): error TS2741: Property 'statement' is missing in type '{}' but required in type 'WitnessStatementResponse'.
src/services/modules/incidentReportsApi.ts(329,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(342,7): error TS2741: Property 'statement' is missing in type '{}' but required in type 'WitnessStatementResponse'.
src/services/modules/incidentReportsApi.ts(342,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(355,7): error TS2741: Property 'statement' is missing in type '{}' but required in type 'WitnessStatementResponse'.
src/services/modules/incidentReportsApi.ts(355,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(367,7): error TS2741: Property 'statements' is missing in type '{}' but required in type 'WitnessStatementListResponse'.
src/services/modules/incidentReportsApi.ts(367,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(379,7): error TS2741: Property 'success' is missing in type '{}' but required in type '{ success: boolean; }'.
src/services/modules/incidentReportsApi.ts(379,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(396,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(396,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(415,7): error TS2741: Property 'attachments' is missing in type '{}' but required in type '{ attachments: string[]; }'.
src/services/modules/incidentReportsApi.ts(415,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(427,7): error TS2741: Property 'success' is missing in type '{}' but required in type '{ success: boolean; }'.
src/services/modules/incidentReportsApi.ts(427,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(444,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(444,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(457,7): error TS2741: Property 'submission' is missing in type '{}' but required in type 'InsuranceSubmissionResponse'.
src/services/modules/incidentReportsApi.ts(457,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(470,7): error TS2741: Property 'submissions' is missing in type '{}' but required in type 'InsuranceSubmissionsResponse'.
src/services/modules/incidentReportsApi.ts(470,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(483,7): error TS2741: Property 'report' is missing in type '{}' but required in type 'IncidentReportResponse'.
src/services/modules/incidentReportsApi.ts(483,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(500,7): error TS2741: Property 'document' is missing in type '{}' but required in type '{ document: IncidentReportDocument; }'.
src/services/modules/incidentReportsApi.ts(500,29): error TS2345: Argument of type 'import("F:/temp/white-cross/frontend/src/services/core/ApiClient").ApiResponse<unknown>' is not assignable to parameter of type 'import("F:/temp/white-cross/frontend/src/types/api/responses").ApiResponse<unknown>'.
  Types of property 'errors' are incompatible.
    Type 'Record<string, string[]>' is missing the following properties from type 'ErrorDetail[]': length, pop, push, concat, and 28 more.
src/services/modules/incidentReportsApi.ts(513,7): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/incidentReportsApi.ts(527,7): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/incidentReportsApi.ts(545,35): error TS2304: Cannot find name 'createincidentReportsApi'.
src/services/modules/integrationApi.ts(29,10): error TS2614: Module '"../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../config/apiConfig"' instead?
src/services/modules/integrationApi.ts(32,10): error TS2300: Duplicate identifier 'createApiError'.
src/services/modules/integrationApi.ts(55,10): error TS2300: Duplicate identifier 'createApiError'.
src/services/modules/integrationApi.ts(78,33): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: readonly ["SIS", "EHR", "PHARMACY", "LABORATORY", "INSURANCE", "PARENT_PORTAL", "HEALTH_APP", "GOVERNMENT_REPORTING"], params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type 'string[]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type 'string[]'.
src/services/modules/integrationApi.ts(94,38): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: readonly ["api_key", "basic_auth", "oauth2", "jwt", "certificate", "custom"], params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type 'string[]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type 'string[]'.
src/services/modules/integrationApi.ts(108,31): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: readonly ["inbound", "outbound", "bidirectional"], params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type 'string[]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type 'string[]'.
src/services/modules/integrationApi.ts(695,9): error TS2322: Type '{ id: string; name: string; type: IntegrationType; status: IntegrationStatus; lastSync: string; health: "error" | "warning" | "healthy"; }[]' is not assignable to type '{ id: string; name: string; type: IntegrationType; status: IntegrationStatus; lastSync: string; health: IntegrationHealth; }[]'.
  Type '{ id: string; name: string; type: IntegrationType; status: IntegrationStatus; lastSync: string; health: "error" | "warning" | "healthy"; }' is not assignable to type '{ id: string; name: string; type: IntegrationType; status: IntegrationStatus; lastSync: string; health: IntegrationHealth; }'.
    Types of property 'health' are incompatible.
      Type '"error" | "warning" | "healthy"' is not assignable to type 'IntegrationHealth'.
        Type '"error"' is not assignable to type 'IntegrationHealth'.
src/services/modules/integrationApi.ts(729,10): error TS2300: Duplicate identifier 'createApiError'.
src/services/modules/integrationApi.ts(730,31): error TS2304: Cannot find name 'createintegrationApi'.
src/services/modules/inventoryApi.ts(19,10): error TS2614: Module '"../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../config/apiConfig"' instead?
src/services/modules/medication/api/AdministrationApi.ts(37,24): error TS2459: Module '"./PrescriptionApi"' declares 'AdministrationRoute' locally, but it is not exported.
src/services/modules/medication/api/AdministrationApi.ts(285,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(309,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(330,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(373,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(403,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(434,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(469,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(488,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(511,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(527,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(551,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(574,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(597,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(620,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(644,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/AdministrationApi.ts(671,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/index.ts(63,14): error TS2304: Cannot find name 'createMedicationFormularyApi'.
src/services/modules/medication/api/index.ts(64,17): error TS2304: Cannot find name 'createPrescriptionApi'.
src/services/modules/medication/api/index.ts(65,19): error TS2304: Cannot find name 'createAdministrationApi'.
src/services/modules/medication/api/MedicationFormularyApi.ts(222,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(236,35): error TS2339: Property 'BY_ID' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(239,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(257,35): error TS2339: Property 'FORMULARY_NDC' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(260,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(275,35): error TS2339: Property 'FORMULARY_BARCODE' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(279,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(300,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(315,35): error TS2339: Property 'FORMULARY_MONOGRAPH' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(318,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(332,35): error TS2339: Property 'FORMULARY_ALTERNATIVES' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(335,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(350,35): error TS2339: Property 'FORMULARY_LASA' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(353,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(365,35): error TS2339: Property 'FORMULARY_CATEGORIES' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(368,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(380,35): error TS2339: Property 'FORMULARY_FORMS' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(383,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(402,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(407,17): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/modules/medication/api/MedicationFormularyApi.ts(408,17): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/modules/medication/api/MedicationFormularyApi.ts(409,17): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/modules/medication/api/MedicationFormularyApi.ts(409,32): error TS7006: Parameter 'acc' implicitly has an 'any' type.
src/services/modules/medication/api/MedicationFormularyApi.ts(409,37): error TS7006: Parameter 'err' implicitly has an 'any' type.
src/services/modules/medication/api/MedicationFormularyApi.ts(433,35): error TS2339: Property 'BY_ID' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/MedicationFormularyApi.ts(437,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/MedicationFormularyApi.ts(452,35): error TS2339: Property 'FORMULARY_DEACTIVATE' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(225,35): error TS2339: Property 'PRESCRIPTIONS' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(229,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(234,17): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/modules/medication/api/PrescriptionApi.ts(235,17): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/modules/medication/api/PrescriptionApi.ts(236,17): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/modules/medication/api/PrescriptionApi.ts(236,32): error TS7006: Parameter 'acc' implicitly has an 'any' type.
src/services/modules/medication/api/PrescriptionApi.ts(236,37): error TS7006: Parameter 'err' implicitly has an 'any' type.
src/services/modules/medication/api/PrescriptionApi.ts(260,35): error TS2339: Property 'PRESCRIPTION_BY_ID' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(264,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(280,35): error TS2339: Property 'PRESCRIPTION_DISCONTINUE' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(296,35): error TS2339: Property 'PRESCRIPTION_BY_ID' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(299,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(321,38): error TS2339: Property 'STUDENT_PRESCRIPTIONS' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(324,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(353,38): error TS2339: Property 'PRESCRIPTIONS' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(356,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(370,35): error TS2339: Property 'PRESCRIPTION_HISTORY' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(373,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(392,35): error TS2339: Property 'PRESCRIPTION_VERIFY' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(396,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(415,35): error TS2339: Property 'PRESCRIPTIONS_CHECK_ALLERGIES' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(419,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(433,35): error TS2339: Property 'STUDENT_ALLERGIES' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(436,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(448,35): error TS2339: Property 'STUDENT_ALLERGIES' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(452,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(469,35): error TS2339: Property 'ALLERGY_BY_ID' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(473,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(488,35): error TS2339: Property 'ALLERGY_DEACTIVATE' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(511,35): error TS2339: Property 'PRESCRIPTION_RENEW' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(515,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(527,38): error TS2339: Property 'PRESCRIPTIONS_EXPIRING' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(530,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medication/api/PrescriptionApi.ts(544,35): error TS2339: Property 'STUDENT_PRESCRIPTIONS_PRN' does not exist on type '{ readonly BASE: "/medications"; readonly INVENTORY: "/medications/inventory"; readonly SCHEDULE: "/medications/schedule"; readonly REMINDERS: "/medications/reminders"; readonly STUDENT: (studentId: string) => string; ... 19 more ...; readonly STUDENT_SCHEDULE: (studentId: string) => string; }'.
src/services/modules/medication/api/PrescriptionApi.ts(547,28): error TS2339: Property 'data' does not exist on type 'unknown'.
src/services/modules/medicationsApi.ts(19,3): error TS2724: '"../../types/medications"' has no exported member named 'Medication'. Did you mean 'MedicationTab'?
src/services/modules/medicationsApi.ts(20,3): error TS2459: Module '"../../types/medications"' declares 'StudentMedication' locally, but it is not exported.
src/services/modules/medicationsApi.ts(22,3): error TS2724: '"../../types/medications"' has no exported member named 'InventoryItem'. Did you mean 'InventoryFilters'?
src/services/modules/medicationsApi.ts(23,3): error TS2459: Module '"../../types/medications"' declares 'MedicationReminder' locally, but it is not exported.
src/services/modules/medicationsApi.ts(24,3): error TS2724: '"../../types/medications"' has no exported member named 'AdverseReaction'. Did you mean 'AdverseReactionData'?
src/services/modules/medicationsApi.ts(37,10): error TS2300: Duplicate identifier 'createApiError'.
src/services/modules/medicationsApi.ts(179,17): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: readonly ["Tablet", "Capsule", "Liquid", "Injection", "Topical", "Inhaler", "Drops", "Patch", "Suppository", "Powder", "Cream", "Ointment", "Gel", "Spray", "Lozenge"], params?: string | { ...; }): ZodEnum<...>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type 'readonly ["Tablet", "Capsule", "Liquid", "Injection", "Topical", "Inhaler", "Drops", "Patch", "Suppository", "Powder", "Cream", "Ointment", "Gel", "Spray", "Lozenge"]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type 'readonly ["Tablet", "Capsule", "Liquid", "Injection", "Topical", "Inhaler", "Drops", "Patch", "Suppository", "Powder", "Cream", "Ointment", "Gel", "Spray", "Lozenge"]'.
src/services/modules/medicationsApi.ts(204,7): error TS2345: Argument of type '(val: any, ctx: any) => boolean' is not assignable to parameter of type '(arg: "I" | "II" | "III" | "IV" | "V") => unknown'.
  Target signature provides too few arguments. Expected 2 or more, but got 1.
src/services/modules/medicationsApi.ts(204,8): error TS7006: Parameter 'val' implicitly has an 'any' type.
src/services/modules/medicationsApi.ts(204,13): error TS7006: Parameter 'ctx' implicitly has an 'any' type.
src/services/modules/medicationsApi.ts(241,12): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: readonly ["Oral", "Sublingual", "Topical", "Intravenous", "Intramuscular", "Subcutaneous", "Inhalation", "Ophthalmic", "Otic", "Nasal", "Rectal", "Transdermal"], params?: string | { ...; }): ZodEnum<...>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type 'readonly ["Oral", "Sublingual", "Topical", "Intravenous", "Intramuscular", "Subcutaneous", "Inhalation", "Ophthalmic", "Otic", "Nasal", "Rectal", "Transdermal"]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type 'readonly ["Oral", "Sublingual", "Topical", "Intravenous", "Intramuscular", "Subcutaneous", "Inhalation", "Ophthalmic", "Otic", "Nasal", "Rectal", "Transdermal"]'.
src/services/modules/medicationsApi.ts(260,7): error TS2345: Argument of type '(date: any, ctx: any) => boolean' is not assignable to parameter of type '(arg: string) => unknown'.
  Target signature provides too few arguments. Expected 2 or more, but got 1.
src/services/modules/medicationsApi.ts(260,8): error TS7006: Parameter 'date' implicitly has an 'any' type.
src/services/modules/medicationsApi.ts(260,14): error TS7006: Parameter 'ctx' implicitly has an 'any' type.
src/services/modules/medicationsApi.ts(387,15): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: readonly ["MILD", "MODERATE", "SEVERE", "LIFE_THREATENING"], params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type 'string[]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type 'string[]'.
src/services/modules/medicationsApi.ts(604,34): error TS2339: Property 'studentId' does not exist on type 'MedicationLog'.
src/services/modules/medicationsApi.ts(878,10): error TS2300: Duplicate identifier 'createApiError'.
src/services/modules/medicationsApi.ts(879,31): error TS2552: Cannot find name 'createmedicationsApi'. Did you mean 'createMedicationsApi'?
src/services/modules/messagesApi.ts(289,28): error TS2304: Cannot find name 'createmessagesApi'.
src/services/modules/purchaseOrderApi.ts(20,10): error TS2614: Module '"../config/apiConfig"' has no exported member 'API_ENDPOINTS'. Did you mean to use 'import API_ENDPOINTS from "../config/apiConfig"' instead?
src/services/modules/purchaseOrderApi.ts(341,7): error TS2739: Type 'VendorOrderHistoryResponse' is missing the following properties from type 'VendorOrderHistory': totalSpent, avgOrderValue
src/services/modules/purchaseOrderApi.ts(429,7): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/purchaseOrderApi.ts(449,7): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/reportsApi.ts(52,93): error TS2304: Cannot find name 'HealthTrendData'.
src/services/modules/reportsApi.ts(113,103): error TS2304: Cannot find name 'HealthTrendData'.
src/services/modules/reportsApi.ts(115,66): error TS2304: Cannot find name 'HealthTrendData'.
src/services/modules/reportsApi.ts(138,45): error TS2304: Cannot find name 'ReportFilters'.
src/services/modules/reportsApi.ts(309,5): error TS2740: Type '{}' is missing the following properties from type 'Blob': size, type, arrayBuffer, bytes, and 3 more.
src/services/modules/reportsApi.ts(362,27): error TS2304: Cannot find name 'createreportsApi'.
src/services/modules/studentManagementApi.ts(298,37): error TS2304: Cannot find name 'createstudentManagementApi'.
src/services/modules/studentsApi.ts(125,13): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: readonly ["MALE", "FEMALE", "OTHER", "PREFER_NOT_TO_SAY"], params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type 'string[]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type 'string[]'.
src/services/modules/studentsApi.ts(225,6): error TS2769: No overload matches this call.
  Overload 1 of 2, '(values: readonly ["MALE", "FEMALE", "OTHER", "PREFER_NOT_TO_SAY"], params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Object literal may only specify known properties, and 'errorMap' does not exist in type '{ error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }'.
  Overload 2 of 2, '(entries: Readonly<Record<string, EnumValue>>, params?: string | { error?: string | $ZodErrorMap<$ZodIssueInvalidValue<unknown>>; message?: string; }): ZodEnum<...>', gave the following error.
    Argument of type 'string[]' is not assignable to parameter of type 'Readonly<Record<string, EnumValue>>'.
      Index signature for type 'string' is missing in type 'string[]'.
src/services/modules/usersApi.ts(230,25): error TS2304: Cannot find name 'createusersApi'.
src/services/monitoring/ErrorTracker.ts(166,24): error TS2322: Type 'BrowserTracing' is not assignable to type 'Integration'.
  Types of property 'setupOnce' are incompatible.
    Type '(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub) => void' is not assignable to type '() => void'.
      Target signature provides too few arguments. Expected 2 or more, but got 0.
src/services/monitoring/PerformanceMonitor.ts(152,22): error TS2339: Property 'onFID' does not exist on type 'typeof import("F:/temp/white-cross/frontend/node_modules/web-vitals/dist/modules/index")'.
src/services/monitoring/PerformanceMonitor.ts(304,7): error TS2322: Type '"LCP" | "FID" | "CLS" | "TTFB" | "FCP" | "INP"' is not assignable to type '"LCP" | "FID" | "CLS" | "TTFB" | "FCP"'.
  Type '"INP"' is not assignable to type '"LCP" | "FID" | "CLS" | "TTFB" | "FCP"'.
src/services/resilience/Bulkhead.ts(171,5): error TS2322: Type 'unknown' is not assignable to type 'T'.
  'T' could be instantiated with an arbitrary type which could be unrelated to 'unknown'.
src/services/resilience/HealthMonitor.ts(233,9): error TS2322: Type 'DegradationAlert' is not assignable to type 'Record<string, unknown>'.
  Index signature for type 'string' is missing in type 'DegradationAlert'.
src/services/security/SecureTokenManager.ts(46,35): error TS2673: Constructor of class 'SecureTokenManager' is private and only accessible within the class declaration.
src/services/utils/validationUtils.ts(18,31): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/utils/validationUtils.ts(25,37): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/utils/validationUtils.ts(25,52): error TS7006: Parameter 'acc' implicitly has an 'any' type.
src/services/utils/validationUtils.ts(25,57): error TS7006: Parameter 'err' implicitly has an 'any' type.
src/services/utils/validationUtils.ts(86,32): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/utils/validationUtils.ts(87,38): error TS2339: Property 'errors' does not exist on type 'ZodError<unknown>'.
src/services/utils/validationUtils.ts(87,53): error TS7006: Parameter 'acc' implicitly has an 'any' type.
src/services/utils/validationUtils.ts(87,58): error TS7006: Parameter 'err' implicitly has an 'any' type.
src/stores/architectureVerification.ts(15,3): error TS2724: '"./domains/core"' has no exported member named 'useUsers'. Did you mean 'setUser'?
src/stores/architectureVerification.ts(16,3): error TS2724: '"./domains/core"' has no exported member named 'usePermissions'. Did you mean 'UserPermission'?
src/stores/architectureVerification.ts(17,3): error TS2724: '"./domains/core"' has no exported member named 'selectAuthState'. Did you mean 'selectAuthStatus'?
src/stores/architectureVerification.ts(19,3): error TS2724: '"./domains/core"' has no exported member named 'selectUserPermissions'. Did you mean 'UserPermission'?
src/stores/architectureVerification.ts(24,3): error TS2305: Module '"./domains/healthcare"' has no exported member 'useHealthRecords'.
src/stores/architectureVerification.ts(25,3): error TS2305: Module '"./domains/healthcare"' has no exported member 'useNurseDashboard'.
src/stores/architectureVerification.ts(26,3): error TS2305: Module '"./domains/healthcare"' has no exported member 'useMedications'.
src/stores/architectureVerification.ts(27,3): error TS2305: Module '"./domains/healthcare"' has no exported member 'useWorkflows'.
src/stores/architectureVerification.ts(28,3): error TS2724: '"./domains/healthcare"' has no exported member named 'selectHealthMetrics'. Did you mean 'selectHealthAlerts'?
src/stores/architectureVerification.ts(29,3): error TS2305: Module '"./domains/healthcare"' has no exported member 'selectWorkflowStatus'.
src/stores/architectureVerification.ts(34,3): error TS2305: Module '"./domains/administration"' has no exported member 'useSystemManagement'.
src/stores/architectureVerification.ts(35,3): error TS2305: Module '"./domains/administration"' has no exported member 'useReporting'.
src/stores/architectureVerification.ts(36,3): error TS2305: Module '"./domains/administration"' has no exported member 'useAnalytics'.
src/stores/architectureVerification.ts(37,3): error TS2305: Module '"./domains/administration"' has no exported member 'selectSystemHealth'.
src/stores/architectureVerification.ts(38,3): error TS2305: Module '"./domains/administration"' has no exported member 'selectReportData'.
src/stores/architectureVerification.ts(39,3): error TS2305: Module '"./domains/administration"' has no exported member 'selectAnalyticsData'.
src/stores/architectureVerification.ts(44,3): error TS2305: Module '"./domains/communication"' has no exported member 'useMessaging'.
src/stores/architectureVerification.ts(45,3): error TS2305: Module '"./domains/communication"' has no exported member 'useNotifications'.
src/stores/architectureVerification.ts(46,3): error TS2305: Module '"./domains/communication"' has no exported member 'useDocuments'.
src/stores/architectureVerification.ts(47,3): error TS2724: '"./domains/communication"' has no exported member named 'selectMessageHistory'. Did you mean 'selectMessagesByType'?
src/stores/architectureVerification.ts(48,3): error TS2305: Module '"./domains/communication"' has no exported member 'selectNotificationSettings'.
src/stores/architectureVerification.ts(49,3): error TS2305: Module '"./domains/communication"' has no exported member 'selectDocumentLibrary'.
src/stores/architectureVerification.ts(58,3): error TS2305: Module '"./shared/api"' has no exported member 'advancedApiIntegration'.
src/stores/architectureVerification.ts(59,3): error TS2724: '"./shared/api"' has no exported member named 'serviceIntegration'. Did you mean 'serviceIntegrationUtils'?
src/stores/architectureVerification.ts(60,3): error TS2305: Module '"./shared/api"' has no exported member 'tanstackIntegration'.
src/stores/architectureVerification.ts(65,3): error TS2724: '"./shared/enterprise"' has no exported member named 'enterpriseFeatures'. Did you mean 'EnterpriseState'?
src/stores/architectureVerification.ts(66,3): error TS2724: '"./shared/enterprise"' has no exported member named 'bulkOperations'. Did you mean 'BulkOperation'?
src/stores/architectureVerification.ts(67,3): error TS2305: Module '"./shared/enterprise"' has no exported member 'auditTrail'.
src/stores/architectureVerification.ts(72,3): error TS2305: Module '"./shared/orchestration"' has no exported member 'crossDomainOrchestration'.
src/stores/architectureVerification.ts(73,3): error TS2305: Module '"./shared/orchestration"' has no exported member 'workflowOrchestrator'.
src/stores/architectureVerification.ts(78,3): error TS2724: '"./shared/legacy"' has no exported member named 'authStore'. Did you mean 'useAuthStore'?
src/stores/architectureVerification.ts(79,3): error TS2305: Module '"./shared/legacy"' has no exported member 'migrationUtils'.
src/stores/domains/administration/analytics/analyticsEngine.ts(237,7): error TS2322: Type 'unknown' is not assignable to type 'number'.
src/stores/domains/administration/analytics/analyticsEngine.ts(255,22): error TS2362: The left-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
src/stores/domains/administration/analytics/analyticsEngine.ts(322,41): error TS2339: Property 'medications' does not exist on type 'unknown'.
src/stores/domains/administration/analytics/analyticsEngine.ts(328,32): error TS2339: Property 'id' does not exist on type 'unknown'.
src/stores/domains/administration/analytics/analyticsEngine.ts(342,39): error TS2339: Property 'allergies' does not exist on type 'unknown'.
src/stores/domains/administration/analytics/analyticsEngine.ts(349,30): error TS2339: Property 'id' does not exist on type 'unknown'.
src/stores/domains/administration/analytics/analyticsEngine.ts(362,43): error TS2339: Property 'incidentReports' does not exist on type 'unknown'.
src/stores/domains/administration/analytics/analyticsEngine.ts(370,30): error TS2339: Property 'id' does not exist on type 'unknown'.
src/stores/domains/administration/analytics/analyticsEngine.ts(384,41): error TS2339: Property 'chronicConditions' does not exist on type 'unknown'.
src/stores/domains/administration/analytics/analyticsEngine.ts(394,30): error TS2339: Property 'id' does not exist on type 'unknown'.
src/stores/domains/core/selectors.ts(101,20): error TS2339: Property 'schoolId' does not exist on type 'WritableDraft<User>'.
src/stores/domains/core/selectors.ts(102,18): error TS2339: Property 'avatar' does not exist on type 'WritableDraft<User>'.
src/stores/domains/healthcare/selectors.ts(35,7): error TS7018: Object literal's property 'lastHealthCheckup' implicitly has an 'any' type.
src/stores/domains/healthcare/selectors.ts(45,3): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/stores/domains/healthcare/selectors.ts(60,3): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/stores/domains/healthcare/selectors.ts(91,3): error TS7011: Function expression, which lacks return-type annotation, implicitly has an 'any[]' return type.
src/stores/domains/healthcare/selectors.ts(139,5): error TS7018: Object literal's property 'criticalMedications' implicitly has an 'any[]' type.
src/stores/domains/healthcare/selectors.ts(140,5): error TS7018: Object literal's property 'missedAppointments' implicitly has an 'any[]' type.
src/stores/domains/healthcare/selectors.ts(141,5): error TS7018: Object literal's property 'severeIncidents' implicitly has an 'any[]' type.
src/stores/domains/healthcare/selectors.ts(142,5): error TS7018: Object literal's property 'expiringMedications' implicitly has an 'any[]' type.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(15,10): error TS2614: Module '"../../../slices/incidentReportsSlice"' has no exported member 'incidentReportsActions'. Did you mean to use 'import incidentReportsActions from "../../../slices/incidentReportsSlice"' instead?
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(196,16): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ PRIMARY: number; SECONDARY: number; TERTIARY: number; }'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(196,44): error TS7053: Element implicitly has an 'any' type because expression of type 'any' can't be used to index type '{ PRIMARY: number; SECONDARY: number; TERTIARY: number; }'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(204,28): error TS2339: Property 'id' does not exist on type 'unknown'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(220,34): error TS2339: Property 'id' does not exist on type 'unknown'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(309,9): error TS2322: Type '"COMPLETED"' is not assignable to type '"IN_PROGRESS"'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(318,9): error TS2322: Type '"COMPLETED"' is not assignable to type '"IN_PROGRESS"'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(324,9): error TS2322: Type '"COMPLETED"' is not assignable to type '"IN_PROGRESS"'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(338,9): error TS2322: Type '"COMPLETED"' is not assignable to type '"IN_PROGRESS"'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(344,9): error TS2322: Type '"COMPLETED"' is not assignable to type '"IN_PROGRESS"'.
src/stores/domains/healthcare/workflows/emergencyWorkflows.ts(351,9): error TS2322: Type '"COMPLETED"' is not assignable to type '"IN_PROGRESS"'.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(71,42): error TS2339: Property 'entities' does not exist on type 'unknown'.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(116,35): error TS7006: Parameter 'med' implicitly has an 'any' type.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(117,31): error TS7006: Parameter 'med' implicitly has an 'any' type.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(140,33): error TS7006: Parameter 'checkMed' implicitly has an 'any' type.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(141,29): error TS2339: Property 'entities' does not exist on type 'unknown'.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(207,42): error TS2339: Property 'entities' does not exist on type 'unknown'.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(292,52): error TS7006: Parameter 'med' implicitly has an 'any' type.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(387,61): error TS7006: Parameter 'log' implicitly has an 'any' type.
src/stores/domains/healthcare/workflows/medicationWorkflows.ts(394,61): error TS7006: Parameter 'log' implicitly has an 'any' type.
src/stores/index.ts(328,47): error TS7018: Object literal's property 'column' implicitly has an 'any' type.
src/stores/shared/api/advancedApiIntegration.ts(191,46): error TS2339: Property 'retryAfter' does not exist on type 'unknown'.
src/stores/shared/api/advancedApiIntegration.ts(330,7): error TS2353: Object literal may only specify known properties, and 'pollingInterval' does not exist in type 'Omit<EndpointDefinitionWithQuery<{ operationId: string; }, BaseQueryFn, BulkOperationResponse, unknown> & CommonEndpointDefinition<{ ...; }, BaseQueryFn, BulkOperationResponse> & { ...; } & { ...; } & QueryExtraOptions<...>, "type"> | Omit<...>'.
src/stores/shared/api/advancedApiIntegration.ts(330,25): error TS7006: Parameter 'result' implicitly has an 'any' type.
src/stores/shared/api/advancedApiIntegration.ts(393,7): error TS2353: Object literal may only specify known properties, and 'pollingInterval' does not exist in type 'Omit<EndpointDefinitionWithQuery<{ executionId: string; }, BaseQueryFn, WorkflowExecutionResponse, unknown> & CommonEndpointDefinition<...> & { ...; } & { ...; } & QueryExtraOptions<...>, "type"> | Omit<...>'.
src/stores/shared/api/advancedApiIntegration.ts(393,25): error TS7006: Parameter 'result' implicitly has an 'any' type.
src/stores/shared/api/advancedApiIntegration.ts(585,7): error TS2353: Object literal may only specify known properties, and 'pollingInterval' does not exist in type 'Omit<EndpointDefinitionWithQuery<void, BaseQueryFn, { status: "CRITICAL" | "HEALTHY" | "DEGRADED"; services: Record<string, { status: "UP" | "DOWN" | "SLOW"; responseTime: number; errorRate: number; }>; alerts: { ...; }[]; }, unknown> & CommonEndpointDefinition<...> & { ...; } & { ...; } & QueryExtraOptions<...>, "t...'.
src/stores/shared/api/advancedApiIntegration.ts(681,46): error TS2345: Argument of type 'string[]' is not assignable to parameter of type 'TagDescription<"Analytics" | "BulkOperation" | "WorkflowExecution" | "AuditTrail" | "ComplianceReport" | "PerformanceMetrics" | "SyncStatus">[]'.
  Type 'string' is not assignable to type 'TagDescription<"Analytics" | "BulkOperation" | "WorkflowExecution" | "AuditTrail" | "ComplianceReport" | "PerformanceMetrics" | "SyncStatus">'.
src/stores/shared/api/serviceIntegration.ts(19,10): error TS2724: '"../../../services/api"' has no exported member named 'inventoryApi'. Did you mean 'InventoryApi'?
src/stores/shared/api/serviceIntegration.ts(277,40): error TS2322: Type '{ id: any; success: any; }' is not assignable to type 'T | T[]'.
  Type '{ id: any; success: any; }' is not assignable to type 'T'.
    'T' could be instantiated with an arbitrary type which could be unrelated to '{ id: any; success: any; }'.
src/stores/shared/api/tanstackIntegration.ts(350,29): error TS2307: Cannot find module '../../../../../services/api' or its corresponding type declarations.
src/stores/shared/api/verifyIntegration.ts(80,3): error TS2724: '"@/stores"' has no exported member named 'useIncidentReports'. Did you mean 'searchIncidentReports'?
src/stores/shared/api/verifyIntegration.ts(81,3): error TS2724: '"@/stores"' has no exported member named 'useCurrentIncident'. Did you mean 'selectCurrentIncident'?
src/stores/shared/api/verifyIntegration.ts(82,3): error TS2724: '"@/stores"' has no exported member named 'useWitnessStatements'. Did you mean 'selectWitnessStatements'?
src/stores/shared/api/verifyIntegration.ts(83,3): error TS2724: '"@/stores"' has no exported member named 'useFollowUpActions'. Did you mean 'selectFollowUpActions'?
src/stores/shared/api/verifyIntegration.ts(84,3): error TS2724: '"@/stores"' has no exported member named 'useIncidentSearchResults'. Did you mean 'selectSearchResults'?
src/stores/shared/api/verifyIntegration.ts(90,3): error TS2724: '"@/stores"' has no exported member named 'useIncidentLoadingStates'. Did you mean 'selectLoadingStates'?
src/stores/shared/enterprise/enterpriseFeatures.ts(253,15): error TS2353: Object literal may only specify known properties, and 'sensitive' does not exist in type 'Omit<AuditChange, "sensitive">'.
src/stores/shared/legacy/authStore.ts(31,7): error TS7018: Object literal's property 'user' implicitly has an 'any' type.
src/stores/shared/legacy/authStore.ts(34,7): error TS7018: Object literal's property 'token' implicitly has an 'any' type.
src/stores/shared/legacy/index.ts(11,15): error TS2307: Cannot find module './contextMigration' or its corresponding type declarations.
src/stores/slices/districtsSlice.ts(19,28): error TS2339: Property 'districts' does not exist on type 'District[]'.
src/stores/slices/districtsSlice.ts(20,29): error TS2339: Property 'pagination' does not exist on type 'District[]'.
src/stores/slices/districtsSlice.ts(21,34): error TS2339: Property 'pagination' does not exist on type 'District[]'.
src/stores/slices/districtsSlice.ts(28,37): error TS2339: Property 'districts' does not exist on type 'District[]'.
src/stores/slices/districtsSlice.ts(37,29): error TS2339: Property 'data' does not exist on type 'District'.
src/stores/slices/districtsSlice.ts(42,29): error TS2339: Property 'data' does not exist on type 'District'.
src/stores/slices/inventorySlice.ts(9,10): error TS2724: '"../../services/api"' has no exported member named 'inventoryApi'. Did you mean 'InventoryApi'?
src/stores/slices/schoolsSlice.ts(25,28): error TS2339: Property 'schools' does not exist on type 'School[]'.
src/stores/slices/schoolsSlice.ts(26,29): error TS2339: Property 'pagination' does not exist on type 'School[]'.
src/stores/slices/schoolsSlice.ts(27,34): error TS2339: Property 'pagination' does not exist on type 'School[]'.
src/stores/slices/schoolsSlice.ts(34,35): error TS2339: Property 'schools' does not exist on type 'School[]'.
src/stores/slices/schoolsSlice.ts(43,29): error TS2339: Property 'data' does not exist on type 'School'.
src/stores/slices/schoolsSlice.ts(48,29): error TS2339: Property 'data' does not exist on type 'School'.
src/stores/slices/settingsSlice.ts(85,29): error TS2339: Property 'data' does not exist on type 'SystemConfiguration'.
src/stores/slices/settingsSlice.ts(89,74): error TS2353: Object literal may only specify known properties, and 'id' does not exist in type 'ConfigurationData'.
src/stores/slices/settingsSlice.ts(90,29): error TS2339: Property 'data' does not exist on type 'SystemConfiguration'.
src/stores/slices/studentsSlice.ts(12,8): error TS2459: Module '"../../pages/students/store/studentsSlice"' declares 'StudentFilters' locally, but it is not exported.
src/stores/slices/usersSlice.ts(17,28): error TS2339: Property 'users' does not exist on type 'User[]'.
src/stores/slices/usersSlice.ts(18,29): error TS2339: Property 'pagination' does not exist on type 'User[]'.
src/stores/slices/usersSlice.ts(19,34): error TS2339: Property 'pagination' does not exist on type 'User[]'.
src/stores/slices/usersSlice.ts(26,33): error TS2339: Property 'users' does not exist on type 'User[]'.
src/stores/slices/usersSlice.ts(35,29): error TS2339: Property 'data' does not exist on type 'User'.
src/stores/slices/usersSlice.ts(40,29): error TS2339: Property 'data' does not exist on type 'User'.
src/stores/utils/performanceUtils.tsx(28,25): error TS2769: No overload matches this call.
  Argument of type 'any[]' is not assignable to parameter of type '[...inputSelectors: any[], combiner: (...resultFuncArgs: any[]) => unknown]'.
    Source provides no match for required element at position 1 in target.
  Argument of type 'any[]' is not assignable to parameter of type '[...inputSelectors: any[], combiner: (...resultFuncArgs: any[]) => unknown, createSelectorOptions: { devModeChecks?: Partial<DevModeChecks>; memoize?: <Func extends AnyFunction>(func: Func, options?: WeakMapMemoizeOptions<ReturnType<Func>>) => Func & { ...; }; argsMemoize?: <Func extends AnyFunction>(func: Func, opt...'.
    Source provides no match for required element at position 2 in target.
src/stores/utils/reduxHOCs.tsx(12,26): error TS2307: Cannot find module '@/components/ErrorMessage' or its corresponding type declarations.
src/types/api.ts(471,3): error TS2300: Duplicate identifier 'ApiResponse'.
src/types/api.ts(475,3): error TS2300: Duplicate identifier 'PaginatedResponse'.
src/types/api.ts(509,3): error TS2303: Circular definition of import alias 'isApiResponse'.
src/types/api.ts(510,3): error TS2303: Circular definition of import alias 'isSuccessResponse'.
src/types/api.ts(511,3): error TS2303: Circular definition of import alias 'isErrorResponse'.
src/types/api.ts(512,3): error TS2303: Circular definition of import alias 'isPaginatedResponse'.
src/types/api.ts(513,3): error TS2303: Circular definition of import alias 'isMutationSuccess'.
src/types/api.ts(514,3): error TS2303: Circular definition of import alias 'isMutationError'.
src/types/api.ts(641,3): error TS2300: Duplicate identifier 'ApiResponse'.
src/types/api.ts(642,3): error TS2300: Duplicate identifier 'PaginatedResponse'.
src/types/appointments.ts(59,15): error TS2322: Type '"IN_PROGRESS"' is not assignable to type 'AppointmentStatus'.
src/types/appointments.ts(59,30): error TS2322: Type '"CANCELLED"' is not assignable to type 'AppointmentStatus'.
src/types/appointments.ts(59,43): error TS2322: Type '"NO_SHOW"' is not assignable to type 'AppointmentStatus'.
src/types/appointments.ts(60,17): error TS2322: Type '"COMPLETED"' is not assignable to type 'AppointmentStatus'.
src/types/appointments.ts(60,30): error TS2322: Type '"CANCELLED"' is not assignable to type 'AppointmentStatus'.
src/types/appointments.ts(884,45): error TS2552: Cannot find name 'AppointmentCreateData'. Did you mean 'AppointmentUpdateData'?
src/types/graphql/responses.ts(495,34): error TS2304: Cannot find name 'ErrorResponse'.
src/types/graphql/responses.ts(504,40): error TS2304: Cannot find name 'ErrorResponse'.
src/types/graphql/responses.ts(505,16): error TS2304: Cannot find name 'ErrorResponse'.
src/types/index.ts(23,1): error TS2308: Module './api' has already exported a member named 'SuccessResponse'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(23,1): error TS2308: Module './common' has already exported a member named 'AuditLog'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(23,1): error TS2308: Module './common' has already exported a member named 'ComplianceStatus'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(23,1): error TS2308: Module './common' has already exported a member named 'PaginatedResponse'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(23,1): error TS2308: Module './common' has already exported a member named 'PaginationParams'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(26,1): error TS2308: Module './api' has already exported a member named 'Appointment'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(26,1): error TS2308: Module './api' has already exported a member named 'AppointmentFilters'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(26,1): error TS2308: Module './api' has already exported a member named 'AppointmentFormData'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(26,1): error TS2308: Module './common' has already exported a member named 'AppointmentStatus'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(26,1): error TS2308: Module './common' has already exported a member named 'AppointmentType'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './api' has already exported a member named 'SuccessResponse'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './common' has already exported a member named 'AuditLog'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './common' has already exported a member named 'PaginatedResponse'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './common' has already exported a member named 'PaginationParams'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './common' has already exported a member named 'SystemSettings'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './common' has already exported a member named 'User'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './common' has already exported a member named 'UserRole'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './compliance' has already exported a member named 'AuditAction'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './compliance' has already exported a member named 'AuditLogFilters'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(29,1): error TS2308: Module './compliance' has already exported a member named 'PaginationResult'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(32,1): error TS2308: Module './appointments' has already exported a member named 'MessageType'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(35,1): error TS2308: Module './common' has already exported a member named 'ComplianceStatus'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(35,1): error TS2308: Module './common' has already exported a member named 'IncidentType'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(38,1): error TS2308: Module './administration' has already exported a member named 'PerformanceMetric'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(38,1): error TS2308: Module './api' has already exported a member named 'ChronicCondition'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(38,1): error TS2308: Module './api' has already exported a member named 'IncidentReport'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(38,1): error TS2308: Module './common' has already exported a member named 'AuditLog'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(38,1): error TS2308: Module './common' has already exported a member named 'DateRangeFilter'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(38,1): error TS2308: Module './compliance' has already exported a member named 'ComplianceReport'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(38,1): error TS2308: Module './compliance' has already exported a member named 'ComplianceStatistics'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(38,1): error TS2308: Module './incidents' has already exported a member named 'IncidentStatistics'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(44,1): error TS2308: Module './incidents' has already exported a member named 'IncidentSeverity'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(44,1): error TS2308: Module './incidents' has already exported a member named 'isIncidentSeverity'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(47,1): error TS2308: Module './common' has already exported a member named 'IntegrationStatus'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(50,1): error TS2308: Module './api' has already exported a member named 'Vendor'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(53,1): error TS2308: Module './api' has already exported a member named 'PurchaseOrder'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(53,1): error TS2308: Module './common' has already exported a member named 'PurchaseOrderStatus'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './api' has already exported a member named 'InventoryAlert'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './api' has already exported a member named 'InventoryItem'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './api' has already exported a member named 'InventoryTransaction'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './api' has already exported a member named 'PurchaseOrder'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './api' has already exported a member named 'Vendor'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './common' has already exported a member named 'InventoryTransactionType'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './common' has already exported a member named 'PurchaseOrderStatus'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './purchaseOrders' has already exported a member named 'PurchaseOrderFormData'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './purchaseOrders' has already exported a member named 'PurchaseOrderItem'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(56,1): error TS2308: Module './vendors' has already exported a member named 'VendorFormData'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(59,1): error TS2308: Module './api' has already exported a member named 'BudgetCategory'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(68,1): error TS2308: Module './reports' has already exported a member named 'PerformanceMetrics'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './api' has already exported a member named 'Allergy'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './api' has already exported a member named 'ChronicCondition'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './api' has already exported a member named 'HealthRecord'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './api' has already exported a member named 'HealthRecordFilters'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './api' has already exported a member named 'Vaccination'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './api' has already exported a member named 'VitalSigns'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './common' has already exported a member named 'AllergySeverity'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './dashboard' has already exported a member named 'HealthAlert'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(71,1): error TS2308: Module './reports' has already exported a member named 'ReportType'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(74,1): error TS2308: Module './api' has already exported a member named 'BulkOperationResult'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './api' has already exported a member named 'Allergy'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './api' has already exported a member named 'Appointment'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './api' has already exported a member named 'ChronicCondition'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './api' has already exported a member named 'HealthRecord'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './api' has already exported a member named 'IncidentReport'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './api' has already exported a member named 'StudentMedication'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './common' has already exported a member named 'AllergySeverity'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './common' has already exported a member named 'ContactPriority'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './common' has already exported a member named 'EmergencyContact'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './common' has already exported a member named 'Gender'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(77,1): error TS2308: Module './common' has already exported a member named 'Student'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(80,1): error TS2308: Module './accessControl' has already exported a member named 'DeleteResponse'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(80,1): error TS2308: Module './api' has already exported a member named 'isErrorResponse'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(80,1): error TS2308: Module './api' has already exported a member named 'isPaginatedResponse'. Consider explicitly re-exporting to resolve the ambiguity.
src/types/index.ts(80,1): error TS2308: Module './api' has already exported a member named 'isSuccessResponse'. Consider explicitly re-exporting to resolve the ambiguity.
src/utils/adapters/apiAdapters.ts(227,16): error TS2677: A type predicate's type must be assignable to its parameter's type.
  Type 'ErrorResponse' is not assignable to type 'ApiResponse<unknown>'.
    Property 'data' is optional in type 'ErrorResponse' but required in type 'ApiResponse<unknown>'.
src/utils/healthRecords.ts(14,15): error TS2459: Module '"../services/modules/healthRecordsApi"' declares 'AllergySeverity' locally, but it is not exported.
src/utils/lodashUtils.ts(25,45): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(30,44): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(35,43): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(40,39): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(45,69): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(50,39): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(55,37): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(60,39): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(65,67): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(70,39): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(75,67): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(83,29): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(88,54): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(93,82): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(98,82): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(103,67): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(108,85): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(113,77): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(118,67): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(123,95): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(128,96): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(136,32): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(141,31): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(146,31): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(151,31): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(156,46): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(161,61): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(166,26): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(171,30): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(176,72): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(181,50): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(186,76): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(191,29): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(196,29): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(201,67): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(206,65): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(217,15): error TS2304: Cannot find name 'debounceSettings'.
src/utils/lodashUtils.ts(227,8): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(232,60): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(237,56): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(242,36): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(247,58): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(252,57): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(263,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(286,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(337,28): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(342,32): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(347,32): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(399,29): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(404,30): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(409,29): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(414,29): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(419,50): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(424,49): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(429,53): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(434,47): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(449,34): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(468,8): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(477,28): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(487,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(487,48): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(500,21): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(502,39): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(507,16): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(527,8): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(536,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(538,13): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(539,16): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(550,13): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(565,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(572,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(579,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(586,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(593,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(600,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(623,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(633,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(650,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(651,24): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(652,24): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/lodashUtils.ts(666,12): error TS2686: '_' refers to a UMD global, but the current file is a module. Consider adding an import instead.
src/utils/medications.ts(298,71): error TS2339: Property 'name' does not exist on type 'Medication'.
src/utils/medications.ts(299,26): error TS2339: Property 'name' does not exist on type 'Medication'.
src/utils/medications.ts(301,21): error TS2339: Property 'name' does not exist on type 'Medication'.
src/utils/medications.ts(339,11): error TS2339: Property 'name' does not exist on type 'Medication'.
src/utils/medications.ts(410,13): error TS2339: Property 'name' does not exist on type 'Partial<Medication>'.
src/utils/navigationUtils.ts(185,50): error TS2339: Property 'hasAccess' does not exist on type 'NavigationItem'.
src/utils/navigationUtils.ts(241,37): error TS2345: Argument of type 'NavigationItem[]' is not assignable to parameter of type 'FilteredNavigationItem[]'.
  Property 'hasAccess' is missing in type 'NavigationItem' but required in type 'FilteredNavigationItem'.
src/utils/optimisticHelpers.ts(129,5): error TS2345: Argument of type 'OptimisticOperationOptions<T>' is not assignable to parameter of type 'OptimisticOperationOptions<{ data: T[]; }>'.
  Type 'T' is not assignable to type '{ data: T[]; }'.
    Property 'data' is missing in type 'BaseEntity' but required in type '{ data: T[]; }'.
src/utils/optimisticHelpers.ts(241,5): error TS2345: Argument of type 'OptimisticOperationOptions<T>' is not assignable to parameter of type 'OptimisticOperationOptions<{ data: T[]; }>'.
  Type 'T' is not assignable to type '{ data: T[]; }'.
    Property 'data' is missing in type 'BaseEntity' but required in type '{ data: T[]; }'.
src/utils/optimisticHelpers.ts(325,5): error TS2345: Argument of type 'OptimisticOperationOptions<T>' is not assignable to parameter of type 'OptimisticOperationOptions<{ data: T[]; }>'.
  Type 'T' is not assignable to type '{ data: T[]; }'.
    Property 'data' is missing in type 'BaseEntity' but required in type '{ data: T[]; }'.
src/utils/optimisticHelpers.ts(377,5): error TS2345: Argument of type 'OptimisticOperationOptions<T[]>' is not assignable to parameter of type 'OptimisticOperationOptions<{ data: T[]; }>'.
  Property 'data' is missing in type 'T[]' but required in type '{ data: T[]; }'.
src/utils/optimisticHelpers.ts(415,5): error TS2345: Argument of type 'OptimisticOperationOptions<T[]>' is not assignable to parameter of type 'OptimisticOperationOptions<{ data: T[]; }>'.
  Property 'data' is missing in type 'T[]' but required in type '{ data: T[]; }'.
src/utils/validation/studentValidation.ts(555,16): error TS2339: Property 'studentNumber' does not exist on type 'T'.
src/utils/validation/studentValidation.ts(559,16): error TS2339: Property 'firstName' does not exist on type 'T'.
src/utils/validation/studentValidation.ts(563,16): error TS2339: Property 'lastName' does not exist on type 'T'.
src/utils/validation/studentValidation.ts(567,16): error TS2339: Property 'medicalRecordNum' does not exist on type 'T'.
src/utils/validation/studentValidation.ts(573,16): error TS2339: Property 'grade' does not exist on type 'T'.
src/validation/accessControlSchemas.ts(91,5): error TS2345: Argument of type '(value: any) => { message: string; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/validation/accessControlSchemas.ts(91,6): error TS7006: Parameter 'value' implicitly has an 'any' type.
src/validation/accessControlSchemas.ts(137,5): error TS2345: Argument of type '(value: any) => { message: string; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/validation/accessControlSchemas.ts(137,6): error TS7006: Parameter 'value' implicitly has an 'any' type.
src/validation/accessControlSchemas.ts(156,5): error TS2345: Argument of type '(value: any) => { message: string; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/validation/accessControlSchemas.ts(156,6): error TS7006: Parameter 'value' implicitly has an 'any' type.
src/validation/accessControlSchemas.ts(193,5): error TS2345: Argument of type '(data: any) => { message: string; path: string[]; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/validation/accessControlSchemas.ts(193,6): error TS7006: Parameter 'data' implicitly has an 'any' type.
src/validation/communicationSchemas.ts(190,5): error TS2345: Argument of type '(data: any) => { message: string; path: string[]; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/validation/communicationSchemas.ts(190,6): error TS7006: Parameter 'data' implicitly has an 'any' type.
src/validation/communicationSchemas.ts(207,5): error TS2345: Argument of type '(data: any) => { message: string; path: string[]; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/validation/communicationSchemas.ts(207,6): error TS7006: Parameter 'data' implicitly has an 'any' type.
src/validation/communicationSchemas.ts(274,5): error TS2345: Argument of type '(data: any) => { message: string; path: string[]; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/validation/communicationSchemas.ts(274,6): error TS7006: Parameter 'data' implicitly has an 'any' type.
src/validation/communicationSchemas.ts(291,5): error TS2345: Argument of type '(data: any) => { message: string; path: string[]; }' is not assignable to parameter of type 'string | { params?: Record<string, any>; abort?: boolean; when?: (payload: ParsePayload<unknown>) => boolean; path?: PropertyKey[]; error?: string | $ZodErrorMap<NonNullable<$ZodIssue>>; message?: string; }'.
src/validation/communicationSchemas.ts(291,6): error TS7006: Parameter 'data' implicitly has an 'any' type.
