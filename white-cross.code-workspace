{
  "folders": [
    {
      "name": "White Cross (Root)",
      "path": "."
    },
    {
      "name": "Backend API",
      "path": "./backend"
    },
    {
      "name": "Frontend React",
      "path": "./frontend"
    },
    {
      "name": "Documentation",
      "path": "./docs"
    }
  ],
  "settings": {
    // TypeScript & Node.js Optimization (Latest 2024/2025)
    "typescript.preferences.includePackageJsonAutoImports": "auto",
    "typescript.suggest.includeAutomaticOptionalChainCompletions": true,
    "typescript.suggest.includeCompletionsForModuleExports": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.format.enable": true,
    "typescript.suggest.autoImports": true,
    "typescript.suggest.classMemberSnippets.enabled": true,
    "typescript.suggest.completeFunctionCalls": true,
    "typescript.suggest.enabled": true,
    "typescript.suggest.jsdoc.generateReturns": true,
    "typescript.workspaceSymbols.scope": "allOpenProjects",

    // Node.js specific
    "node.npmPath": "npm",
    "npm.packageManager": "npm",
    "node.repl.useCodeCompletion": true,

    // Editor Appearance & Behavior (2024/2025 Updates)
    "workbench.iconTheme": "material-icon-theme",
    "workbench.colorTheme": "GitHub Dark Default",
    "workbench.tree.indent": 16,
    "workbench.tree.renderIndentGuides": "always",
    "workbench.editor.enablePreview": false,
    "workbench.editor.enablePreviewFromQuickOpen": false,
    "workbench.startupEditor": "welcomePageInEmptyWorkbench",
    "workbench.panel.defaultLocation": "bottom",
    "workbench.activityBar.location": "default",
    "workbench.editor.limit.enabled": true,
    "workbench.editor.limit.value": 15,
    "workbench.editor.limit.perEditorGroup": true,

    // Editor Configuration
    "editor.fontFamily": "'JetBrains Mono', 'Cascadia Code', 'Fira Code', Consolas, 'Courier New', monospace",
    "editor.fontSize": 14,
    "editor.fontLigatures": true,
    "editor.lineHeight": 1.6,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": true,
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": "explicit",
      "source.organizeImports": "explicit",
      "source.addMissingImports": "explicit"
    },
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    "editor.guides.bracketPairsHorizontal": "active",
    "editor.guides.highlightActiveIndentation": true,
    "editor.cursorBlinking": "smooth",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.smoothScrolling": true,
    "editor.minimap.enabled": true,
    "editor.minimap.showSlider": "always",
    "editor.wordWrap": "bounded",
    "editor.wordWrapColumn": 100,
    "editor.rulers": [80, 100, 120],
    "editor.suggest.preview": true,
    "editor.suggest.showInlineDetails": true,
    "editor.parameterHints.enabled": true,
    "editor.quickSuggestions": {
      "strings": true,
      "comments": true,
      "other": true
    },
    "editor.inlineSuggest.enabled": true,
    "editor.acceptSuggestionOnCommitCharacter": true,
    "editor.acceptSuggestionOnEnter": "smart",

    // Search & Explorer
    "search.exclude": {
      "**/node_modules": true,
      "**/dist": true,
      "**/build": true,
      "**/.git": true,
      "**/.next": true,
      "**/coverage": true,
      "**/.nyc_output": true,
      "**/cypress/videos": true,
      "**/cypress/screenshots": true
    },
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "explorer.compactFolders": false,
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.patterns": {
      "*.ts": "${capture}.js,${capture}.d.ts,${capture}.js.map",
      "*.tsx": "${capture}.js,${capture}.jsx,${capture}.d.ts,${capture}.js.map",
      "*.js": "${capture}.js.map,${capture}.min.js,${capture}.d.ts",
      "*.jsx": "${capture}.js,${capture}.d.ts",
      "package.json": "package-lock.json,yarn.lock,pnpm-lock.yaml,bun.lockb,.npmrc",
      "*.env": "*.env.*",
      "README*": "AUTHORS,BACKERS*,CHANGELOG*,CITATION*,CODE_OF_CONDUCT*,CONTRIBUTING*,CONTRIBUTORS,COPYING*,CREDITS,GOVERNANCE.md,HISTORY.md,LICENSE*,MAINTAINERS,README*,SECURITY.md,SPONSORS*",
      "dockerfile": "dockerfile*,.dockerignore,docker-compose.yml,docker-compose.yaml",
      "tsconfig.json": "tsconfig*.json",
      "vite.config.*": "vitest.config.*,playwright.config.*,cypress.config.*"
    },

    // Language Specific Settings
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit",
        "source.organizeImports": "explicit"
      }
    },
    "[typescriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit",
        "source.organizeImports": "explicit"
      }
    },
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit"
      }
    },
    "[javascriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "explicit"
      }
    },
    "[json]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[scss]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[html]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[markdown]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.wordWrap": "on",
      "editor.quickSuggestions": {
        "comments": "off",
        "strings": "off",
        "other": "off"
      }
    },
    "[yaml]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.insertSpaces": true,
      "editor.tabSize": 2,
      "editor.autoIndent": "advanced"
    },

    // Testing Configuration (Updated 2024/2025)
    "jest.runMode": "on-demand",
    "jest.coverageFormatter": "GutterFormatter",
    "vitest.include": ["**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}"],
    "vitest.exclude": [
      "**/node_modules/**",
      "**/dist/**",
      "**/cypress/**",
      "**/.{idea,git,cache,output,temp}/**"
    ],

    // ESLint Configuration
    "eslint.enable": true,
    "eslint.validate": ["javascript", "javascriptreact", "typescript", "typescriptreact"],
    "eslint.workingDirectories": ["./frontend", "./backend"],
    "eslint.codeActionsOnSave.mode": "all",

    // Prettier Configuration
    "prettier.requireConfig": false,
    "prettier.useEditorConfig": false,
    "prettier.semi": true,
    "prettier.singleQuote": true,
    "prettier.trailingComma": "es5",
    "prettier.tabWidth": 2,
    "prettier.printWidth": 100,
    "prettier.bracketSpacing": true,
    "prettier.arrowParens": "avoid",

    // Git Integration
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    "git.autofetchPeriod": 180,
    "git.decorations.enabled": true,
    "git.showProgress": true,
    "git.suggestSmartCommit": false,
    "gitlens.mode.active": "zen",
    "gitlens.codeLens.enabled": true,
    "gitlens.currentLine.enabled": true,
    "gitlens.hovers.currentLine.over": "line",

    // Security & Privacy (Enhanced 2024/2025)
    "security.workspace.trust.untrustedFiles": "open",
    "security.workspace.trust.banner": "always",
    "security.workspace.trust.startupPrompt": "once",
    "security.workspace.trust.emptyWindow": true,
    "telemetry.telemetryLevel": "off",
    "redhat.telemetry.enabled": false,

    // Terminal Configuration (Updated 2024/2025)
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "terminal.integrated.fontFamily": "JetBrains Mono, Cascadia Code, Consolas",
    "terminal.integrated.fontSize": 13,
    "terminal.integrated.lineHeight": 1.4,
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.scrollback": 10000,
    "terminal.integrated.enableMultiLinePasteWarning": "never",
    "terminal.integrated.confirmOnExit": "hasChildProcesses",
    "terminal.integrated.enablePersistentSessions": true,
    "terminal.integrated.persistentSessionReviveProcess": "onExit",

    // React & Frontend Specific
    "emmet.includeLanguages": {
      "javascript": "javascriptreact",
      "typescript": "typescriptreact"
    },
    "emmet.triggerExpansionOnTab": true,
    "emmet.showExpandedAbbreviation": "always",

    // TailwindCSS Configuration
    "tailwindCSS.includeLanguages": {
      "typescript": "typescript",
      "typescriptreact": "typescriptreact"
    },
    "tailwindCSS.experimental.classRegex": [
      ["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
      ["cx\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"],
      ["cn\\(([^)]*)\\)", "(?:'|\"|`)([^']*)(?:'|\"|`)"]
    ],

    // Performance Optimizations (Updated 2024/2025)
    "files.watcherExclude": {
      "**/.git/objects/**": true,
      "**/.git/subtree-cache/**": true,
      "**/node_modules/*/**": true,
      "**/dist/**": true,
      "**/build/**": true,
      "**/.next/**": true,
      "**/coverage/**": true,
      "**/cypress/videos/**": true,
      "**/cypress/screenshots/**": true,
      "**/.vscode/**": true,
      "**/logs/**": true,
      "**/.nyc_output/**": true
    },
    "files.exclude": {
      "**/node_modules": true,
      "**/.git": true,
      "**/.DS_Store": true,
      "**/Thumbs.db": true
    },
    "search.useGlobalIgnoreFiles": true,
    "search.useParentIgnoreFiles": true,
    "typescript.preferences.includePackageJsonAutoImports": "auto",
    "typescript.disableAutomaticTypeAcquisition": false,
    "typescript.check.npmIsInstalled": false,

    // Extensions Behavior (Updated 2024/2025)
    "extensions.ignoreRecommendations": false,
    "extensions.autoUpdate": "onlyEnabledExtensions",
    "extensions.autoCheckUpdates": true,

    // File Associations
    "files.associations": {
      "*.env*": "properties",
      ".env*": "properties",
      "Dockerfile*": "dockerfile",
      "docker-compose*.yml": "yaml",
      "docker-compose*.yaml": "yaml",
      "*.cy.ts": "typescript",
      "*.cy.js": "javascript"
    },

    // Auto Save & Backup (Enhanced)
    "files.autoSave": "onFocusChange",
    "files.hotExit": "onExitAndWindowClose",
    "files.defaultLanguage": "typescript",
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "files.trimFinalNewlines": true,

    // IntelliSense & Autocomplete
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggest.localityBonus": true,
    "editor.suggest.showWords": false,

    // Breadcrumbs
    "breadcrumbs.enabled": true,
    "breadcrumbs.filePath": "on",
    "breadcrumbs.symbolPath": "on",
    "breadcrumbs.symbolSortOrder": "position",

    // Problems & Diagnostics
    "problems.decorations.enabled": true,
    "problems.showCurrentInStatus": true,

    // Bracket Pair Colorization (Enhanced)
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
    "editor.stickyScroll.enabled": true,
    "editor.stickyScroll.maxLineCount": 5,

    // Modern Editor Features (2024/2025)
    "editor.accessibilitySupport": "auto",
    "editor.semanticHighlighting.enabled": true,
    "editor.semanticTokenColorCustomizations": {},
    "editor.linkedEditing": true,
    "editor.unicodeHighlight.ambiguousCharacters": true,
    "editor.unicodeHighlight.invisibleCharacters": true,
    "editor.foldingImportsByDefault": true,
    "editor.showUnused": true,
  },
  "extensions": {
    "recommendations": [
      // Core Language Support (Essential)
      "ms-vscode.vscode-typescript-next",
      "esbenp.prettier-vscode",
      "dbaeumer.vscode-eslint",
      "bradlc.vscode-tailwindcss",
      "ms-vscode.vscode-json",

      // AI & Code Enhancement (2024/2025)
      "github.copilot",
      "github.copilot-chat",
      "yoavbls.pretty-ts-errors",
      "usernamehw.errorlens",

      // Testing Extensions (Updated)
      "orta.vscode-jest",
      "zixuanchen.vitest-explorer",
      "ms-playwright.playwright",

      // React & Frontend Development
      "dsznajder.es7-react-js-snippets",
      "formulahendry.auto-rename-tag",
      "formulahendry.auto-close-tag",
      "christian-kohler.path-intellisense",
      "zignd.html-css-class-completion",

      // Node.js & Backend
      "christian-kohler.npm-intellisense",
      "leizongmin.node-module-intellisense",

      // Git & Version Control (Essential)
      "eamodio.gitlens",
      "mhutchie.git-graph",
      "donjayamanne.githistory",

      // Database & Data
      "ms-ossdata.vscode-postgresql",
      "mtxr.sqltools",
      "mtxr.sqltools-driver-pg",

      // Modern Themes & Icons (2024/2025)
      "github.github-vscode-theme",
      "pkief.material-icon-theme",
      "dracula-theme.theme-dracula",

      // Productivity & Utilities (Updated)
      "ms-vscode.powershell",
      "ms-vscode-remote.remote-containers",
      "ms-azuretools.vscode-docker",
      "rangav.vscode-thunder-client",
      "streetsidesoftware.code-spell-checker",
      "aaron-bond.better-comments",
      "wayou.vscode-todo-highlight",
      "gruntfuggly.todo-tree",
      "christian-kohler.color-highlight",
      "oderwat.indent-rainbow",
      "pranaygp.vscode-css-peek",
      "formulahendry.code-runner",
      "redhat.vscode-yaml",
      "ms-vscode.hexeditor",

      // Documentation & Comments
      "yzhang.markdown-all-in-one",
      "davidanson.vscode-markdownlint",
      "bierner.markdown-mermaid",

      // Security & Environment (Enhanced)
      "mikestead.dotenv",
      "ms-vscode.vscode-env",
      "sonarsource.sonarlint-vscode",

      // Performance & Code Quality (New)
      "trunk.io",
      "sourcery.sourcery"
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Install All Dependencies",
        "type": "shell",
        "command": "npm run setup",
        "group": {
          "kind": "build",
          "isDefault": false
        },
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Start Development Servers",
        "type": "shell",
        "command": "npm run dev",
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared",
          "showReuseMessage": true,
          "clear": false
        },
        "problemMatcher": []
      },
      {
        "label": "Start Backend Only",
        "type": "shell",
        "command": "npm run dev:backend",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Start Frontend Only",
        "type": "shell",
        "command": "npm run dev:frontend",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Run All Tests",
        "type": "shell",
        "command": "npm test",
        "group": {
          "kind": "test",
          "isDefault": true
        },
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Run Backend Tests",
        "type": "shell",
        "command": "npm run test:backend",
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Run Frontend Tests",
        "type": "shell",
        "command": "npm run test:frontend",
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Run E2E Tests",
        "type": "shell",
        "command": "cd frontend && npm run test:e2e",
        "group": "test",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Lint All Code",
        "type": "shell",
        "command": "npm run lint",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": [
          "$eslint-stylish",
          {
            "owner": "typescript",
            "fileLocation": "relative",
            "pattern": {
              "regexp": "^(.*)\\((\\d+),(\\d+)\\):\\s+(error|warning|info)\\s+(TS\\d+):\\s+(.*)$",
              "file": 1,
              "line": 2,
              "column": 3,
              "severity": 4,
              "code": 5,
              "message": 6
            }
          }
        ]
      },
      {
        "label": "Build Production",
        "type": "shell",
        "command": "npm run build",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": [
          "$tsc",
          {
            "owner": "vite",
            "fileLocation": "relative",
            "pattern": {
              "regexp": "^(.*):(\\d+):(\\d+):\\s+(error|warning):\\s+(.*)$",
              "file": 1,
              "line": 2,
              "column": 3,
              "severity": 4,
              "message": 5
            }
          }
        ]
      },
      {
        "label": "Database Migrate",
        "type": "shell",
        "command": "npm run db:migrate",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Database Seed",
        "type": "shell",
        "command": "npm run seed",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Reset Database",
        "type": "shell",
        "command": "npm run db:migrate:undo:all && npm run db:migrate && npm run seed",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Clean Install",
        "type": "shell",
        "command": "rm -rf node_modules package-lock.json && rm -rf backend/node_modules backend/package-lock.json && rm -rf frontend/node_modules frontend/package-lock.json && npm run setup",
        "group": "build",
        "presentation": {
          "echo": true,
          "reveal": "always",
          "focus": false,
          "panel": "shared"
        },
        "problemMatcher": []
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Launch Backend API",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/backend/src/index.ts",
        "cwd": "${workspaceFolder}/backend",
        "env": {
          "NODE_ENV": "development",
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "runtimeArgs": ["-r", "ts-node/register"],
        "console": "integratedTerminal",
        "restart": true,
        "sourceMaps": true,
        "resolveSourceMapLocations": ["${workspaceFolder}/**", "!**/node_modules/**"],
        "outFiles": ["${workspaceFolder}/backend/dist/**/*.js"],
        "skipFiles": ["<node_internals>/**", "**/node_modules/**"],
        "envFile": "${workspaceFolder}/backend/.env"
      },
      {
        "name": "Debug Backend API",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/backend/src/index.ts",
        "cwd": "${workspaceFolder}/backend",
        "env": {
          "NODE_ENV": "development",
          "DEBUG": "*",
          "NODE_OPTIONS": "--enable-source-maps --inspect"
        },
        "runtimeArgs": ["-r", "ts-node/register", "--inspect"],
        "console": "integratedTerminal",
        "restart": true,
        "sourceMaps": true,
        "resolveSourceMapLocations": ["${workspaceFolder}/**", "!**/node_modules/**"],
        "outFiles": ["${workspaceFolder}/backend/dist/**/*.js"],
        "skipFiles": ["<node_internals>/**", "**/node_modules/**"],
        "envFile": "${workspaceFolder}/backend/.env"
      },
      {
        "name": "Debug Jest Tests (Backend)",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/backend/node_modules/.bin/jest",
        "cwd": "${workspaceFolder}/backend",
        "args": ["--runInBand", "--no-cache", "--no-coverage", "--detectOpenHandles"],
        "console": "integratedTerminal",
        "internalConsoleOptions": "neverOpen",
        "env": {
          "NODE_ENV": "test",
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "skipFiles": ["<node_internals>/**", "**/node_modules/**"],
        "envFile": "${workspaceFolder}/backend/.env.test"
      },
      {
        "name": "Debug Current Jest Test",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/backend/node_modules/.bin/jest",
        "cwd": "${workspaceFolder}/backend",
        "args": ["--runInBand", "--no-cache", "--testPathPattern=${relativeFile}", "--detectOpenHandles"],
        "console": "integratedTerminal",
        "internalConsoleOptions": "neverOpen",
        "env": {
          "NODE_ENV": "test",
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "skipFiles": ["<node_internals>/**", "**/node_modules/**"],
        "envFile": "${workspaceFolder}/backend/.env.test"
      },
      {
        "name": "Debug Frontend (Chrome)",
        "type": "chrome",
        "request": "launch",
        "url": "http://localhost:5173",
        "webRoot": "${workspaceFolder}/frontend/src",
        "sourceMaps": true,
        "sourceMapPathOverrides": {
          "webpack:///src/*": "${webRoot}/*"
        },
        "smartStep": true,
        "skipFiles": ["<node_internals>/**", "**/node_modules/**"],
        "userDataDir": false,
        "runtimeArgs": ["--disable-web-security", "--disable-features=VizDisplayCompositor"]
      },
      {
        "name": "Debug Frontend (Edge)",
        "type": "msedge",
        "request": "launch",
        "url": "http://localhost:5173",
        "webRoot": "${workspaceFolder}/frontend/src",
        "sourceMaps": true,
        "sourceMapPathOverrides": {
          "webpack:///src/*": "${webRoot}/*"
        },
        "smartStep": true,
        "skipFiles": ["<node_internals>/**", "**/node_modules/**"],
        "userDataDir": false
      },
      {
        "name": "Debug Cypress E2E",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/frontend/node_modules/.bin/cypress",
        "cwd": "${workspaceFolder}/frontend",
        "args": ["run", "--headed", "--browser", "chrome"],
        "console": "integratedTerminal",
        "env": {
          "NODE_ENV": "test",
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "skipFiles": ["<node_internals>/**", "**/node_modules/**"]
      },
      {
        "name": "Debug Vitest Tests",
        "type": "node",
        "request": "launch",
        "program": "${workspaceFolder}/frontend/node_modules/.bin/vitest",
        "cwd": "${workspaceFolder}/frontend",
        "args": ["run", "--reporter=verbose"],
        "console": "integratedTerminal",
        "env": {
          "NODE_ENV": "test",
          "NODE_OPTIONS": "--enable-source-maps"
        },
        "skipFiles": ["<node_internals>/**", "**/node_modules/**"]
      }
    ],
    "compounds": [
      {
        "name": "Full Stack Debug",
        "configurations": ["Launch Backend API", "Debug Frontend (Chrome)"],
        "stopAll": true,
        "presentation": {
          "hidden": false,
          "group": "Full Stack",
          "order": 1
        }
      },
      {
        "name": "Full Stack Debug (Edge)",
        "configurations": ["Launch Backend API", "Debug Frontend (Edge)"],
        "stopAll": true,
        "presentation": {
          "hidden": false,
          "group": "Full Stack",
          "order": 2
        }
      }
    ]
  }
}
