{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(./update_packages.sh)",
      "Bash(./fix_package_names.sh:*)",
      "Bash(./update_dependencies.sh)",
      "Bash(do if [ -f \"$dir/package.json\" ])",
      "Bash(then echo \"Updating publishConfig in $dir\")",
      "Bash(./publish_all.sh)",
      "Bash(./update_readme_files.sh:*)",
      "Bash(./update_cargo_files.sh:*)",
      "Bash(do if [ -f \"$dir/Cargo.toml\" ])",
      "Bash(then echo \"Updating enterprise dependency in $dir/Cargo.toml\")",
      "Bash(./update_changelog_files.sh)",
      "Bash(do if grep -q \"phantom-spire\" \"$file\")",
      "Bash(then echo \"Updating $file\")",
      "Bash(echo \"âœ… Updated $file\")",
      "Bash(./update_test_apps.sh:*)",
      "Bash(timeout:*)",
      "Bash(./test_all_apps.sh)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(ls:*)",
      "Bash(do echo \"=== phantom-core-$package ===\")",
      "Bash(do echo \"=== $package ===\")",
      "Bash(do echo \"Processing: $file\")",
      "Bash(do echo \"Fixing: $file\")",
      "Bash(do echo \"Verifying: $file\")",
      "Read(//c//**)",
      "Bash(while read dir)",
      "Bash(/dev/null)",
      "Bash(then echo \"âœ… $dir%/\")",
      "Bash(export PATH=\"/c/Users/justi/AppData/Local/node-gyp/Cache/22.19.0/x64:$PATH\")",
      "Bash(export NODE_LIB_FILE=\"/c/Users/justi/AppData/Local/node-gyp/Cache/22.19.0/x64/node.lib\")",
      "Bash(export:*)",
      "Bash(then echo \"=== $dir%/ ===\")",
      "Bash(do)",
      "Bash(then)",
      "Bash(else)",
      "Bash(echo:*)",
      "Bash(tree:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run:*)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(git remote:*)",
      "Bash(npx prisma:*)",
      "Bash(git add:*)",
      "Bash(git log:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nCentralize all constants, routes, and API endpoints\n\nComplete centralization of hardcoded values across the entire platform:\n\nBackend changes:\n- Create comprehensive constants file (backend/src/constants/index.ts)\n- Update passport.ts to use ENVIRONMENT and TOKEN_CONFIG\n- Update index.ts to use ENVIRONMENT and CORS_CONFIG\n- Centralize all environment variables and configuration\n\nFrontend changes:\n- Create routes constant file (frontend/src/constants/routes.ts)\n- Update useHealthRecordsData hook with API_CONFIG and API_ENDPOINTS\n- Update authStore with centralized API constants\n- Update authApi OAuth redirects to use API_CONFIG\n- Update Layout and UsersTab components with constants\n- Update routes/index.tsx with centralized route definitions\n\nDocumentation:\n- Add CONSTANTS_CENTRALIZATION.md (comprehensive guide)\n- Add PRISMA_CONVERSION_CONFIRMED.md (database verification)\n\nBenefits:\n- Single source of truth for all constants\n- Full TypeScript type safety with ''as const''\n- Better maintainability and consistency\n- No more hardcoded URLs or environment variables\n- IDE auto-completion support\n\nTotal files updated: 11 (3 backend, 8 frontend)\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push:*)",
      "Bash(node:*)",
      "Bash(git commit:*)",
      "mcp__ide__getDiagnostics",
      "Bash(for file in documentsApi.ts healthRecordsApi.ts reportsApi.ts)",
      "Bash(done)",
      "Bash(npm install:*)",
      "Bash(npx cypress run:*)",
      "Bash(for dir in \"C:/temp/white-cross/frontend/cypress/e2e\"/*)",
      "Bash(do if [ -d \"$dir\" ])",
      "Bash(fi)",
      "Bash(lsof:*)",
      "Bash(cat:*)",
      "Bash(curl:*)",
      "Bash(mkdir:*)",
      "Bash(npx ts-node:*)",
      "Bash(cp:*)",
      "Bash(xargs kill:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(find:*)"
    ],
    "deny": [],
    "ask": []
  }
}
