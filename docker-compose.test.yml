# =============================================================================
# White Cross Healthcare Platform - Test Docker Compose
# Optimized for E2E testing with Playwright and isolated test environment
# =============================================================================

version: '3.9'

services:
  # ---------------------------------------------------------------------------
  # PostgreSQL Test Database (Isolated)
  # ---------------------------------------------------------------------------
  postgres-test:
    image: postgres:15-alpine
    container_name: white-cross-postgres-test
    environment:
      POSTGRES_DB: white_cross_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - ./backend/src/database/migrations:/docker-entrypoint-initdb.d/migrations:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d white_cross_test"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - white-cross-test-network
    tmpfs:
      - /var/lib/postgresql/data  # Use tmpfs for faster tests

  # ---------------------------------------------------------------------------
  # Redis Test Cache (Isolated)
  # ---------------------------------------------------------------------------
  redis-test:
    image: redis:7-alpine
    container_name: white-cross-redis-test
    command: redis-server --appendonly no --save ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - white-cross-test-network
    tmpfs:
      - /data  # Use tmpfs for faster tests

  # ---------------------------------------------------------------------------
  # Backend API (Test Environment)
  # ---------------------------------------------------------------------------
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.new
      target: development
      args:
        NODE_ENV: test
    container_name: white-cross-backend-test
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    environment:
      NODE_ENV: test
      PORT: 3001
      HOST: 0.0.0.0
      CI: true

      # Database Configuration
      DB_HOST: postgres-test
      DB_PORT: 5432
      DB_NAME: white_cross_test
      DB_USERNAME: test_user
      DB_PASSWORD: test_password
      DB_DIALECT: postgres
      DB_SSL: false
      DB_LOGGING: false
      DB_POOL_MIN: 2
      DB_POOL_MAX: 5

      # Redis Configuration
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      REDIS_TTL: 300

      # Security (Test Keys)
      JWT_SECRET: test_jwt_secret_not_for_production
      JWT_REFRESH_SECRET: test_refresh_secret_not_for_production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 1d
      SESSION_SECRET: test_session_secret
      BCRYPT_ROUNDS: 4  # Reduced for faster tests

      # CORS
      CORS_ORIGIN: "*"

      # Logging
      LOG_LEVEL: error
      LOG_FILE: /dev/null

      # Features
      ENABLE_SWAGGER: false
      ENABLE_HEALTH_CHECK: true
      ENABLE_METRICS: false

      # Email (Disabled)
      SMTP_HOST: ""
      SMTP_PORT: 1025
      SMTP_USER: ""
      SMTP_PASS: ""
    volumes:
      - ./backend:/app:ro
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - white-cross-test-network

  # ---------------------------------------------------------------------------
  # Frontend Application (Test Build)
  # ---------------------------------------------------------------------------
  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile.new
      target: production
      args:
        VITE_API_BASE_URL: http://backend-test:3001/api
        VITE_APP_ENVIRONMENT: test
        VITE_ENABLE_DEBUG_TOOLS: false
        VITE_ENABLE_ANALYTICS: false
    container_name: white-cross-frontend-test
    depends_on:
      backend-test:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - white-cross-test-network

  # ---------------------------------------------------------------------------
  # Playwright Test Runner
  # ---------------------------------------------------------------------------
  playwright:
    build:
      context: .
      dockerfile: Dockerfile.playwright
    container_name: white-cross-playwright-test
    depends_on:
      backend-test:
        condition: service_healthy
      frontend-test:
        condition: service_healthy
    environment:
      # Playwright Configuration
      CI: true
      PLAYWRIGHT_BASE_URL: http://frontend-test:8080
      API_BASE_URL: http://backend-test:3001
      NODE_ENV: test

      # Test Configuration
      PLAYWRIGHT_WORKERS: ${PLAYWRIGHT_WORKERS:-4}
      PLAYWRIGHT_RETRIES: ${PLAYWRIGHT_RETRIES:-2}
      PLAYWRIGHT_TIMEOUT: 60000
      PLAYWRIGHT_EXPECT_TIMEOUT: 10000

      # Browser Configuration
      PLAYWRIGHT_BROWSERS_PATH: /ms-playwright

      # Artifact Configuration
      PLAYWRIGHT_HTML_REPORT: playwright-report
      PLAYWRIGHT_JSON_OUTPUT: playwright-report/results.json
      PLAYWRIGHT_JUNIT_OUTPUT: playwright-report/results.xml

      # Display (for headed mode in debugging)
      DISPLAY: :99
    volumes:
      - ./frontend/tests:/app/frontend/tests:ro
      - ./tests:/app/tests:ro
      - ./playwright.config.ts:/app/playwright.config.ts:ro
      - ./frontend/playwright.config.ts:/app/frontend/playwright.config.ts:ro
      - playwright_report:/app/playwright-report
      - playwright_test_results:/app/test-results
      - playwright_frontend_report:/app/frontend/playwright-report
      - playwright_frontend_results:/app/frontend/test-results
    networks:
      - white-cross-test-network
    # Command can be overridden
    # Default: Run all tests
    # Override examples:
    #   - docker-compose -f docker-compose.test.yml run playwright npx playwright test --project=chromium
    #   - docker-compose -f docker-compose.test.yml run playwright npx playwright test --headed
    #   - docker-compose -f docker-compose.test.yml run playwright npx playwright test --grep "@smoke"

# =============================================================================
# Volumes
# =============================================================================
volumes:
  playwright_report:
    driver: local
  playwright_test_results:
    driver: local
  playwright_frontend_report:
    driver: local
  playwright_frontend_results:
    driver: local

# =============================================================================
# Networks
# =============================================================================
networks:
  white-cross-test-network:
    driver: bridge
    name: white-cross-test-network
    ipam:
      config:
        - subnet: 172.29.0.0/16
