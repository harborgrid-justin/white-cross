{
  "agentId": "E2E9C7",
  "referencedWork": [
    ".temp/architecture-notes-M7B2K9.md",
    ".temp/architecture-notes-MG5X2Y.md"
  ],
  "components": [
    {
      "name": "Message Model",
      "path": "backend/src/database/models/message.model.ts",
      "dependencies": ["sequelize-typescript"],
      "exports": ["Message", "MessageAttributes", "MessageCreationAttributes"],
      "typeSignatures": ["MessageAttributes interface", "Message class"],
      "status": "needs-update",
      "changes": ["Add isEncrypted field", "Add encryptionMetadata field", "Add encryptionVersion field"]
    },
    {
      "name": "Conversation Model",
      "path": "backend/src/database/models/conversation.model.ts",
      "dependencies": ["sequelize-typescript"],
      "exports": ["Conversation"],
      "typeSignatures": ["ConversationAttributes interface"],
      "status": "needs-update",
      "changes": ["Add encryptionKeyId field"]
    },
    {
      "name": "Database Migration",
      "path": "backend/src/database/migrations/YYYYMMDDHHMMSS-add-encryption-fields.ts",
      "dependencies": ["sequelize"],
      "exports": ["up", "down"],
      "typeSignatures": ["Migration interface"],
      "status": "to-create"
    },
    {
      "name": "EncryptionInitializationService",
      "path": "backend/src/communication/services/encryption-initialization.service.ts",
      "dependencies": ["EncryptionService", "KeyManagementService"],
      "exports": ["EncryptionInitializationService"],
      "typeSignatures": ["Service class with initialization methods"],
      "status": "to-create"
    },
    {
      "name": "EnhancedMessageService",
      "path": "backend/src/communication/services/enhanced-message.service.ts",
      "dependencies": ["EncryptionService", "KeyManagementService", "Message", "Conversation"],
      "exports": ["EnhancedMessageService"],
      "typeSignatures": ["Service class with messaging methods"],
      "status": "needs-enhancement",
      "changes": [
        "Inject KeyManagementService",
        "Update sendDirectMessage with proper encryption",
        "Update sendGroupMessage with multi-recipient encryption",
        "Add decryption to getMessageHistory",
        "Add decryption to searchMessages",
        "Add graceful fallback logic"
      ]
    },
    {
      "name": "EnhancedMessageController",
      "path": "backend/src/communication/controllers/enhanced-message.controller.ts",
      "dependencies": ["EnhancedMessageService", "EncryptionInitializationService"],
      "exports": ["EnhancedMessageController"],
      "typeSignatures": ["Controller class"],
      "status": "to-create-or-update",
      "changes": [
        "Add POST /messages/encryption/setup",
        "Add GET /messages/encryption/public-key/:userId",
        "Add POST /messages/encryption/rotate-keys",
        "Add GET /messages/:messageId/encryption-status"
      ]
    },
    {
      "name": "CommunicationModule",
      "path": "backend/src/communication/communication.module.ts",
      "dependencies": ["EncryptionModule", "SequelizeModule"],
      "exports": ["CommunicationModule"],
      "typeSignatures": ["NestJS Module"],
      "status": "needs-update",
      "changes": [
        "Import EncryptionModule",
        "Add Message, Conversation, ConversationParticipant to SequelizeModule",
        "Register EncryptionInitializationService",
        "Export encryption services"
      ]
    }
  ]
}