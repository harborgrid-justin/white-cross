# =============================================================================
# White Cross Healthcare Platform - Development Docker Compose
# Optimized for local development with hot-reload and development tools
# =============================================================================

services:
  # ---------------------------------------------------------------------------
  # PostgreSQL Database
  # ---------------------------------------------------------------------------
  postgres:
    image: postgres:15-alpine
    container_name: white-cross-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-white_cross_dev}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/migrations:/docker-entrypoint-initdb.d/migrations:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-white_cross_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - white-cross-network

  # ---------------------------------------------------------------------------
  # Redis Cache
  # ---------------------------------------------------------------------------
  redis:
    image: redis:7-alpine
    container_name: white-cross-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - white-cross-network

  # ---------------------------------------------------------------------------
  # Backend API (Development with Hot Reload)
  # ---------------------------------------------------------------------------
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
      args:
        NODE_ENV: development
    container_name: white-cross-backend-dev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: ${PORT:-3001}
      HOST: 0.0.0.0

      # Database Configuration
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/white_cross_dev
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-white_cross_dev}
      DB_USERNAME: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DIALECT: postgres
      DB_SSL: false
      DB_LOGGING: true
      DB_POOL_MIN: 2
      DB_POOL_MAX: 10

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_TTL: 3600

      # Security
      JWT_SECRET: ${JWT_SECRET:-dev_jwt_secret_change_in_production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-dev_refresh_secret_change_in_production}
      JWT_EXPIRES_IN: 15m
      JWT_REFRESH_EXPIRES_IN: 7d
      SESSION_SECRET: ${SESSION_SECRET:-dev_session_secret_change_in_production}
      BCRYPT_ROUNDS: 10

      # CORS
      CORS_ORIGIN: http://localhost:5173

      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      LOG_FILE: logs/app.log

      # Features
      ENABLE_SWAGGER: true
      ENABLE_HEALTH_CHECK: true
      ENABLE_METRICS: true
      ENABLE_DEBUG: true

      # Email (Mailhog)
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USER: ""
      SMTP_PASS: ""
      FROM_EMAIL: dev@whitecross.local
    ports:
      - "${PORT:-3001}:3001"
      - "9229:9229" # Debug port
    volumes:
      - ./backend:/app:delegated
      - /app/node_modules
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - white-cross-network

  # ---------------------------------------------------------------------------
  # Frontend Application (Development with Hot Reload)
  # ---------------------------------------------------------------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: white-cross-frontend-dev
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      VITE_API_BASE_URL: http://localhost:3001/api
      VITE_APP_ENVIRONMENT: development
      VITE_ENABLE_DEBUG_TOOLS: true
      VITE_ENABLE_ANALYTICS: false
      VITE_ENABLE_REACT_QUERY_DEVTOOLS: true
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app:delegated
      - /app/node_modules
    networks:
      - white-cross-network

  # ---------------------------------------------------------------------------
  # Adminer - Database Management UI
  # ---------------------------------------------------------------------------
  adminer:
    image: adminer:latest
    container_name: white-cross-adminer-dev
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    ports:
      - "8080:8080"
    networks:
      - white-cross-network

  # ---------------------------------------------------------------------------
  # Redis Commander - Redis Management UI
  # ---------------------------------------------------------------------------
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: white-cross-redis-commander-dev
    restart: unless-stopped
    depends_on:
      - redis
    environment:
      REDIS_HOSTS: local:redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    ports:
      - "8081:8081"
    networks:
      - white-cross-network

  # ---------------------------------------------------------------------------
  # Mailhog - Email Testing
  # ---------------------------------------------------------------------------
  mailhog:
    image: mailhog/mailhog:latest
    container_name: white-cross-mailhog-dev
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    networks:
      - white-cross-network

# =============================================================================
# Volumes
# =============================================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

# =============================================================================
# Networks
# =============================================================================
networks:
  white-cross-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
