{
	"knownSymbols": {
		"fs": [
			{
				"name": "fs",
				"module": "fs",
				"isDefault": true,
				"asDefinition": "* as fs"
			}
		],
		"path": [
			{
				"name": "path",
				"module": "path",
				"isDefault": true,
				"asDefinition": "* as path"
			}
		],
		"crypto": [
			{
				"name": "crypto",
				"module": "crypto",
				"isDefault": true,
				"asDefinition": "* as crypto"
			}
		],
		"fileURLToPath": [
			{
				"name": "fileURLToPath",
				"module": "url",
				"isDefault": false
			}
		],
		"dirname": [
			{
				"name": "dirname",
				"module": "path",
				"isDefault": false
			}
		],
		"defineConfig": [
			{
				"name": "defineConfig",
				"module": "cypress",
				"isDefault": false
			},
			{
				"name": "defineConfig",
				"path": "c:\\temp\\white-cross\\frontend\\cypress.config.ts",
				"isDefault": true
			},
			{
				"name": "defineConfig",
				"module": "vite",
				"isDefault": false
			},
			{
				"name": "defineConfig",
				"module": "vitest/config",
				"isDefault": false
			}
		],
		"react": [
			{
				"name": "react",
				"module": "@vitejs/plugin-react",
				"isDefault": true
			}
		],
		"point": [
			{
				"name": "point",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\index.ts",
				"isDefault": false
			}
		],
		"VALIDATION_CONSTRAINTS": [
			{
				"name": "VALIDATION_CONSTRAINTS",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createIncidentReportSchema": [
			{
				"name": "createIncidentReportSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateIncidentReportSchema": [
			{
				"name": "updateIncidentReportSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createWitnessStatementSchema": [
			{
				"name": "createWitnessStatementSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateWitnessStatementSchema": [
			{
				"name": "updateWitnessStatementSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createFollowUpActionSchema": [
			{
				"name": "createFollowUpActionSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateFollowUpActionSchema": [
			{
				"name": "updateFollowUpActionSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"markParentNotifiedSchema": [
			{
				"name": "markParentNotifiedSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"notifyParentSchema": [
			{
				"name": "notifyParentSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"addEvidenceSchema": [
			{
				"name": "addEvidenceSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateInsuranceClaimSchema": [
			{
				"name": "updateInsuranceClaimSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateComplianceStatusSchema": [
			{
				"name": "updateComplianceStatusSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateIncidentReportFormData": [
			{
				"name": "CreateIncidentReportFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateIncidentReportFormData": [
			{
				"name": "UpdateIncidentReportFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateWitnessStatementFormData": [
			{
				"name": "CreateWitnessStatementFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateWitnessStatementFormData": [
			{
				"name": "UpdateWitnessStatementFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateFollowUpActionFormData": [
			{
				"name": "CreateFollowUpActionFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateFollowUpActionFormData": [
			{
				"name": "UpdateFollowUpActionFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"MarkParentNotifiedFormData": [
			{
				"name": "MarkParentNotifiedFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"NotifyParentFormData": [
			{
				"name": "NotifyParentFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AddEvidenceFormData": [
			{
				"name": "AddEvidenceFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateInsuranceClaimFormData": [
			{
				"name": "UpdateInsuranceClaimFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateComplianceStatusFormData": [
			{
				"name": "UpdateComplianceStatusFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"validateIncidentDescription": [
			{
				"name": "validateIncidentDescription",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"shouldRequireParentNotification": [
			{
				"name": "shouldRequireParentNotification",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"shouldRequireFollowUp": [
			{
				"name": "shouldRequireFollowUp",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateDueDateForPriority": [
			{
				"name": "validateDueDateForPriority",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\incidentReportValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"z": [
			{
				"name": "z",
				"module": "zod",
				"isDefault": false
			}
		],
		"createEmergencyContactSchema": [
			{
				"name": "createEmergencyContactSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateEmergencyContactSchema": [
			{
				"name": "updateEmergencyContactSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"emergencyContactFormSchema": [
			{
				"name": "emergencyContactFormSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"contactVerificationSchema": [
			{
				"name": "contactVerificationSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"emergencyNotificationSchema": [
			{
				"name": "emergencyNotificationSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateEmergencyContactInput": [
			{
				"name": "CreateEmergencyContactInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateEmergencyContactInput": [
			{
				"name": "UpdateEmergencyContactInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"EmergencyContactFormInput": [
			{
				"name": "EmergencyContactFormInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ContactVerificationInput": [
			{
				"name": "ContactVerificationInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"EmergencyNotificationInput": [
			{
				"name": "EmergencyNotificationInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\emergencyContactSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"COMMUNICATION_LIMITS": [
			{
				"name": "COMMUNICATION_LIMITS",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"messageRecipientSchema": [
			{
				"name": "messageRecipientSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createMessageTemplateSchema": [
			{
				"name": "createMessageTemplateSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateMessageTemplateSchema": [
			{
				"name": "updateMessageTemplateSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createMessageSchema": [
			{
				"name": "createMessageSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"broadcastAudienceSchema": [
			{
				"name": "broadcastAudienceSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"broadcastMessageSchema": [
			{
				"name": "broadcastMessageSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"emergencyAlertSchema": [
			{
				"name": "emergencyAlertSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"messageFiltersSchema": [
			{
				"name": "messageFiltersSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"templateFiltersSchema": [
			{
				"name": "templateFiltersSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"translationRequestSchema": [
			{
				"name": "translationRequestSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateHIPAACompliance": [
			{
				"name": "validateHIPAACompliance",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateSmsContent": [
			{
				"name": "validateSmsContent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateEmailSubject": [
			{
				"name": "validateEmailSubject",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"extractTemplateVariables": [
			{
				"name": "extractTemplateVariables",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateRecipientForChannel": [
			{
				"name": "validateRecipientForChannel",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"CreateMessageTemplateFormData": [
			{
				"name": "CreateMessageTemplateFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateMessageTemplateFormData": [
			{
				"name": "UpdateMessageTemplateFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateMessageFormData": [
			{
				"name": "CreateMessageFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"BroadcastMessageFormData": [
			{
				"name": "BroadcastMessageFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"EmergencyAlertFormData": [
			{
				"name": "EmergencyAlertFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"MessageFiltersFormData": [
			{
				"name": "MessageFiltersFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"TemplateFiltersFormData": [
			{
				"name": "TemplateFiltersFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"TranslationRequestFormData": [
			{
				"name": "TranslationRequestFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\communicationSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"VALID_RESOURCES": [
			{
				"name": "VALID_RESOURCES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"VALID_ACTIONS": [
			{
				"name": "VALID_ACTIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RESERVED_ROLE_NAMES": [
			{
				"name": "RESERVED_ROLE_NAMES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"roleNameSchema": [
			{
				"name": "roleNameSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"roleDescriptionSchema": [
			{
				"name": "roleDescriptionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createRoleSchema": [
			{
				"name": "createRoleSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateRoleSchema": [
			{
				"name": "updateRoleSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"permissionResourceSchema": [
			{
				"name": "permissionResourceSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"permissionActionSchema": [
			{
				"name": "permissionActionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"permissionDescriptionSchema": [
			{
				"name": "permissionDescriptionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createPermissionSchema": [
			{
				"name": "createPermissionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ipAddressSchema": [
			{
				"name": "ipAddressSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"userAgentSchema": [
			{
				"name": "userAgentSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"sessionTokenSchema": [
			{
				"name": "sessionTokenSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"sessionExpirationSchema": [
			{
				"name": "sessionExpirationSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createSessionSchema": [
			{
				"name": "createSessionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"emailSchema": [
			{
				"name": "emailSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"failureReasonSchema": [
			{
				"name": "failureReasonSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"logLoginAttemptSchema": [
			{
				"name": "logLoginAttemptSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ipOrCidrSchema": [
			{
				"name": "ipOrCidrSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ipRestrictionTypeSchema": [
			{
				"name": "ipRestrictionTypeSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ipRestrictionReasonSchema": [
			{
				"name": "ipRestrictionReasonSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"addIpRestrictionSchema": [
			{
				"name": "addIpRestrictionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"securityIncidentTypeSchema": [
			{
				"name": "securityIncidentTypeSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"incidentSeveritySchema": [
			{
				"name": "incidentSeveritySchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"securityIncidentStatusSchema": [
			{
				"name": "securityIncidentStatusSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"incidentDescriptionSchema": [
			{
				"name": "incidentDescriptionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"affectedResourcesSchema": [
			{
				"name": "affectedResourcesSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"incidentResolutionSchema": [
			{
				"name": "incidentResolutionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createSecurityIncidentSchema": [
			{
				"name": "createSecurityIncidentSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateSecurityIncidentSchema": [
			{
				"name": "updateSecurityIncidentSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"assignPermissionToRoleSchema": [
			{
				"name": "assignPermissionToRoleSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"assignRoleToUserSchema": [
			{
				"name": "assignRoleToUserSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"securityIncidentFiltersSchema": [
			{
				"name": "securityIncidentFiltersSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateRoleInput": [
			{
				"name": "CreateRoleInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateRoleInput": [
			{
				"name": "UpdateRoleInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreatePermissionInput": [
			{
				"name": "CreatePermissionInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateSessionInput": [
			{
				"name": "CreateSessionInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"LogLoginAttemptInput": [
			{
				"name": "LogLoginAttemptInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AddIpRestrictionInput": [
			{
				"name": "AddIpRestrictionInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateSecurityIncidentInput": [
			{
				"name": "CreateSecurityIncidentInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateSecurityIncidentInput": [
			{
				"name": "UpdateSecurityIncidentInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AssignPermissionToRoleInput": [
			{
				"name": "AssignPermissionToRoleInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AssignRoleToUserInput": [
			{
				"name": "AssignRoleToUserInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"SecurityIncidentFiltersInput": [
			{
				"name": "SecurityIncidentFiltersInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\validation\\accessControlSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"IncidentFilterProvider": [
			{
				"name": "IncidentFilterProvider",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useIncidentFilters": [
			{
				"name": "useIncidentFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentEntities": [
			{
				"name": "selectIncidentEntities",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentLoading": [
			{
				"name": "selectIncidentLoading",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentPagination": [
			{
				"name": "selectIncidentPagination",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentFilters": [
			{
				"name": "selectIncidentFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectAllIncidents": [
			{
				"name": "selectAllIncidents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentById": [
			{
				"name": "selectIncidentById",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectFilteredIncidents": [
			{
				"name": "selectFilteredIncidents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectSelectedIncidents": [
			{
				"name": "selectSelectedIncidents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIsIncidentSelected": [
			{
				"name": "selectIsIncidentSelected",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentStatistics": [
			{
				"name": "selectIncidentStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidents": [
			{
				"name": "useIncidents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createAsyncThunk": [
			{
				"name": "createAsyncThunk",
				"module": "@reduxjs/toolkit",
				"isDefault": false
			}
		],
		"createSlice": [
			{
				"name": "createSlice",
				"module": "@reduxjs/toolkit",
				"isDefault": false
			}
		],
		"PayloadAction": [
			{
				"name": "PayloadAction",
				"module": "@reduxjs/toolkit",
				"isDefault": false
			}
		],
		"type { ReactNode": [
			{
				"name": "type { ReactNode",
				"module": "react",
				"isDefault": true
			}
		],
		"createContext": [
			{
				"name": "createContext",
				"module": "react",
				"isDefault": false
			}
		],
		"useContext": [
			{
				"name": "useContext",
				"module": "react",
				"isDefault": true
			}
		],
		"useState": [
			{
				"name": "useState",
				"module": "react",
				"isDefault": true
			}
		],
		"useSelector": [
			{
				"name": "useSelector",
				"module": "react-redux",
				"isDefault": false
			}
		],
		"useDispatch": [
			{
				"name": "useDispatch",
				"module": "react-redux",
				"isDefault": false
			}
		],
		"RequestStatus": [
			{
				"name": "RequestStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"LoadingState": [
			{
				"name": "LoadingState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ErrorState": [
			{
				"name": "ErrorState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginationState": [
			{
				"name": "PaginationState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SortState": [
			{
				"name": "SortState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FilterState": [
			{
				"name": "FilterState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SelectionState": [
			{
				"name": "SelectionState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EntityState": [
			{
				"name": "EntityState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SelectOption": [
			{
				"name": "SelectOption",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FormState": [
			{
				"name": "FormState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportsState": [
			{
				"name": "IncidentReportsState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WitnessStatementsState": [
			{
				"name": "WitnessStatementsState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionsState": [
			{
				"name": "FollowUpActionsState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UIState": [
			{
				"name": "UIState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NavigationState": [
			{
				"name": "NavigationState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CacheState": [
			{
				"name": "CacheState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RootState": [
			{
				"name": "RootState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"WitnessStatementContextState": [
			{
				"name": "WitnessStatementContextState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionContextState": [
			{
				"name": "FollowUpActionContextState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FilterContextState": [
			{
				"name": "FilterContextState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ModalContextState": [
			{
				"name": "ModalContextState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportActionPayloads": [
			{
				"name": "IncidentReportActionPayloads",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WitnessStatementActionPayloads": [
			{
				"name": "WitnessStatementActionPayloads",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionActionPayloads": [
			{
				"name": "FollowUpActionActionPayloads",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FilterActionPayloads": [
			{
				"name": "FilterActionPayloads",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AsyncThunkConfig": [
			{
				"name": "AsyncThunkConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppAsyncThunk": [
			{
				"name": "AppAsyncThunk",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"isLoadingState": [
			{
				"name": "isLoadingState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isErrorState": [
			{
				"name": "isErrorState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"hasData": [
			{
				"name": "hasData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isStale": [
			{
				"name": "isStale",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isIdleState": [
			{
				"name": "isIdleState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getLoadingProgress": [
			{
				"name": "getLoadingProgress",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createInitialLoadingState": [
			{
				"name": "createInitialLoadingState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createInitialPaginationState": [
			{
				"name": "createInitialPaginationState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createInitialEntityState": [
			{
				"name": "createInitialEntityState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createInitialSelectionState": [
			{
				"name": "createInitialSelectionState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createInitialFilterState": [
			{
				"name": "createInitialFilterState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\state.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"for": [
			{
				"name": "for",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\RepositoryFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"type": [
			{
				"name": "type",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\index.ts",
				"isDefault": false
			}
		],
		"type { AsyncThunk": [
			{
				"name": "type { AsyncThunk",
				"module": "@reduxjs/toolkit",
				"isDefault": true
			}
		],
		"SerializedError": [
			{
				"name": "SerializedError",
				"module": "@reduxjs/toolkit",
				"isDefault": true
			}
		],
		"Gender": [
			{
				"name": "Gender",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AllergySeverity": [
			{
				"name": "AllergySeverity",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAllergyRepository.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ContactPriority": [
			{
				"name": "ContactPriority",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"PreferredContactMethod": [
			{
				"name": "PreferredContactMethod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"VerificationStatus": [
			{
				"name": "VerificationStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ContactRelationship": [
			{
				"name": "ContactRelationship",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"EmergencyContact": [
			{
				"name": "EmergencyContact",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\core\\EmergencyContact.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"isPrimaryContact": [
			{
				"name": "isPrimaryContact",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getPrimaryContact": [
			{
				"name": "getPrimaryContact",
				"module": "@/types/student.types",
				"isDefault": false
			},
			{
				"name": "getPrimaryContact",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateEmergencyContactData": [
			{
				"name": "CreateEmergencyContactData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\emergencyContactService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateEmergencyContactData": [
			{
				"name": "UpdateEmergencyContactData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\emergencyContactService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyNotificationData": [
			{
				"name": "EmergencyNotificationData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyNotificationResult": [
			{
				"name": "EmergencyNotificationResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ContactVerificationRequest": [
			{
				"name": "ContactVerificationRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ContactVerificationResponse": [
			{
				"name": "ContactVerificationResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyContactStatistics": [
			{
				"name": "EmergencyContactStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Allergy": [
			{
				"name": "Allergy",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAllergyRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChronicCondition": [
			{
				"name": "ChronicCondition",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IChronicConditionRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationDetails": [
			{
				"name": "MedicationDetails",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentMedication": [
			{
				"name": "StudentMedication",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\medications\\StudentMedication.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MedicationLog": [
			{
				"name": "MedicationLog",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\medications\\MedicationLog.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"HealthRecord": [
			{
				"name": "HealthRecord",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Appointment": [
			{
				"name": "Appointment",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\healthcare\\Appointment.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"IncidentReport": [
			{
				"name": "IncidentReport",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\incidents\\IncidentReport.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"NurseReference": [
			{
				"name": "NurseReference",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Student": [
			{
				"name": "Student",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IStudentRepository.d.ts",
				"type": "interface",
				"isDefault": false
			},
			{
				"name": "Student",
				"module": "@/types/student.types",
				"isDefault": false
			}
		],
		"CreateStudentData": [
			{
				"name": "CreateStudentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\studentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateStudentData": [
			{
				"name": "UpdateStudentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\studentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentFilters": [
			{
				"name": "StudentFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\studentService.d.ts",
				"type": "interface",
				"isDefault": false
			},
			{
				"name": "StudentFilters",
				"module": "@/components/students/StudentFilters",
				"isDefault": false
			}
		],
		"PaginationMetadata": [
			{
				"name": "PaginationMetadata",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\types\\QueryTypes.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginatedStudentsResponse": [
			{
				"name": "PaginatedStudentsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentStatistics": [
			{
				"name": "StudentStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TransferStudentRequest": [
			{
				"name": "TransferStudentRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkUpdateStudentsRequest": [
			{
				"name": "BulkUpdateStudentsRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExportStudentDataResponse": [
			{
				"name": "ExportStudentDataResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentFormData": [
			{
				"name": "StudentFormData",
				"module": "@/types/student.types",
				"isDefault": true
			},
			{
				"name": "StudentFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyContactFormData": [
			{
				"name": "EmergencyContactFormData",
				"module": "@/types/student.types",
				"isDefault": false
			},
			{
				"name": "EmergencyContactFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ValidationErrors": [
			{
				"name": "ValidationErrors",
				"module": "@/types/student.types",
				"isDefault": true
			},
			{
				"name": "ValidationErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationMessage": [
			{
				"name": "NotificationMessage",
				"module": "@/types/student.types",
				"isDefault": false
			},
			{
				"name": "NotificationMessage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\student.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReportType": [
			{
				"name": "ReportType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"format": [
			{
				"name": "format",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\importExportService.ts",
				"isDefault": false
			}
		],
		"ReportFormat": [
			{
				"name": "ReportFormat",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ReportPeriod": [
			{
				"name": "ReportPeriod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ChartType": [
			{
				"name": "ChartType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"AggregationType": [
			{
				"name": "AggregationType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"DateRangeFilter": [
			{
				"name": "DateRangeFilter",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReportFilters": [
			{
				"name": "ReportFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\reportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CustomReportFilters": [
			{
				"name": "CustomReportFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthTrendData": [
			{
				"name": "HealthTrendData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthRecordTypeCount": [
			{
				"name": "HealthRecordTypeCount",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChronicConditionCount": [
			{
				"name": "ChronicConditionCount",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AllergyStatistics": [
			{
				"name": "AllergyStatistics",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MonthlyTrendData": [
			{
				"name": "MonthlyTrendData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthTrendsReport": [
			{
				"name": "HealthTrendsReport",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\reportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationUsageData": [
			{
				"name": "MedicationUsageData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationInfo": [
			{
				"name": "MedicationInfo",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\medicationUtils.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentMedicationInfo": [
			{
				"name": "StudentMedicationInfo",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TopMedication": [
			{
				"name": "TopMedication",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationUsageReport": [
			{
				"name": "MedicationUsageReport",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\reportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentStatistics": [
			{
				"name": "IncidentStatistics",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\incidentReportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentStudentInfo": [
			{
				"name": "IncidentStudentInfo",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentByType": [
			{
				"name": "IncidentByType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentBySeverity": [
			{
				"name": "IncidentBySeverity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MonthlyIncidentTrend": [
			{
				"name": "MonthlyIncidentTrend",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InjuryStatistics": [
			{
				"name": "InjuryStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationStatistics": [
			{
				"name": "NotificationStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceStatistics": [
			{
				"name": "ComplianceStatistics",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\complianceService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentStatisticsReport": [
			{
				"name": "IncidentStatisticsReport",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\reportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AttendanceCorrelationData": [
			{
				"name": "AttendanceCorrelationData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentVisitCount": [
			{
				"name": "StudentVisitCount",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AttendanceCorrelationReport": [
			{
				"name": "AttendanceCorrelationReport",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\reportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PerformanceMetrics": [
			{
				"name": "PerformanceMetrics",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PerformanceMetric": [
			{
				"name": "PerformanceMetric",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\PerformanceMetric.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"NursePerformanceMetric": [
			{
				"name": "NursePerformanceMetric",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SystemUsageMetrics": [
			{
				"name": "SystemUsageMetrics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PerformanceMetricsReport": [
			{
				"name": "PerformanceMetricsReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardMetrics": [
			{
				"name": "DashboardMetrics",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\reportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardWidget": [
			{
				"name": "DashboardWidget",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecentActivity": [
			{
				"name": "RecentActivity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Dashboard\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SystemAlert": [
			{
				"name": "SystemAlert",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardData": [
			{
				"name": "DashboardData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuditLog": [
			{
				"name": "AuditLog",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAuditLogRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationComplianceStats": [
			{
				"name": "MedicationComplianceStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentComplianceStats": [
			{
				"name": "IncidentComplianceStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceCategoryScore": [
			{
				"name": "ComplianceCategoryScore",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceViolation": [
			{
				"name": "ComplianceViolation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceReport": [
			{
				"name": "ComplianceReport",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\reportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReportTemplate": [
			{
				"name": "ReportTemplate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ScheduledReport": [
			{
				"name": "ScheduledReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CustomReportRequest": [
			{
				"name": "CustomReportRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReportData": [
			{
				"name": "ReportData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExportRequest": [
			{
				"name": "ExportRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExportJob": [
			{
				"name": "ExportJob",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReportShareRequest": [
			{
				"name": "ReportShareRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReportHistory": [
			{
				"name": "ReportHistory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UsageAnalytics": [
			{
				"name": "UsageAnalytics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReportPopularity": [
			{
				"name": "ReportPopularity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PerformanceInsight": [
			{
				"name": "PerformanceInsight",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChartData": [
			{
				"name": "ChartData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AggregatedChartData": [
			{
				"name": "AggregatedChartData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\reports.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderStatus": [
			{
				"name": "PurchaseOrderStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"OrderPriority": [
			{
				"name": "OrderPriority",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"PurchaseOrder": [
			{
				"name": "PurchaseOrder",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\inventory\\PurchaseOrder.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"PurchaseOrderItem": [
			{
				"name": "PurchaseOrderItem",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\inventory\\PurchaseOrderItem.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"InventoryItemDetail": [
			{
				"name": "InventoryItemDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderApproval": [
			{
				"name": "OrderApproval",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderReceiving": [
			{
				"name": "OrderReceiving",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReceiveOrderItem": [
			{
				"name": "ReceiveOrderItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderCancellation": [
			{
				"name": "OrderCancellation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderStatistics": [
			{
				"name": "PurchaseOrderStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderHistoryItem": [
			{
				"name": "OrderHistoryItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorOrderHistory": [
			{
				"name": "VendorOrderHistory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReorderItem": [
			{
				"name": "ReorderItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReorderSuggestion": [
			{
				"name": "ReorderSuggestion",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderFilters": [
			{
				"name": "PurchaseOrderFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\purchaseOrderService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderItemFilters": [
			{
				"name": "OrderItemFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreatePurchaseOrderData": [
			{
				"name": "CreatePurchaseOrderData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\inventoryService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateOrderItemData": [
			{
				"name": "CreateOrderItemData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdatePurchaseOrderData": [
			{
				"name": "UpdatePurchaseOrderData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\purchaseOrderService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderFormData": [
			{
				"name": "PurchaseOrderFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderItemFormData": [
			{
				"name": "OrderItemFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReceiveItemsData": [
			{
				"name": "ReceiveItemsData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\purchaseOrderService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ApproveOrderData": [
			{
				"name": "ApproveOrderData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CancelOrderData": [
			{
				"name": "CancelOrderData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrdersResponse": [
			{
				"name": "PurchaseOrdersResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderDetailResponse": [
			{
				"name": "PurchaseOrderDetailResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderItemsResponse": [
			{
				"name": "OrderItemsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReorderItemsResponse": [
			{
				"name": "ReorderItemsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorOrderHistoryResponse": [
			{
				"name": "VendorOrderHistoryResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderFormErrors": [
			{
				"name": "PurchaseOrderFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderItemFormError": [
			{
				"name": "OrderItemFormError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReceiveItemsErrors": [
			{
				"name": "ReceiveItemsErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReceiveItemError": [
			{
				"name": "ReceiveItemError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderEventHandlers": [
			{
				"name": "PurchaseOrderEventHandlers",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderItemEventHandlers": [
			{
				"name": "OrderItemEventHandlers",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderListProps": [
			{
				"name": "PurchaseOrderListProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderCardProps": [
			{
				"name": "PurchaseOrderCardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PurchaseOrderModalProps": [
			{
				"name": "PurchaseOrderModalProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReceiveItemsModalProps": [
			{
				"name": "ReceiveItemsModalProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderStatusBadgeProps": [
			{
				"name": "OrderStatusBadgeProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderProgressProps": [
			{
				"name": "OrderProgressProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UsePurchaseOrdersReturn": [
			{
				"name": "UsePurchaseOrdersReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderWorkflowState": [
			{
				"name": "OrderWorkflowState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderAction": [
			{
				"name": "OrderAction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PURCHASE_ORDER_CONSTANTS": [
			{
				"name": "PURCHASE_ORDER_CONSTANTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ORDER_VALIDATION": [
			{
				"name": "ORDER_VALIDATION",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"calculateOrderTotals": [
			{
				"name": "calculateOrderTotals",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getOrderWorkflowState": [
			{
				"name": "getOrderWorkflowState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"calculateFulfillmentPercentage": [
			{
				"name": "calculateFulfillmentPercentage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\purchaseOrders.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"NavigationPermission": [
			{
				"name": "NavigationPermission",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NavigationItem": [
			{
				"name": "NavigationItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NavigationSection": [
			{
				"name": "NavigationSection",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FilteredNavigationItem": [
			{
				"name": "FilteredNavigationItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BreadcrumbItem": [
			{
				"name": "BreadcrumbItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"BreadcrumbConfig": [
			{
				"name": "BreadcrumbConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NavigationHistoryEntry": [
			{
				"name": "NavigationHistoryEntry",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NavigationContext": [
			{
				"name": "NavigationContext",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"QuickAccessItem": [
			{
				"name": "QuickAccessItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"KeyboardShortcut": [
			{
				"name": "KeyboardShortcut",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ContextMenuItem": [
			{
				"name": "ContextMenuItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NavigationAction": [
			{
				"name": "NavigationAction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MobileNavigationConfig": [
			{
				"name": "MobileNavigationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BottomNavigationItem": [
			{
				"name": "BottomNavigationItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NavigationGuardResult": [
			{
				"name": "NavigationGuardResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UnsavedChangesState": [
			{
				"name": "UnsavedChangesState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NavigationItemFilter": [
			{
				"name": "NavigationItemFilter",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"NavigationItemTransformer": [
			{
				"name": "NavigationItemTransformer",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"RouteMatcher": [
			{
				"name": "RouteMatcher",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\navigation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"LucideIcon": [
			{
				"name": "LucideIcon",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"MedicationTab": [
			{
				"name": "MedicationTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"DosageForm": [
			{
				"name": "DosageForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AdministrationRoute": [
			{
				"name": "AdministrationRoute",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"SeverityLevel": [
			{
				"name": "SeverityLevel",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AdverseReactionSeverity": [
			{
				"name": "AdverseReactionSeverity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ReminderStatus": [
			{
				"name": "ReminderStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"MedicationLogStatus": [
			{
				"name": "MedicationLogStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Medication": [
			{
				"name": "Medication",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\core\\Medication.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"InventoryItem": [
			{
				"name": "InventoryItem",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\inventory\\InventoryItem.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MedicationReminder": [
			{
				"name": "MedicationReminder",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\medicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdverseReaction": [
			{
				"name": "AdverseReaction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\api.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationFormData": [
			{
				"name": "MedicationFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentMedicationFormData": [
			{
				"name": "StudentMedicationFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\api.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationAdministrationData": [
			{
				"name": "MedicationAdministrationData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\resilientMedicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdverseReactionData": [
			{
				"name": "AdverseReactionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\resilientMedicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PrescriptionData": [
			{
				"name": "PrescriptionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\resilientMedicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdverseReactionFormData": [
			{
				"name": "AdverseReactionFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\api.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryFormData": [
			{
				"name": "InventoryFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FormErrors": [
			{
				"name": "FormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationFormErrors": [
			{
				"name": "MedicationFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentMedicationFormErrors": [
			{
				"name": "StudentMedicationFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdverseReactionFormErrors": [
			{
				"name": "AdverseReactionFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationsResponse": [
			{
				"name": "MedicationsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentMedicationsResponse": [
			{
				"name": "StudentMedicationsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryResponse": [
			{
				"name": "InventoryResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RemindersResponse": [
			{
				"name": "RemindersResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdverseReactionsResponse": [
			{
				"name": "AdverseReactionsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationScheduleResponse": [
			{
				"name": "MedicationScheduleResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationAlert": [
			{
				"name": "MedicationAlert",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\api.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationAlertsResponse": [
			{
				"name": "MedicationAlertsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationFormOptions": [
			{
				"name": "MedicationFormOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationTabConfig": [
			{
				"name": "MedicationTabConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationStats": [
			{
				"name": "MedicationStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationSearchFilters": [
			{
				"name": "MedicationSearchFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryFilters": [
			{
				"name": "InventoryFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\inventoryService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationEventHandlers": [
			{
				"name": "MedicationEventHandlers",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryEventHandlers": [
			{
				"name": "InventoryEventHandlers",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReminderEventHandlers": [
			{
				"name": "ReminderEventHandlers",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdverseReactionEventHandlers": [
			{
				"name": "AdverseReactionEventHandlers",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TabContentProps": [
			{
				"name": "TabContentProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ModalProps": [
			{
				"name": "ModalProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationModalProps": [
			{
				"name": "MedicationModalProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdverseReactionModalProps": [
			{
				"name": "AdverseReactionModalProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FiveRightsValidation": [
			{
				"name": "FiveRightsValidation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UseMedicationsDataReturn": [
			{
				"name": "UseMedicationsDataReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useMedicationsData.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UseFormValidationReturn": [
			{
				"name": "UseFormValidationReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UseToastReturn": [
			{
				"name": "UseToastReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\medications.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryTransactionType": [
			{
				"name": "InventoryTransactionType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"MaintenanceType": [
			{
				"name": "MaintenanceType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"InventoryAlertType": [
			{
				"name": "InventoryAlertType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"InventoryAlertSeverity": [
			{
				"name": "InventoryAlertSeverity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"InventoryTransaction": [
			{
				"name": "InventoryTransaction",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\inventory\\InventoryTransaction.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MaintenanceLog": [
			{
				"name": "MaintenanceLog",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\inventory\\MaintenanceLog.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Vendor": [
			{
				"name": "Vendor",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\inventory\\Vendor.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"InventoryAlert": [
			{
				"name": "InventoryAlert",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\inventoryService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateInventoryItemRequest": [
			{
				"name": "CreateInventoryItemRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateInventoryItemRequest": [
			{
				"name": "UpdateInventoryItemRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateInventoryTransactionRequest": [
			{
				"name": "CreateInventoryTransactionRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StockAdjustmentRequest": [
			{
				"name": "StockAdjustmentRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StockAdjustmentResponse": [
			{
				"name": "StockAdjustmentResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateMaintenanceLogRequest": [
			{
				"name": "CreateMaintenanceLogRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateVendorRequest": [
			{
				"name": "CreateVendorRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreatePurchaseOrderRequest": [
			{
				"name": "CreatePurchaseOrderRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GeneratePurchaseOrderRequest": [
			{
				"name": "GeneratePurchaseOrderRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MaintenanceScheduleParams": [
			{
				"name": "MaintenanceScheduleParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UsageAnalyticsParams": [
			{
				"name": "UsageAnalyticsParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryItemsResponse": [
			{
				"name": "InventoryItemsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryItemWithStockResponse": [
			{
				"name": "InventoryItemWithStockResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StockHistoryResponse": [
			{
				"name": "StockHistoryResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryValuationResponse": [
			{
				"name": "InventoryValuationResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UsageAnalyticsResponse": [
			{
				"name": "UsageAnalyticsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SupplierPerformanceResponse": [
			{
				"name": "SupplierPerformanceResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryStatsOverview": [
			{
				"name": "InventoryStatsOverview",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CategoryBreakdownStats": [
			{
				"name": "CategoryBreakdownStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecentActivityItem": [
			{
				"name": "RecentActivityItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TopUsedItem": [
			{
				"name": "TopUsedItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryStatsResponse": [
			{
				"name": "InventoryStatsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GeneratedPurchaseOrder": [
			{
				"name": "GeneratedPurchaseOrder",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryItemFormData": [
			{
				"name": "InventoryItemFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryTransactionFormData": [
			{
				"name": "InventoryTransactionFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MaintenanceLogFormData": [
			{
				"name": "MaintenanceLogFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorFormData": [
			{
				"name": "VendorFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"isLowStock": [
			{
				"name": "isLowStock",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isOutOfStock": [
			{
				"name": "isOutOfStock",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isMaintenanceDue": [
			{
				"name": "isMaintenanceDue",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isExpiringSoon": [
			{
				"name": "isExpiringSoon",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isExpired": [
			{
				"name": "isExpired",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\inventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"IntegrationType": [
			{
				"name": "IntegrationType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"IntegrationStatus": [
			{
				"name": "IntegrationStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"SyncStatus": [
			{
				"name": "SyncStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"IntegrationAction": [
			{
				"name": "IntegrationAction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"AuthenticationMethod": [
			{
				"name": "AuthenticationMethod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"IntegrationHealth": [
			{
				"name": "IntegrationHealth",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"IntegrationConfig": [
			{
				"name": "IntegrationConfig",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\integration\\IntegrationConfig.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"IntegrationSettings": [
			{
				"name": "IntegrationSettings",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationLog": [
			{
				"name": "IntegrationLog",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\integration\\IntegrationLog.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"LogDetails": [
			{
				"name": "LogDetails",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OAuth2Config": [
			{
				"name": "OAuth2Config",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"APICredentials": [
			{
				"name": "APICredentials",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CredentialRotationPolicy": [
			{
				"name": "CredentialRotationPolicy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FieldMapping": [
			{
				"name": "FieldMapping",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TransformRule": [
			{
				"name": "TransformRule",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ValidationRule": [
			{
				"name": "ValidationRule",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SyncConfiguration": [
			{
				"name": "SyncConfiguration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConflictResolutionStrategy": [
			{
				"name": "ConflictResolutionStrategy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"SyncFilter": [
			{
				"name": "SyncFilter",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SyncHook": [
			{
				"name": "SyncHook",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SyncResult": [
			{
				"name": "SyncResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\resilience\\MedicationQueue.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SyncMetadata": [
			{
				"name": "SyncMetadata",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WebhookConfig": [
			{
				"name": "WebhookConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WebhookEvent": [
			{
				"name": "WebhookEvent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"WebhookRetryPolicy": [
			{
				"name": "WebhookRetryPolicy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WebhookDeliveryLog": [
			{
				"name": "WebhookDeliveryLog",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SISIntegrationConfig": [
			{
				"name": "SISIntegrationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EHRIntegrationConfig": [
			{
				"name": "EHRIntegrationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PharmacyIntegrationConfig": [
			{
				"name": "PharmacyIntegrationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"LaboratoryIntegrationConfig": [
			{
				"name": "LaboratoryIntegrationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InsuranceIntegrationConfig": [
			{
				"name": "InsuranceIntegrationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ParentPortalIntegrationConfig": [
			{
				"name": "ParentPortalIntegrationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthAppIntegrationConfig": [
			{
				"name": "HealthAppIntegrationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GovernmentReportingConfig": [
			{
				"name": "GovernmentReportingConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConnectionTestResult": [
			{
				"name": "ConnectionTestResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConnectionTestDetails": [
			{
				"name": "ConnectionTestDetails",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationHealthCheck": [
			{
				"name": "IntegrationHealthCheck",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthIssue": [
			{
				"name": "HealthIssue",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationStatistics": [
			{
				"name": "IntegrationStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SyncStatistics": [
			{
				"name": "SyncStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TypeStatistics": [
			{
				"name": "TypeStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationActivity": [
			{
				"name": "IntegrationActivity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateIntegrationRequest": [
			{
				"name": "CreateIntegrationRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateIntegrationRequest": [
			{
				"name": "UpdateIntegrationRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationListResponse": [
			{
				"name": "IntegrationListResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationResponse": [
			{
				"name": "IntegrationResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationLogsResponse": [
			{
				"name": "IntegrationLogsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationStatisticsResponse": [
			{
				"name": "IntegrationStatisticsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"LogFilters": [
			{
				"name": "LogFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BatchOperationResult": [
			{
				"name": "BatchOperationResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationHealthStatusResponse": [
			{
				"name": "IntegrationHealthStatusResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"isIntegrationActive": [
			{
				"name": "isIntegrationActive",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isSyncSuccessful": [
			{
				"name": "isSyncSuccessful",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"hasIntegrationErrors": [
			{
				"name": "hasIntegrationErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getIntegrationTypeDisplay": [
			{
				"name": "getIntegrationTypeDisplay",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getIntegrationStatusColor": [
			{
				"name": "getIntegrationStatusColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getSyncStatusColor": [
			{
				"name": "getSyncStatusColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"calculateSyncSuccessRate": [
			{
				"name": "calculateSyncSuccessRate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"formatSyncDuration": [
			{
				"name": "formatSyncDuration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"file": [
			{
				"name": "file",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\index.ts",
				"isDefault": false
			}
		],
		"common": [
			{
				"name": "common",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"API": [
			{
				"name": "API",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"compliance": [
			{
				"name": "compliance",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"appointment": [
			{
				"name": "appointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"administration": [
			{
				"name": "administration",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\04-medication-management\\07-medication-administration.cy.ts",
				"isDefault": false
			}
		],
		"communication": [
			{
				"name": "communication",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"incident": [
			{
				"name": "incident",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"report": [
			{
				"name": "report",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\reports.ts",
				"isDefault": false
			}
		],
		"dashboard": [
			{
				"name": "dashboard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"access": [
			{
				"name": "access",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\auditLogging.ts",
				"isDefault": false
			}
		],
		"integration": [
			{
				"name": "integration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"vendor": [
			{
				"name": "vendor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"purchase": [
			{
				"name": "purchase",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\purchaseOrderApi.ts",
				"isDefault": false
			}
		],
		"inventory": [
			{
				"name": "inventory",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\04-medication-management\\08-inventory-management.cy.ts",
				"isDefault": false
			}
		],
		"budget": [
			{
				"name": "budget",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\budgetService.ts",
				"isDefault": false
			}
		],
		"state": [
			{
				"name": "state",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"navigation": [
			{
				"name": "navigation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"isDefault": false
			}
		],
		"ApiResponse": [
			{
				"name": "ApiResponse",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"LegacyMedicationWithCount": [
			{
				"name": "LegacyMedicationWithCount",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentType": [
			{
				"name": "IncidentType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"IncidentSeverity": [
			{
				"name": "IncidentSeverity",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"IncidentStatus": [
			{
				"name": "IncidentStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"WitnessType": [
			{
				"name": "WitnessType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ActionPriority": [
			{
				"name": "ActionPriority",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ActionStatus": [
			{
				"name": "ActionStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"InsuranceClaimStatus": [
			{
				"name": "InsuranceClaimStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ComplianceStatus": [
			{
				"name": "ComplianceStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ParentNotificationMethod": [
			{
				"name": "ParentNotificationMethod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"EvidenceType": [
			{
				"name": "EvidenceType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"WitnessStatement": [
			{
				"name": "WitnessStatement",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\incidents\\WitnessStatement.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"FollowUpAction": [
			{
				"name": "FollowUpAction",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\incidents\\FollowUpAction.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateIncidentReportRequest": [
			{
				"name": "CreateIncidentReportRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateIncidentReportRequest": [
			{
				"name": "UpdateIncidentReportRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportFilters": [
			{
				"name": "IncidentReportFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateWitnessStatementRequest": [
			{
				"name": "CreateWitnessStatementRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateWitnessStatementRequest": [
			{
				"name": "UpdateWitnessStatementRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateFollowUpActionRequest": [
			{
				"name": "CreateFollowUpActionRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateFollowUpActionRequest": [
			{
				"name": "UpdateFollowUpActionRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MarkParentNotifiedRequest": [
			{
				"name": "MarkParentNotifiedRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AddFollowUpNotesRequest": [
			{
				"name": "AddFollowUpNotesRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotifyParentRequest": [
			{
				"name": "NotifyParentRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AddEvidenceRequest": [
			{
				"name": "AddEvidenceRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateInsuranceClaimRequest": [
			{
				"name": "UpdateInsuranceClaimRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateComplianceStatusRequest": [
			{
				"name": "UpdateComplianceStatusRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentStatisticsFilters": [
			{
				"name": "IncidentStatisticsFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentSearchParams": [
			{
				"name": "IncidentSearchParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportDocument": [
			{
				"name": "IncidentReportDocument",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportResponse": [
			{
				"name": "IncidentReportResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportListResponse": [
			{
				"name": "IncidentReportListResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WitnessStatementResponse": [
			{
				"name": "WitnessStatementResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WitnessStatementListResponse": [
			{
				"name": "WitnessStatementListResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionResponse": [
			{
				"name": "FollowUpActionResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionListResponse": [
			{
				"name": "FollowUpActionListResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentStatisticsResponse": [
			{
				"name": "IncidentStatisticsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentDocumentResponse": [
			{
				"name": "IncidentDocumentResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EvidenceUploadResponse": [
			{
				"name": "EvidenceUploadResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InsuranceSubmissionResponse": [
			{
				"name": "InsuranceSubmissionResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InsuranceSubmissionsResponse": [
			{
				"name": "InsuranceSubmissionsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportFormData": [
			{
				"name": "IncidentReportFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WitnessStatementFormData": [
			{
				"name": "WitnessStatementFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionFormData": [
			{
				"name": "FollowUpActionFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"isIncidentType": [
			{
				"name": "isIncidentType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isIncidentSeverity": [
			{
				"name": "isIncidentSeverity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isWitnessType": [
			{
				"name": "isWitnessType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isActionStatus": [
			{
				"name": "isActionStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getIncidentTypeLabel": [
			{
				"name": "getIncidentTypeLabel",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getIncidentSeverityLabel": [
			{
				"name": "getIncidentSeverityLabel",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getIncidentSeverityColor": [
			{
				"name": "getIncidentSeverityColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getActionPriorityColor": [
			{
				"name": "getActionPriorityColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getActionStatusColor": [
			{
				"name": "getActionStatusColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\incidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"TabType": [
			{
				"name": "TabType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReportDetail\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"HealthRecordType": [
			{
				"name": "HealthRecordType",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AllergyType": [
			{
				"name": "AllergyType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ConditionStatus": [
			{
				"name": "ConditionStatus",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\chronicConditionService.d.ts",
				"type": "type",
				"isDefault": false
			},
			{
				"name": "ConditionStatus",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"ConditionSeverity": [
			{
				"name": "ConditionSeverity",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"VaccinationComplianceStatus": [
			{
				"name": "VaccinationComplianceStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ScreeningType": [
			{
				"name": "ScreeningType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ScreeningOutcome": [
			{
				"name": "ScreeningOutcome",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"AlertSeverity": [
			{
				"name": "AlertSeverity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ReminderMethod": [
			{
				"name": "ReminderMethod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ExportFormat": [
			{
				"name": "ExportFormat",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\HealthRecords\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Vaccination": [
			{
				"name": "Vaccination",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\healthcare\\Vaccination.ts",
				"type": "class",
				"isDefault": false
			},
			{
				"name": "Vaccination",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"GrowthMeasurement": [
			{
				"name": "GrowthMeasurement",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\healthcare\\GrowthMeasurement.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Screening": [
			{
				"name": "Screening",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\healthcare\\Screening.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"VitalSigns": [
			{
				"name": "VitalSigns",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AllergyFormErrors": [
			{
				"name": "AllergyFormErrors",
				"module": "@/types/healthRecords",
				"isDefault": true
			},
			{
				"name": "AllergyFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConditionFormErrors": [
			{
				"name": "ConditionFormErrors",
				"module": "@/types/healthRecords",
				"isDefault": true
			},
			{
				"name": "ConditionFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VaccinationFormErrors": [
			{
				"name": "VaccinationFormErrors",
				"module": "@/types/healthRecords",
				"isDefault": true
			},
			{
				"name": "VaccinationFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthMeasurementFormErrors": [
			{
				"name": "GrowthMeasurementFormErrors",
				"module": "@/types/healthRecords",
				"isDefault": true
			},
			{
				"name": "GrowthMeasurementFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthAlert": [
			{
				"name": "HealthAlert",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VaccinationReminder": [
			{
				"name": "VaccinationReminder",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TimelineEvent": [
			{
				"name": "TimelineEvent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReportDetail\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthSummaryCard": [
			{
				"name": "HealthSummaryCard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthPercentile": [
			{
				"name": "GrowthPercentile",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthVelocity": [
			{
				"name": "GrowthVelocity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceStats": [
			{
				"name": "ComplianceStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationAdherence": [
			{
				"name": "MedicationAdherence",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RiskAssessment": [
			{
				"name": "RiskAssessment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecordCompleteness": [
			{
				"name": "RecordCompleteness",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthRecordFilters": [
			{
				"name": "HealthRecordFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginatedHealthRecords": [
			{
				"name": "PaginatedHealthRecords",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthSummary": [
			{
				"name": "HealthSummary",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthChartData": [
			{
				"name": "GrowthChartData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateHealthRecordData": [
			{
				"name": "CreateHealthRecordData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\healthRecordService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateHealthRecordData": [
			{
				"name": "UpdateHealthRecordData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateAllergyData": [
			{
				"name": "CreateAllergyData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\allergyService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateAllergyData": [
			{
				"name": "UpdateAllergyData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\allergyService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateChronicConditionData": [
			{
				"name": "CreateChronicConditionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\healthRecordService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateChronicConditionData": [
			{
				"name": "UpdateChronicConditionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\chronicConditionService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateVaccinationData": [
			{
				"name": "CreateVaccinationData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\healthRecordService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateVaccinationData": [
			{
				"name": "UpdateVaccinationData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateScreeningData": [
			{
				"name": "CreateScreeningData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateScreeningData": [
			{
				"name": "UpdateScreeningData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateGrowthMeasurementData": [
			{
				"name": "CreateGrowthMeasurementData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateGrowthMeasurementData": [
			{
				"name": "UpdateGrowthMeasurementData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateVitalSignsData": [
			{
				"name": "CreateVitalSignsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateVitalSignsData": [
			{
				"name": "UpdateVitalSignsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\healthRecords.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorStatus": [
			{
				"name": "VendorStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"PaymentTerms": [
			{
				"name": "PaymentTerms",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"VendorRating": [
			{
				"name": "VendorRating",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorPerformanceMetrics": [
			{
				"name": "VendorPerformanceMetrics",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\vendorService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorComparison": [
			{
				"name": "VendorComparison",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\vendorService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorMetrics": [
			{
				"name": "VendorMetrics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorFilters": [
			{
				"name": "VendorFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\vendorService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateVendorData": [
			{
				"name": "CreateVendorData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\vendorService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateVendorData": [
			{
				"name": "UpdateVendorData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\vendorService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkVendorRatingUpdate": [
			{
				"name": "BulkVendorRatingUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkVendorRatingResult": [
			{
				"name": "BulkVendorRatingResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorsResponse": [
			{
				"name": "VendorsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorDetailResponse": [
			{
				"name": "VendorDetailResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorComparisonResponse": [
			{
				"name": "VendorComparisonResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TopVendorsResponse": [
			{
				"name": "TopVendorsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorStatistics": [
			{
				"name": "VendorStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorSearchResponse": [
			{
				"name": "VendorSearchResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorFormErrors": [
			{
				"name": "VendorFormErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorValidationRules": [
			{
				"name": "VendorValidationRules",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorEventHandlers": [
			{
				"name": "VendorEventHandlers",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorListProps": [
			{
				"name": "VendorListProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorCardProps": [
			{
				"name": "VendorCardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorModalProps": [
			{
				"name": "VendorModalProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorComparisonProps": [
			{
				"name": "VendorComparisonProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UseVendorsReturn": [
			{
				"name": "UseVendorsReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VENDOR_CONSTANTS": [
			{
				"name": "VENDOR_CONSTANTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"VENDOR_VALIDATION": [
			{
				"name": "VENDOR_VALIDATION",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\vendors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DocumentCategory": [
			{
				"name": "DocumentCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"DocumentStatus": [
			{
				"name": "DocumentStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"DocumentAccessLevel": [
			{
				"name": "DocumentAccessLevel",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"DocumentAction": [
			{
				"name": "DocumentAction",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"Document": [
			{
				"name": "Document",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\documents\\Document.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DocumentSignature": [
			{
				"name": "DocumentSignature",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\documents\\DocumentSignature.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DocumentAuditTrail": [
			{
				"name": "DocumentAuditTrail",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\documents\\DocumentAuditTrail.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DocumentTemplate": [
			{
				"name": "DocumentTemplate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentVersion": [
			{
				"name": "DocumentVersion",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentCategoryMetadata": [
			{
				"name": "DocumentCategoryMetadata",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateDocumentRequest": [
			{
				"name": "CreateDocumentRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateDocumentRequest": [
			{
				"name": "UpdateDocumentRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SignDocumentRequest": [
			{
				"name": "SignDocumentRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateDocumentVersionRequest": [
			{
				"name": "CreateDocumentVersionRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateFromTemplateRequest": [
			{
				"name": "CreateFromTemplateRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ShareDocumentRequest": [
			{
				"name": "ShareDocumentRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentPermission": [
			{
				"name": "DocumentPermission",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentFilters": [
			{
				"name": "DocumentFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\documentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentSearchParams": [
			{
				"name": "DocumentSearchParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginatedDocumentsResponse": [
			{
				"name": "PaginatedDocumentsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentWithRelations": [
			{
				"name": "DocumentWithRelations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentStatistics": [
			{
				"name": "DocumentStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentUsageAnalytics": [
			{
				"name": "DocumentUsageAnalytics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StorageUsage": [
			{
				"name": "StorageUsage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkUpdateDocumentsRequest": [
			{
				"name": "BulkUpdateDocumentsRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkDeleteDocumentsRequest": [
			{
				"name": "BulkDeleteDocumentsRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkDeleteDocumentsResponse": [
			{
				"name": "BulkDeleteDocumentsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkOperationResult": [
			{
				"name": "BulkOperationResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FileUploadRequest": [
			{
				"name": "FileUploadRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FileUploadProgress": [
			{
				"name": "FileUploadProgress",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FileUploadResponse": [
			{
				"name": "FileUploadResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExportDocumentsRequest": [
			{
				"name": "ExportDocumentsRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ImportDocumentsRequest": [
			{
				"name": "ImportDocumentsRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ImportDocumentsResponse": [
			{
				"name": "ImportDocumentsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExpiringDocumentsRequest": [
			{
				"name": "ExpiringDocumentsRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentRetentionPolicy": [
			{
				"name": "DocumentRetentionPolicy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ArchiveDocumentsRequest": [
			{
				"name": "ArchiveDocumentsRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ArchiveDocumentsResponse": [
			{
				"name": "ArchiveDocumentsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentValidationError": [
			{
				"name": "DocumentValidationError",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DocumentUploadError": [
			{
				"name": "DocumentUploadError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentWithoutRelations": [
			{
				"name": "DocumentWithoutRelations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"PartialDocumentUpdate": [
			{
				"name": "PartialDocumentUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"DocumentSortField": [
			{
				"name": "DocumentSortField",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"DocumentSortOrder": [
			{
				"name": "DocumentSortOrder",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"DOCUMENT_CATEGORY_LABELS": [
			{
				"name": "DOCUMENT_CATEGORY_LABELS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DOCUMENT_STATUS_LABELS": [
			{
				"name": "DOCUMENT_STATUS_LABELS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DOCUMENT_ACCESS_LEVEL_LABELS": [
			{
				"name": "DOCUMENT_ACCESS_LEVEL_LABELS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DOCUMENT_ACTION_LABELS": [
			{
				"name": "DOCUMENT_ACTION_LABELS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ALLOWED_FILE_TYPES": [
			{
				"name": "ALLOWED_FILE_TYPES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MAX_FILE_SIZE": [
			{
				"name": "MAX_FILE_SIZE",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DEFAULT_RETENTION_YEARS": [
			{
				"name": "DEFAULT_RETENTION_YEARS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\documents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TrendData": [
			{
				"name": "TrendData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\dashboardService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardStats": [
			{
				"name": "DashboardStats",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\dashboardService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardRecentActivity": [
			{
				"name": "DashboardRecentActivity",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\dashboardService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardUpcomingAppointment": [
			{
				"name": "DashboardUpcomingAppointment",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\dashboardService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChartDataPoint": [
			{
				"name": "ChartDataPoint",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\dashboardService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardChartData": [
			{
				"name": "DashboardChartData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\dashboardService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"QuickAction": [
			{
				"name": "QuickAction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecentActivitiesParams": [
			{
				"name": "RecentActivitiesParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpcomingAppointmentsParams": [
			{
				"name": "UpcomingAppointmentsParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChartDataParams": [
			{
				"name": "ChartDataParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardStatsResponse": [
			{
				"name": "DashboardStatsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecentActivitiesResponse": [
			{
				"name": "RecentActivitiesResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpcomingAppointmentsResponse": [
			{
				"name": "UpcomingAppointmentsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChartDataResponse": [
			{
				"name": "ChartDataResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardErrorResponse": [
			{
				"name": "DashboardErrorResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardWidgetConfig": [
			{
				"name": "DashboardWidgetConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CompleteDashboardData": [
			{
				"name": "CompleteDashboardData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DashboardRealtimeUpdate": [
			{
				"name": "DashboardRealtimeUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\dashboard.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"describe": [
			{
				"name": "describe",
				"module": "vitest",
				"isDefault": false
			}
		],
		"it": [
			{
				"name": "it",
				"module": "vitest",
				"isDefault": false
			}
		],
		"expect": [
			{
				"name": "expect",
				"module": "vitest",
				"isDefault": false
			}
		],
		"beforeEach": [
			{
				"name": "beforeEach",
				"module": "vitest",
				"isDefault": false
			}
		],
		"TokenData": [
			{
				"name": "TokenData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\tokenSecurity.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EncryptedTokenData": [
			{
				"name": "EncryptedTokenData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\tokenSecurity.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"tokenSecurityManager": [
			{
				"name": "tokenSecurityManager",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\tokenSecurity.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"legacyTokenUtils": [
			{
				"name": "legacyTokenUtils",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\tokenSecurity.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateTokenFormat": [
			{
				"name": "validateTokenFormat",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\tokenSecurity.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getTokenExpiration": [
			{
				"name": "getTokenExpiration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\tokenSecurity.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isTokenExpired": [
			{
				"name": "isTokenExpired",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\jwt.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ComplianceReportType": [
			{
				"name": "ComplianceReportType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ComplianceCategory": [
			{
				"name": "ComplianceCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ChecklistItemStatus": [
			{
				"name": "ChecklistItemStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ConsentType": [
			{
				"name": "ConsentType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"PolicyCategory": [
			{
				"name": "PolicyCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"PolicyStatus": [
			{
				"name": "PolicyStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"AuditAction": [
			{
				"name": "AuditAction",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\auditLogging.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ComplianceChecklistItem": [
			{
				"name": "ComplianceChecklistItem",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\compliance\\ComplianceChecklistItem.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ConsentForm": [
			{
				"name": "ConsentForm",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\compliance\\ConsentForm.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ConsentSignature": [
			{
				"name": "ConsentSignature",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\compliance\\ConsentSignature.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"PolicyDocument": [
			{
				"name": "PolicyDocument",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\compliance\\PolicyDocument.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"PolicyAcknowledgment": [
			{
				"name": "PolicyAcknowledgment",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\compliance\\PolicyAcknowledgment.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"PaginationParams": [
			{
				"name": "PaginationParams",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginationResult": [
			{
				"name": "PaginationResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\services\\UserService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginatedResponse": [
			{
				"name": "PaginatedResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceReportFilters": [
			{
				"name": "ComplianceReportFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\complianceService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConsentFormFilters": [
			{
				"name": "ConsentFormFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PolicyDocumentFilters": [
			{
				"name": "PolicyDocumentFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuditLogFilters": [
			{
				"name": "AuditLogFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\auditService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateComplianceReportData": [
			{
				"name": "CreateComplianceReportData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\complianceService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateComplianceReportData": [
			{
				"name": "UpdateComplianceReportData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateChecklistItemData": [
			{
				"name": "CreateChecklistItemData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\complianceService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateChecklistItemData": [
			{
				"name": "UpdateChecklistItemData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateConsentFormData": [
			{
				"name": "CreateConsentFormData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\complianceService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SignConsentFormData": [
			{
				"name": "SignConsentFormData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreatePolicyData": [
			{
				"name": "CreatePolicyData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\complianceService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdatePolicyData": [
			{
				"name": "UpdatePolicyData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GenerateComplianceReportData": [
			{
				"name": "GenerateComplianceReportData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceReportsResponse": [
			{
				"name": "ComplianceReportsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceReportResponse": [
			{
				"name": "ComplianceReportResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConsentFormsResponse": [
			{
				"name": "ConsentFormsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConsentSignatureResponse": [
			{
				"name": "ConsentSignatureResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentConsentsResponse": [
			{
				"name": "StudentConsentsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PolicyDocumentsResponse": [
			{
				"name": "PolicyDocumentsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PolicyDocumentResponse": [
			{
				"name": "PolicyDocumentResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PolicyAcknowledgmentResponse": [
			{
				"name": "PolicyAcknowledgmentResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuditLogsResponse": [
			{
				"name": "AuditLogsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceStatisticsResponse": [
			{
				"name": "ComplianceStatisticsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChecklistItemResponse": [
			{
				"name": "ChecklistItemResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConsentFormResponse": [
			{
				"name": "ConsentFormResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\compliance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SuccessResponse": [
			{
				"name": "SuccessResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"showSuccessToast": [
			{
				"name": "showSuccessToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"showErrorToast": [
			{
				"name": "showErrorToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"toast": [
			{
				"name": "toast",
				"module": "react-hot-toast",
				"isDefault": true
			}
		],
		"validateStudentForm": [
			{
				"name": "validateStudentForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\studentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"checkDuplicateStudentNumber": [
			{
				"name": "checkDuplicateStudentNumber",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\studentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"scrollToFirstError": [
			{
				"name": "scrollToFirstError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\studentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MessageType": [
			{
				"name": "MessageType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"MessagePriority": [
			{
				"name": "MessagePriority",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"MessageCategory": [
			{
				"name": "MessageCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"RecipientType": [
			{
				"name": "RecipientType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"DeliveryStatus": [
			{
				"name": "DeliveryStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"EmergencyAlertSeverity": [
			{
				"name": "EmergencyAlertSeverity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"EmergencyAlertAudience": [
			{
				"name": "EmergencyAlertAudience",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"MessageTemplate": [
			{
				"name": "MessageTemplate",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\communication\\MessageTemplate.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateMessageTemplateData": [
			{
				"name": "CreateMessageTemplateData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\communicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateMessageTemplateData": [
			{
				"name": "UpdateMessageTemplateData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MessageTemplateFilters": [
			{
				"name": "MessageTemplateFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Message": [
			{
				"name": "Message",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\communication\\Message.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MessageRecipient": [
			{
				"name": "MessageRecipient",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateMessageData": [
			{
				"name": "CreateMessageData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\communicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MessageFilters": [
			{
				"name": "MessageFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\communicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MessageDelivery": [
			{
				"name": "MessageDelivery",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\communication\\MessageDelivery.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MessageDeliveryStatusResult": [
			{
				"name": "MessageDeliveryStatusResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\communicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DeliverySummary": [
			{
				"name": "DeliverySummary",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MessageDeliveryStatusResponse": [
			{
				"name": "MessageDeliveryStatusResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BroadcastAudience": [
			{
				"name": "BroadcastAudience",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BroadcastMessageData": [
			{
				"name": "BroadcastMessageData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\communicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyAlertData": [
			{
				"name": "EmergencyAlertData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyAlertResponse": [
			{
				"name": "EmergencyAlertResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ScheduledMessage": [
			{
				"name": "ScheduledMessage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TranslationRequest": [
			{
				"name": "TranslationRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TranslationResponse": [
			{
				"name": "TranslationResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SupportedLanguage": [
			{
				"name": "SupportedLanguage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationStatistics": [
			{
				"name": "CommunicationStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationStatisticsFilters": [
			{
				"name": "CommunicationStatisticsFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChannelOption": [
			{
				"name": "ChannelOption",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationTypeOption": [
			{
				"name": "NotificationTypeOption",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PriorityLevelOption": [
			{
				"name": "PriorityLevelOption",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VerificationMethodOption": [
			{
				"name": "VerificationMethodOption",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationOptions": [
			{
				"name": "CommunicationOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SendMessageResponse": [
			{
				"name": "SendMessageResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GetMessagesResponse": [
			{
				"name": "GetMessagesResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ProcessScheduledMessagesResponse": [
			{
				"name": "ProcessScheduledMessagesResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationPreferences": [
			{
				"name": "CommunicationPreferences",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ContactCommunicationPreferences": [
			{
				"name": "ContactCommunicationPreferences",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Notification": [
			{
				"name": "Notification",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationFilters": [
			{
				"name": "NotificationFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TemplateVariable": [
			{
				"name": "TemplateVariable",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TemplateRenderContext": [
			{
				"name": "TemplateRenderContext",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkSendMessagesData": [
			{
				"name": "BulkSendMessagesData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkSendMessagesResponse": [
			{
				"name": "BulkSendMessagesResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MessageHistory": [
			{
				"name": "MessageHistory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReadReceipt": [
			{
				"name": "ReadReceipt",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationAnalytics": [
			{
				"name": "CommunicationAnalytics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\communication.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"core": [
			{
				"name": "core",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"isDefault": false
			}
		],
		"UserRole": [
			{
				"name": "UserRole",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\types\\ExecutionContext.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Priority": [
			{
				"name": "Priority",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "type",
				"isDefault": false
			},
			{
				"name": "Priority",
				"module": "@/types",
				"isDefault": true
			}
		],
		"Status": [
			{
				"name": "Status",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"MedicationRoute": [
			{
				"name": "MedicationRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AppointmentType": [
			{
				"name": "AppointmentType",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\appointment.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AppointmentStatus": [
			{
				"name": "AppointmentStatus",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\appointment.d.ts",
				"type": "type",
				"isDefault": false
			},
			{
				"name": "AppointmentStatus",
				"module": "@/types",
				"isDefault": true
			}
		],
		"NotificationMethod": [
			{
				"name": "NotificationMethod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"BaseEntity": [
			{
				"name": "BaseEntity",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			},
			{
				"name": "BaseEntity",
				"module": "@/types/common",
				"isDefault": false
			}
		],
		"BasePersonEntity": [
			{
				"name": "BasePersonEntity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BaseAddressEntity": [
			{
				"name": "BaseAddressEntity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BaseAuditEntity": [
			{
				"name": "BaseAuditEntity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateRequest": [
			{
				"name": "CreateRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateRequest": [
			{
				"name": "UpdateRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"EntityWithOptionalDates": [
			{
				"name": "EntityWithOptionalDates",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ValidationError": [
			{
				"name": "ValidationError",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			},
			{
				"name": "ValidationError",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"ApiError": [
			{
				"name": "ApiError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BaseFilters": [
			{
				"name": "BaseFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PersonFilters": [
			{
				"name": "PersonFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SortParams": [
			{
				"name": "SortParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginatedRequest": [
			{
				"name": "PaginatedRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthcareProvider": [
			{
				"name": "HealthcareProvider",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FileUpload": [
			{
				"name": "FileUpload",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentReference": [
			{
				"name": "DocumentReference",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationPreferences": [
			{
				"name": "NotificationPreferences",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationLog": [
			{
				"name": "CommunicationLog",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PermissionCheck": [
			{
				"name": "PermissionCheck",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"SystemSettings": [
			{
				"name": "SystemSettings",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetStatus": [
			{
				"name": "BudgetStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"BudgetRecommendation": [
			{
				"name": "BudgetRecommendation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"BudgetCategory": [
			{
				"name": "BudgetCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\inventory\\BudgetCategory.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"BudgetTransaction": [
			{
				"name": "BudgetTransaction",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\inventory\\BudgetTransaction.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"BudgetCategoryWithMetrics": [
			{
				"name": "BudgetCategoryWithMetrics",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\budgetService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateBudgetCategoryRequest": [
			{
				"name": "CreateBudgetCategoryRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateBudgetCategoryRequest": [
			{
				"name": "UpdateBudgetCategoryRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateBudgetTransactionRequest": [
			{
				"name": "CreateBudgetTransactionRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateBudgetTransactionRequest": [
			{
				"name": "UpdateBudgetTransactionRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetTransactionFilters": [
			{
				"name": "BudgetTransactionFilters",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\budgetService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetCategoryParams": [
			{
				"name": "BudgetCategoryParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetSummary": [
			{
				"name": "BudgetSummary",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\budgetService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SpendingTrend": [
			{
				"name": "SpendingTrend",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\budgetService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CategoryYearComparison": [
			{
				"name": "CategoryYearComparison",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OverBudgetCategory": [
			{
				"name": "OverBudgetCategory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetRecommendationItem": [
			{
				"name": "BudgetRecommendationItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetExportData": [
			{
				"name": "BudgetExportData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetCategoriesResponse": [
			{
				"name": "BudgetCategoriesResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetTransactionsResponse": [
			{
				"name": "BudgetTransactionsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SpendingTrendsResponse": [
			{
				"name": "SpendingTrendsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CategoryComparisonResponse": [
			{
				"name": "CategoryComparisonResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OverBudgetCategoriesResponse": [
			{
				"name": "OverBudgetCategoriesResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetRecommendationsResponse": [
			{
				"name": "BudgetRecommendationsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetStatsOverview": [
			{
				"name": "BudgetStatsOverview",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FiscalYearMetrics": [
			{
				"name": "FiscalYearMetrics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CategoryPerformanceMetrics": [
			{
				"name": "CategoryPerformanceMetrics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetCategoryFormData": [
			{
				"name": "BudgetCategoryFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetTransactionFormData": [
			{
				"name": "BudgetTransactionFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FiscalYearFormData": [
			{
				"name": "FiscalYearFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetAllocationFormData": [
			{
				"name": "BudgetAllocationFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetAlert": [
			{
				"name": "BudgetAlert",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetVarianceAnalysis": [
			{
				"name": "BudgetVarianceAnalysis",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetForecast": [
			{
				"name": "BudgetForecast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"getBudgetStatus": [
			{
				"name": "getBudgetStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isOverBudget": [
			{
				"name": "isOverBudget",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isApproachingLimit": [
			{
				"name": "isApproachingLimit",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isUnderutilized": [
			{
				"name": "isUnderutilized",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateRemainingBudget": [
			{
				"name": "calculateRemainingBudget",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateUtilizationPercentage": [
			{
				"name": "calculateUtilizationPercentage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getFiscalYearFromDate": [
			{
				"name": "getFiscalYearFromDate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getCurrentFiscalYear": [
			{
				"name": "getCurrentFiscalYear",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatBudgetAmount": [
			{
				"name": "formatBudgetAmount",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatUtilizationPercentage": [
			{
				"name": "formatUtilizationPercentage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\budget.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"APPOINTMENT_VALIDATION": [
			{
				"name": "APPOINTMENT_VALIDATION",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"APPOINTMENT_STATUS_TRANSITIONS": [
			{
				"name": "APPOINTMENT_STATUS_TRANSITIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"WaitlistPriority": [
			{
				"name": "WaitlistPriority",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\appointment.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"WaitlistStatus": [
			{
				"name": "WaitlistStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"RecurrenceFrequency": [
			{
				"name": "RecurrenceFrequency",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\appointment.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AppointmentReminder": [
			{
				"name": "AppointmentReminder",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\healthcare\\AppointmentReminder.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AppointmentWaitlist": [
			{
				"name": "AppointmentWaitlist",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\healthcare\\AppointmentWaitlist.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"NurseAvailability": [
			{
				"name": "NurseAvailability",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\healthcare\\NurseAvailability.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AvailabilitySlot": [
			{
				"name": "AvailabilitySlot",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\appointmentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateAppointmentData": [
			{
				"name": "CreateAppointmentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\appointmentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateAppointmentData": [
			{
				"name": "UpdateAppointmentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\appointmentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentFilters": [
			{
				"name": "AppointmentFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\appointmentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NurseAvailabilityData": [
			{
				"name": "NurseAvailabilityData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\appointmentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WaitlistEntryData": [
			{
				"name": "WaitlistEntryData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WaitlistFilters": [
			{
				"name": "WaitlistFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReminderData": [
			{
				"name": "ReminderData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\appointmentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecurrencePattern": [
			{
				"name": "RecurrencePattern",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\appointment.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecurringAppointmentData": [
			{
				"name": "RecurringAppointmentData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentStatistics": [
			{
				"name": "AppointmentStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Appointments\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ReminderProcessingResult": [
			{
				"name": "ReminderProcessingResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConflictCheckResult": [
			{
				"name": "ConflictCheckResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CalendarExportOptions": [
			{
				"name": "CalendarExportOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentFormData": [
			{
				"name": "AppointmentFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\api.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WaitlistFormData": [
			{
				"name": "WaitlistFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AvailabilityFormData": [
			{
				"name": "AvailabilityFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PopulatedAppointment": [
			{
				"name": "PopulatedAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PopulatedWaitlistEntry": [
			{
				"name": "PopulatedWaitlistEntry",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentCalendarEvent": [
			{
				"name": "AppointmentCalendarEvent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentTimeSlot": [
			{
				"name": "AppointmentTimeSlot",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentNotification": [
			{
				"name": "AppointmentNotification",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"isUpcomingAppointment": [
			{
				"name": "isUpcomingAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isCancellable": [
			{
				"name": "isCancellable",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isActiveWaitlistEntry": [
			{
				"name": "isActiveWaitlistEntry",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getAppointmentEndTime": [
			{
				"name": "getAppointmentEndTime",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"formatAppointmentType": [
			{
				"name": "formatAppointmentType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getAppointmentStatusColor": [
			{
				"name": "getAppointmentStatusColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getWaitlistPriorityColor": [
			{
				"name": "getWaitlistPriorityColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateDuration": [
			{
				"name": "validateDuration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateFutureDateTime": [
			{
				"name": "validateFutureDateTime",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateBusinessHours": [
			{
				"name": "validateBusinessHours",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateNotWeekend": [
			{
				"name": "validateNotWeekend",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateStatusTransition": [
			{
				"name": "validateStatusTransition",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateCancellationNotice": [
			{
				"name": "validateCancellationNotice",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateAppointmentData": [
			{
				"name": "validateAppointmentData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getAvailableDurations": [
			{
				"name": "getAvailableDurations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"canCancelAppointment": [
			{
				"name": "canCancelAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"canStartAppointment": [
			{
				"name": "canStartAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"canCompleteAppointment": [
			{
				"name": "canCompleteAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MedicationInventory": [
			{
				"name": "MedicationInventory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\medications\\MedicationInventory.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MedicationAdministration": [
			{
				"name": "MedicationAdministration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentDocumentation": [
			{
				"name": "AppointmentDocumentation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\api.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationFilters": [
			{
				"name": "MedicationFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationStatsResponse": [
			{
				"name": "MedicationStatsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\api.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentStatsResponse": [
			{
				"name": "AppointmentStatsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\api.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConfigCategory": [
			{
				"name": "ConfigCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ConfigValueType": [
			{
				"name": "ConfigValueType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ConfigScope": [
			{
				"name": "ConfigScope",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"BackupType": [
			{
				"name": "BackupType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"BackupStatus": [
			{
				"name": "BackupStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"MetricType": [
			{
				"name": "MetricType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"LicenseType": [
			{
				"name": "LicenseType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"LicenseStatus": [
			{
				"name": "LicenseStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"TrainingCategory": [
			{
				"name": "TrainingCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"District": [
			{
				"name": "District",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\District.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"School": [
			{
				"name": "School",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\School.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateDistrictData": [
			{
				"name": "CreateDistrictData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateDistrictData": [
			{
				"name": "UpdateDistrictData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateSchoolData": [
			{
				"name": "CreateSchoolData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateSchoolData": [
			{
				"name": "UpdateSchoolData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SystemConfiguration": [
			{
				"name": "SystemConfiguration",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\SystemConfiguration.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ConfigurationHistory": [
			{
				"name": "ConfigurationHistory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\ConfigurationHistory.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ConfigurationData": [
			{
				"name": "ConfigurationData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SystemSettingItem": [
			{
				"name": "SystemSettingItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"License": [
			{
				"name": "License",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\License.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateLicenseData": [
			{
				"name": "CreateLicenseData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateLicenseData": [
			{
				"name": "UpdateLicenseData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BackupLog": [
			{
				"name": "BackupLog",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\BackupLog.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateBackupData": [
			{
				"name": "CreateBackupData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SystemHealth": [
			{
				"name": "SystemHealth",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\administration\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecordMetricData": [
			{
				"name": "RecordMetricData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TrainingModule": [
			{
				"name": "TrainingModule",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\TrainingModule.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"TrainingCompletion": [
			{
				"name": "TrainingCompletion",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\administration\\TrainingCompletion.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateTrainingModuleData": [
			{
				"name": "CreateTrainingModuleData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateTrainingModuleData": [
			{
				"name": "UpdateTrainingModuleData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecordTrainingCompletionData": [
			{
				"name": "RecordTrainingCompletionData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserTrainingProgress": [
			{
				"name": "UserTrainingProgress",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"User": [
			{
				"name": "User",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\index.d.ts",
				"type": "interface",
				"isDefault": false
			},
			{
				"name": "User",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"CreateUserData": [
			{
				"name": "CreateUserData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\services\\UserService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateUserData": [
			{
				"name": "UpdateUserData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\services\\UserService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateAuditLogData": [
			{
				"name": "CreateAuditLogData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserFilters": [
			{
				"name": "UserFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\services\\UserService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MetricFilters": [
			{
				"name": "MetricFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"isConfigCategory": [
			{
				"name": "isConfigCategory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isLicenseType": [
			{
				"name": "isLicenseType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isTrainingCategory": [
			{
				"name": "isTrainingCategory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isUserRole": [
			{
				"name": "isUserRole",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isMetricType": [
			{
				"name": "isMetricType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isAuditAction": [
			{
				"name": "isAuditAction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\administration.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"SecurityIncidentType": [
			{
				"name": "SecurityIncidentType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"SecurityIncidentStatus": [
			{
				"name": "SecurityIncidentStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"IpRestrictionType": [
			{
				"name": "IpRestrictionType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"SessionStatus": [
			{
				"name": "SessionStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"Role": [
			{
				"name": "Role",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\security\\Role.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Permission": [
			{
				"name": "Permission",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\rbac.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RolePermission": [
			{
				"name": "RolePermission",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\security\\RolePermission.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"UserRoleAssignment": [
			{
				"name": "UserRoleAssignment",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\security\\UserRoleAssignment.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Session": [
			{
				"name": "Session",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\security\\Session.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"LoginAttempt": [
			{
				"name": "LoginAttempt",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\security\\LoginAttempt.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"SecurityIncident": [
			{
				"name": "SecurityIncident",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\security\\SecurityIncident.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"IpRestriction": [
			{
				"name": "IpRestriction",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\security\\IpRestriction.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateRoleData": [
			{
				"name": "CreateRoleData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateRoleData": [
			{
				"name": "UpdateRoleData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreatePermissionData": [
			{
				"name": "CreatePermissionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateSessionData": [
			{
				"name": "CreateSessionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"LogLoginAttemptData": [
			{
				"name": "LogLoginAttemptData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateSecurityIncidentData": [
			{
				"name": "CreateSecurityIncidentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateSecurityIncidentData": [
			{
				"name": "UpdateSecurityIncidentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AddIpRestrictionData": [
			{
				"name": "AddIpRestrictionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SecurityIncidentFilters": [
			{
				"name": "SecurityIncidentFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IpRestrictionCheckResult": [
			{
				"name": "IpRestrictionCheckResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserPermissionsResult": [
			{
				"name": "UserPermissionsResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SecurityStatistics": [
			{
				"name": "SecurityStatistics",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\accessControlService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SecurityIncidentsPaginatedResponse": [
			{
				"name": "SecurityIncidentsPaginatedResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RoleResponse": [
			{
				"name": "RoleResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RolesResponse": [
			{
				"name": "RolesResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PermissionResponse": [
			{
				"name": "PermissionResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PermissionsResponse": [
			{
				"name": "PermissionsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RolePermissionResponse": [
			{
				"name": "RolePermissionResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserRoleAssignmentResponse": [
			{
				"name": "UserRoleAssignmentResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SessionResponse": [
			{
				"name": "SessionResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SessionsResponse": [
			{
				"name": "SessionsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SecurityIncidentResponse": [
			{
				"name": "SecurityIncidentResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IpRestrictionResponse": [
			{
				"name": "IpRestrictionResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IpRestrictionsResponse": [
			{
				"name": "IpRestrictionsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DeleteResponse": [
			{
				"name": "DeleteResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DeleteSessionsResponse": [
			{
				"name": "DeleteSessionsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PermissionCheckResponse": [
			{
				"name": "PermissionCheckResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StatisticsResponse": [
			{
				"name": "StatisticsResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PermissionKey": [
			{
				"name": "PermissionKey",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"PermissionResource": [
			{
				"name": "PermissionResource",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"PermissionAction": [
			{
				"name": "PermissionAction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"isSecurityIncidentType": [
			{
				"name": "isSecurityIncidentType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isSecurityIncidentStatus": [
			{
				"name": "isSecurityIncidentStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isIpRestrictionType": [
			{
				"name": "isIpRestrictionType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\types\\accessControl.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeText": [
			{
				"name": "sanitizeText",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeHtml": [
			{
				"name": "sanitizeHtml",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeEmail": [
			{
				"name": "sanitizeEmail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizePhoneNumber": [
			{
				"name": "sanitizePhoneNumber",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeId": [
			{
				"name": "sanitizeId",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeNumber": [
			{
				"name": "sanitizeNumber",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeDate": [
			{
				"name": "sanitizeDate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeFileName": [
			{
				"name": "sanitizeFileName",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeUrl": [
			{
				"name": "sanitizeUrl",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"deepSanitizeObject": [
			{
				"name": "deepSanitizeObject",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateSafeHealthcareText": [
			{
				"name": "validateSafeHealthcareText",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeSearchQuery": [
			{
				"name": "sanitizeSearchQuery",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\sanitization.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"generateCSPNonce": [
			{
				"name": "generateCSPNonce",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\securityHeaders.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"_": [
			{
				"name": "_",
				"module": "lodash",
				"isDefault": true
			}
		],
		"ParamValidator": [
			{
				"name": "ParamValidator",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ValidationResult": [
			{
				"name": "ValidationResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ParamSchema": [
			{
				"name": "ParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ValidationHookOptions": [
			{
				"name": "ValidationHookOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RouteValidationError": [
			{
				"name": "RouteValidationError",
				"module": "@/utils/routeValidation",
				"isDefault": false
			},
			{
				"name": "RouteValidationError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"UUIDParamSchema": [
			{
				"name": "UUIDParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"NumericParamSchema": [
			{
				"name": "NumericParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PositiveIntegerParamSchema": [
			{
				"name": "PositiveIntegerParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DateParamSchema": [
			{
				"name": "DateParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"EnumParamSchema": [
			{
				"name": "EnumParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"CompositeParamSchema": [
			{
				"name": "CompositeParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentIdParamSchema": [
			{
				"name": "StudentIdParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"IncidentIdParamSchema": [
			{
				"name": "IncidentIdParamSchema",
				"module": "@/utils/routeValidation",
				"isDefault": false
			},
			{
				"name": "IncidentIdParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"IncidentTypeParamSchema": [
			{
				"name": "IncidentTypeParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"IncidentSeverityParamSchema": [
			{
				"name": "IncidentSeverityParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"IncidentStatusParamSchema": [
			{
				"name": "IncidentStatusParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ActionPriorityParamSchema": [
			{
				"name": "ActionPriorityParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ActionStatusParamSchema": [
			{
				"name": "ActionStatusParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MedicationIdParamSchema": [
			{
				"name": "MedicationIdParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AppointmentIdParamSchema": [
			{
				"name": "AppointmentIdParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DocumentIdParamSchema": [
			{
				"name": "DocumentIdParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"EmergencyContactIdParamSchema": [
			{
				"name": "EmergencyContactIdParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HealthRecordIdParamSchema": [
			{
				"name": "HealthRecordIdParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"StudentHealthRecordParamSchema": [
			{
				"name": "StudentHealthRecordParamSchema",
				"module": "@/utils/routeValidation",
				"isDefault": false
			},
			{
				"name": "StudentHealthRecordParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"StudentDocumentParamSchema": [
			{
				"name": "StudentDocumentParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"StudentEmergencyContactParamSchema": [
			{
				"name": "StudentEmergencyContactParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DateRangeParamSchema": [
			{
				"name": "DateRangeParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PaginationParamSchema": [
			{
				"name": "PaginationParamSchema",
				"module": "@/utils/routeValidation",
				"isDefault": false
			},
			{
				"name": "PaginationParamSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"detectXSS": [
			{
				"name": "detectXSS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"detectSQLInjection": [
			{
				"name": "detectSQLInjection",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"detectPathTraversal": [
			{
				"name": "detectPathTraversal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"performSecurityChecks": [
			{
				"name": "performSecurityChecks",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeSpecialCharacters": [
			{
				"name": "sanitizeSpecialCharacters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeParams": [
			{
				"name": "sanitizeParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"parseDate": [
			{
				"name": "parseDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"parseBoolean": [
			{
				"name": "parseBoolean",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"parseArray": [
			{
				"name": "parseArray",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"parseJSON": [
			{
				"name": "parseJSON",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"parseParams": [
			{
				"name": "parseParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateRouteParams": [
			{
				"name": "validateRouteParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateQueryParams": [
			{
				"name": "validateQueryParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"handleValidationError": [
			{
				"name": "handleValidationError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"redirectOnInvalidParams": [
			{
				"name": "redirectOnInvalidParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useValidatedParams": [
			{
				"name": "useValidatedParams",
				"module": "@/utils/routeValidation",
				"isDefault": false
			},
			{
				"name": "useValidatedParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useValidatedQueryParams": [
			{
				"name": "useValidatedQueryParams",
				"module": "@/utils/routeValidation",
				"isDefault": false
			},
			{
				"name": "useValidatedQueryParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useParamValidator": [
			{
				"name": "useParamValidator",
				"module": "@/utils/routeValidation",
				"isDefault": false
			},
			{
				"name": "useParamValidator",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\routeValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useParams": [
			{
				"name": "useParams",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"useSearchParams": [
			{
				"name": "useSearchParams",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"useNavigate": [
			{
				"name": "useNavigate",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"useEffect": [
			{
				"name": "useEffect",
				"module": "react",
				"isDefault": true
			}
		],
		"useCallback": [
			{
				"name": "useCallback",
				"module": "react",
				"isDefault": true
			}
		],
		"UpdateStatus": [
			{
				"name": "UpdateStatus",
				"module": "@/utils/optimisticUpdates",
				"isDefault": false
			},
			{
				"name": "UpdateStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"RollbackStrategy": [
			{
				"name": "RollbackStrategy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"OperationType": [
			{
				"name": "OperationType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"OptimisticUpdate": [
			{
				"name": "OptimisticUpdate",
				"module": "@/utils/optimisticUpdates",
				"isDefault": false
			},
			{
				"name": "OptimisticUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConflictResolution": [
			{
				"name": "ConflictResolution",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OptimisticOperationOptions": [
			{
				"name": "OptimisticOperationOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OptimisticUpdateStats": [
			{
				"name": "OptimisticUpdateStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OptimisticUpdateManager": [
			{
				"name": "OptimisticUpdateManager",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"optimisticUpdateManager": [
			{
				"name": "optimisticUpdateManager",
				"module": "@/utils/optimisticUpdates",
				"isDefault": false
			},
			{
				"name": "optimisticUpdateManager",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"QueryClient": [
			{
				"name": "QueryClient",
				"module": "@tanstack/react-query",
				"isDefault": false
			}
		],
		"QueryKey": [
			{
				"name": "QueryKey",
				"module": "@tanstack/react-query",
				"isDefault": false
			}
		],
		"vi": [
			{
				"name": "vi",
				"module": "vitest",
				"isDefault": false
			}
		],
		"ExampleBasicIncidentCreate": [
			{
				"name": "ExampleBasicIncidentCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleIncidentUpdateWithConflictResolution": [
			{
				"name": "ExampleIncidentUpdateWithConflictResolution",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleManualOptimisticUpdate": [
			{
				"name": "ExampleManualOptimisticUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleWitnessStatement": [
			{
				"name": "ExampleWitnessStatement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleFollowUpActions": [
			{
				"name": "ExampleFollowUpActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleBulkDelete": [
			{
				"name": "ExampleBulkDelete",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleTransaction": [
			{
				"name": "ExampleTransaction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleCustomMerge": [
			{
				"name": "ExampleCustomMerge",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleCompleteComponent": [
			{
				"name": "ExampleCompleteComponent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ExampleErrorHandling": [
			{
				"name": "ExampleErrorHandling",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticUpdates.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useQueryClient": [
			{
				"name": "useQueryClient",
				"module": "@tanstack/react-query",
				"isDefault": false
			}
		],
		"React": [
			{
				"name": "React",
				"module": "react",
				"isDefault": true
			}
		],
		"OptimisticUpdateIndicator": [
			{
				"name": "OptimisticUpdateIndicator",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\OptimisticUpdateIndicator.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "OptimisticUpdateIndicator",
				"module": "@/components/shared/OptimisticUpdateIndicator",
				"isDefault": false
			}
		],
		"UpdateToast": [
			{
				"name": "UpdateToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "UpdateToast",
				"module": "@/components/shared/UpdateToast",
				"isDefault": false
			}
		],
		"ConflictResolutionModal": [
			{
				"name": "ConflictResolutionModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\ConflictResolutionModal.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "ConflictResolutionModal",
				"module": "@/components/shared/ConflictResolutionModal",
				"isDefault": false
			}
		],
		"RollbackButton": [
			{
				"name": "RollbackButton",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\RollbackButton.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "RollbackButton",
				"module": "@/components/shared/RollbackButton",
				"isDefault": false
			}
		],
		"generateTempId": [
			{
				"name": "generateTempId",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isTempId": [
			{
				"name": "isTempId",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"replaceTempId": [
			{
				"name": "replaceTempId",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"replaceTempIdsInArray": [
			{
				"name": "replaceTempIdsInArray",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"optimisticCreate": [
			{
				"name": "optimisticCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"optimisticUpdate": [
			{
				"name": "optimisticUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"optimisticUpdateInList": [
			{
				"name": "optimisticUpdateInList",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"optimisticDelete": [
			{
				"name": "optimisticDelete",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"optimisticDeleteFromList": [
			{
				"name": "optimisticDeleteFromList",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"optimisticBulkCreate": [
			{
				"name": "optimisticBulkCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"optimisticBulkDelete": [
			{
				"name": "optimisticBulkDelete",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"rollbackUpdate": [
			{
				"name": "rollbackUpdate",
				"module": "@/utils/optimisticHelpers",
				"isDefault": false
			},
			{
				"name": "rollbackUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"confirmUpdate": [
			{
				"name": "confirmUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"confirmCreate": [
			{
				"name": "confirmCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"beginTransaction": [
			{
				"name": "beginTransaction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"commitTransaction": [
			{
				"name": "commitTransaction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"async": [
			{
				"name": "async",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"isDefault": false
			}
		],
		"defaultMergeFn": [
			{
				"name": "defaultMergeFn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"deepMergeFn": [
			{
				"name": "deepMergeFn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\optimisticHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"hasRequiredRole": [
			{
				"name": "hasRequiredRole",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"hasRequiredPermissions": [
			{
				"name": "hasRequiredPermissions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"canAccessNavigationItem": [
			{
				"name": "canAccessNavigationItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"filterNavigationItems": [
			{
				"name": "filterNavigationItems",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAccessibleNavigationItems": [
			{
				"name": "getAccessibleNavigationItems",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isNavigationItemActive": [
			{
				"name": "isNavigationItemActive",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"markActiveNavigationItems": [
			{
				"name": "markActiveNavigationItems",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getDisabledReasonMessage": [
			{
				"name": "getDisabledReasonMessage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sortNavigationItems": [
			{
				"name": "sortNavigationItems",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"groupNavigationItemsBySection": [
			{
				"name": "groupNavigationItemsBySection",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatBadgeValue": [
			{
				"name": "formatBadgeValue",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\navigationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"default": [
			{
				"name": "default",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"isDefault": false
			}
		],
		"formatDate": [
			{
				"name": "formatDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getDaysUntilExpiration": [
			{
				"name": "getDaysUntilExpiration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getExpirationStatus": [
			{
				"name": "getExpirationStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getStockStatus": [
			{
				"name": "getStockStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"parseAndFormatStrength": [
			{
				"name": "parseAndFormatStrength",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"calculateTotalInventory": [
			{
				"name": "calculateTotalInventory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getSeverityColor": [
			{
				"name": "getSeverityColor",
				"module": "@/utils/healthRecords",
				"isDefault": false
			},
			{
				"name": "getSeverityColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getMedicationStatusColor": [
			{
				"name": "getMedicationStatusColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getInventoryStatusColor": [
			{
				"name": "getInventoryStatusColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getMedicationDisplayName": [
			{
				"name": "getMedicationDisplayName",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getNextReminderTime": [
			{
				"name": "getNextReminderTime",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"filterMedications": [
			{
				"name": "filterMedications",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getMedicationStats": [
			{
				"name": "getMedicationStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateMedicationData": [
			{
				"name": "validateMedicationData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"formatMedicationForDisplay": [
			{
				"name": "formatMedicationForDisplay",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"arrayUtils": [
			{
				"name": "arrayUtils",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"objectUtils": [
			{
				"name": "objectUtils",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"stringUtils": [
			{
				"name": "stringUtils",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"functionUtils": [
			{
				"name": "functionUtils",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"dateUtils": [
			{
				"name": "dateUtils",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validationUtils": [
			{
				"name": "validationUtils",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"mathUtils": [
			{
				"name": "mathUtils",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"reactUtils": [
			{
				"name": "reactUtils",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"healthcareUtils": [
			{
				"name": "healthcareUtils",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\lodashUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CleanupOptions": [
			{
				"name": "CleanupOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SessionMonitorOptions": [
			{
				"name": "SessionMonitorOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"clearHealthRecordsCache": [
			{
				"name": "clearHealthRecordsCache",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"clearSensitiveStorage": [
			{
				"name": "clearSensitiveStorage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"clearAllPHI": [
			{
				"name": "clearAllPHI",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"secureOverwrite": [
			{
				"name": "secureOverwrite",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"SessionMonitor": [
			{
				"name": "SessionMonitor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"logCleanupEvent": [
			{
				"name": "logCleanupEvent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAuditLog": [
			{
				"name": "getAuditLog",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"monitorPageVisibility": [
			{
				"name": "monitorPageVisibility",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAutoPHICleanup": [
			{
				"name": "useAutoPHICleanup",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"healthRecordsCleanup": [
			{
				"name": "healthRecordsCleanup",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecordsCleanup.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"formatShortDate": [
			{
				"name": "formatShortDate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getStatusColor": [
			{
				"name": "getStatusColor",
				"module": "@/utils/healthRecords",
				"isDefault": false
			},
			{
				"name": "getStatusColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getVaccinationStatusColor": [
			{
				"name": "getVaccinationStatusColor",
				"module": "@/utils/healthRecords",
				"isDefault": false
			},
			{
				"name": "getVaccinationStatusColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getPriorityColor": [
			{
				"name": "getPriorityColor",
				"module": "@/utils/healthRecords",
				"isDefault": false
			},
			{
				"name": "getPriorityColor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"calculateBMI": [
			{
				"name": "calculateBMI",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sortVaccinations": [
			{
				"name": "sortVaccinations",
				"module": "@/utils/healthRecords",
				"isDefault": false
			},
			{
				"name": "sortVaccinations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"filterVaccinations": [
			{
				"name": "filterVaccinations",
				"module": "@/utils/healthRecords",
				"isDefault": false
			},
			{
				"name": "filterVaccinations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generateId": [
			{
				"name": "generateId",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateRequired": [
			{
				"name": "validateRequired",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateDateRange": [
			{
				"name": "validateDateRange",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateNumericRange": [
			{
				"name": "validateNumericRange",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"debounce": [
			{
				"name": "debounce",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"type { SeverityLevel": [
			{
				"name": "type { SeverityLevel",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"VALID_GRADES": [
			{
				"name": "VALID_GRADES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"VALIDATION_PATTERNS": [
			{
				"name": "VALIDATION_PATTERNS",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FIELD_CONSTRAINTS": [
			{
				"name": "FIELD_CONSTRAINTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AGE_CONSTRAINTS": [
			{
				"name": "AGE_CONSTRAINTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateStudentNumber": [
			{
				"name": "validateStudentNumber",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateMedicalRecordNumber": [
			{
				"name": "validateMedicalRecordNumber",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateName": [
			{
				"name": "validateName",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDateOfBirth": [
			{
				"name": "validateDateOfBirth",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateGrade": [
			{
				"name": "validateGrade",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateEnrollmentDate": [
			{
				"name": "validateEnrollmentDate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validatePhoneNumber": [
			{
				"name": "validatePhoneNumber",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateEmail": [
			{
				"name": "validateEmail",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validatePhotoUrl": [
			{
				"name": "validatePhotoUrl",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateUUID": [
			{
				"name": "validateUUID",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateStudentCreation": [
			{
				"name": "validateStudentCreation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"normalizeStudentData": [
			{
				"name": "normalizeStudentData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\validation\\studentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ErrorType": [
			{
				"name": "ErrorType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ProcessedError": [
			{
				"name": "ProcessedError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"processError": [
			{
				"name": "processError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logError": [
			{
				"name": "logError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ErrorNotification": [
			{
				"name": "ErrorNotification",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"createErrorNotification": [
			{
				"name": "createErrorNotification",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"withErrorHandling": [
			{
				"name": "withErrorHandling",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"UseErrorHandlerResult": [
			{
				"name": "UseErrorHandlerResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"createErrorHandler": [
			{
				"name": "createErrorHandler",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"RetryOptions": [
			{
				"name": "RetryOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\errorHandling.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MIN_FILE_SIZE": [
			{
				"name": "MIN_FILE_SIZE",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MAX_TITLE_LENGTH": [
			{
				"name": "MAX_TITLE_LENGTH",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MIN_TITLE_LENGTH": [
			{
				"name": "MIN_TITLE_LENGTH",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MAX_DESCRIPTION_LENGTH": [
			{
				"name": "MAX_DESCRIPTION_LENGTH",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MAX_TAGS_COUNT": [
			{
				"name": "MAX_TAGS_COUNT",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MAX_TAG_LENGTH": [
			{
				"name": "MAX_TAG_LENGTH",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MIN_TAG_LENGTH": [
			{
				"name": "MIN_TAG_LENGTH",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MAX_SHARE_RECIPIENTS": [
			{
				"name": "MAX_SHARE_RECIPIENTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateFileSize": [
			{
				"name": "validateFileSize",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateFileType": [
			{
				"name": "validateFileType",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateFileExtensionMatchesMimeType": [
			{
				"name": "validateFileExtensionMatchesMimeType",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateFileName": [
			{
				"name": "validateFileName",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateFile": [
			{
				"name": "validateFile",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentTitle": [
			{
				"name": "validateDocumentTitle",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentDescription": [
			{
				"name": "validateDocumentDescription",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentCategory": [
			{
				"name": "validateDocumentCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateAccessLevel": [
			{
				"name": "validateAccessLevel",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentTags": [
			{
				"name": "validateDocumentTags",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentStatus": [
			{
				"name": "validateDocumentStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateRetentionDate": [
			{
				"name": "validateRetentionDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateDefaultRetentionDate": [
			{
				"name": "calculateDefaultRetentionDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentCanBeEdited": [
			{
				"name": "validateDocumentCanBeEdited",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentCanBeSigned": [
			{
				"name": "validateDocumentCanBeSigned",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentCanBeDeleted": [
			{
				"name": "validateDocumentCanBeDeleted",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateSignatureData": [
			{
				"name": "validateSignatureData",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateSharePermissions": [
			{
				"name": "validateSharePermissions",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentCreation": [
			{
				"name": "validateDocumentCreation",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDocumentUpdate": [
			{
				"name": "validateDocumentUpdate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatValidationErrors": [
			{
				"name": "formatValidationErrors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getFirstErrorMessage": [
			{
				"name": "getFirstErrorMessage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"categoryRequiresSignature": [
			{
				"name": "categoryRequiresSignature",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createLogger": [
			{
				"name": "createLogger",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\debug.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"authLogger": [
			{
				"name": "authLogger",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\debug.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"apiLogger": [
			{
				"name": "apiLogger",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\debug.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"storeLogger": [
			{
				"name": "storeLogger",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\debug.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"componentLogger": [
			{
				"name": "componentLogger",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\debug.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"utilsLogger": [
			{
				"name": "utilsLogger",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\debug.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"logger": [
			{
				"name": "logger",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\logging\\logger.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"debug": [
			{
				"name": "debug",
				"module": "debug",
				"isDefault": true
			},
			{
				"name": "debug",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\debug.ts",
				"isDefault": true
			}
		],
		"IncidentDetailPageExample": [
			{
				"name": "IncidentDetailPageExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"IncidentListWithFiltersExample": [
			{
				"name": "IncidentListWithFiltersExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentListPaginationExample": [
			{
				"name": "StudentListPaginationExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentIncidentDetailExample": [
			{
				"name": "StudentIncidentDetailExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"DateRangeReportExample": [
			{
				"name": "DateRangeReportExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"AdvancedSearchExample": [
			{
				"name": "AdvancedSearchExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"manualValidationExample": [
			{
				"name": "manualValidationExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"ValidationWithToastExample": [
			{
				"name": "ValidationWithToastExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"AppointmentStatusFilterExample": [
			{
				"name": "AppointmentStatusFilterExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"BatchTransformationExample": [
			{
				"name": "BatchTransformationExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"ProtectedRoute": [
			{
				"name": "ProtectedRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"ProtectedIncidentPage": [
			{
				"name": "ProtectedIncidentPage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"SearchFormWithQueryParamsExample": [
			{
				"name": "SearchFormWithQueryParamsExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"examples": [
			{
				"name": "examples",
				"path": "c:\\temp\\white-cross\\frontend\\src\\utils\\examples\\routeValidationExamples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"useQuery": [
			{
				"name": "useQuery",
				"module": "@tanstack/react-query",
				"isDefault": false
			}
		],
		"afterEach": [
			{
				"name": "afterEach",
				"module": "vitest",
				"isDefault": false
			}
		],
		"cleanup": [
			{
				"name": "cleanup",
				"module": "@testing-library/react",
				"isDefault": false
			}
		],
		"render": [
			{
				"name": "render",
				"module": "@testing-library/react",
				"isDefault": false
			}
		],
		"screen": [
			{
				"name": "screen",
				"module": "@testing-library/react",
				"isDefault": false
			}
		],
		"apiInstance": [
			{
				"name": "apiInstance",
				"module": "@/services/config/apiConfig",
				"isDefault": false
			},
			{
				"name": "apiInstance",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\api.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"setSessionExpireHandler": [
			{
				"name": "setSessionExpireHandler",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\config\\apiConfig.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"tokenUtils": [
			{
				"name": "tokenUtils",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\config\\apiConfig.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"axios": [
			{
				"name": "axios",
				"module": "axios",
				"isDefault": true
			}
		],
		"{ AxiosInstance": [
			{
				"name": "{ AxiosInstance",
				"module": "axios",
				"isDefault": true
			}
		],
		"AxiosResponse": [
			{
				"name": "AxiosResponse",
				"module": "axios",
				"isDefault": true
			}
		],
		"ApiErrorHandler": [
			{
				"name": "ApiErrorHandler",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"extractApiData": [
			{
				"name": "extractApiData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"extractApiDataOptional": [
			{
				"name": "extractApiDataOptional",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildUrlParams": [
			{
				"name": "buildUrlParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildPaginationParams": [
			{
				"name": "buildPaginationParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"formatDateForApi": [
			{
				"name": "formatDateForApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"parseDateFromApi": [
			{
				"name": "parseDateFromApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"formatDateForDisplay": [
			{
				"name": "formatDateForDisplay",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"formatDateTimeForDisplay": [
			{
				"name": "formatDateTimeForDisplay",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isDateExpired": [
			{
				"name": "isDateExpired",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getTimeUntilExpiry": [
			{
				"name": "getTimeUntilExpiry",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"withRetry": [
			{
				"name": "withRetry",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createFormData": [
			{
				"name": "createFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isApiResponse": [
			{
				"name": "isApiResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isPaginatedResponse": [
			{
				"name": "isPaginatedResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"apiCache": [
			{
				"name": "apiCache",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"withCache": [
			{
				"name": "withCache",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createCancelTokenSource": [
			{
				"name": "createCancelTokenSource",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"handleApiError": [
			{
				"name": "handleApiError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\utils\\apiUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AxiosError": [
			{
				"name": "AxiosError",
				"module": "axios",
				"isDefault": true
			}
		],
		"moment": [
			{
				"name": "moment",
				"module": "moment",
				"isDefault": true
			}
		],
		"ReportsApi": [
			{
				"name": "ReportsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\reportsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"reportsApi": [
			{
				"name": "reportsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\reportsApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SettingsTab": [
			{
				"name": "SettingsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\Settings\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Settings": [
			{
				"name": "Settings",
				"module": "lucide-react",
				"isDefault": false
			},
			{
				"name": "Settings",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Settings\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"{ useState": [
			{
				"name": "{ useState",
				"module": "react",
				"isDefault": true
			}
		],
		"IAccessControlApi": [
			{
				"name": "IAccessControlApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\accessControlApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"accessControlApi": [
			{
				"name": "accessControlApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\accessControlApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"appointmentsApi": [
			{
				"name": "appointmentsApi",
				"module": "@/services/api",
				"isDefault": false
			},
			{
				"name": "appointmentsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\appointmentsApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"LoginCredentials": [
			{
				"name": "LoginCredentials",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\authApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RegisterData": [
			{
				"name": "RegisterData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\authApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuthResponse": [
			{
				"name": "AuthResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RefreshTokenResponse": [
			{
				"name": "RefreshTokenResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\authApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuthApi": [
			{
				"name": "AuthApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\authApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"authApi": [
			{
				"name": "authApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\authApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AdministrationApi": [
			{
				"name": "AdministrationApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\AdministrationApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"administrationApi": [
			{
				"name": "administrationApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PaginationResponse": [
			{
				"name": "PaginationResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SearchParams": [
			{
				"name": "SearchParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentCreateData": [
			{
				"name": "AppointmentCreateData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentUpdateData": [
			{
				"name": "AppointmentUpdateData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WaitlistEntry": [
			{
				"name": "WaitlistEntry",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\appointmentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationTemplate": [
			{
				"name": "CommunicationTemplate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationMessage": [
			{
				"name": "CommunicationMessage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Integration": [
			{
				"name": "Integration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplianceItem": [
			{
				"name": "ComplianceItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChecklistItem": [
			{
				"name": "ChecklistItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IAppointmentsApi": [
			{
				"name": "IAppointmentsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ICommunicationApi": [
			{
				"name": "ICommunicationApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IComplianceApi": [
			{
				"name": "IComplianceApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IEmergencyContactsApi": [
			{
				"name": "IEmergencyContactsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IIncidentReportsApi": [
			{
				"name": "IIncidentReportsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\types\\index.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VendorApi": [
			{
				"name": "VendorApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\vendorApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"vendorApi": [
			{
				"name": "vendorApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\api.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"StudentsApi": [
			{
				"name": "StudentsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\studentsApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"student": [
			{
				"name": "student",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\studentsApi.ts",
				"isDefault": false
			}
		],
		"studentsApi": [
			{
				"name": "studentsApi",
				"module": "@/services/modules/studentsApi",
				"isDefault": false
			},
			{
				"name": "studentsApi",
				"module": "@/services",
				"isDefault": false
			},
			{
				"name": "studentsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\studentsApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"types": [
			{
				"name": "types",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\index.ts",
				"isDefault": false
			}
		],
		"PurchaseOrderApi": [
			{
				"name": "PurchaseOrderApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\purchaseOrderApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"purchaseOrderApi": [
			{
				"name": "purchaseOrderApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\api.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"CreateMedicationRequest": [
			{
				"name": "CreateMedicationRequest",
				"module": "@/services/modules/medicationsApi",
				"isDefault": false
			},
			{
				"name": "CreateMedicationRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medicationsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateInventoryRequest": [
			{
				"name": "CreateInventoryRequest",
				"module": "@/services/modules/medicationsApi",
				"isDefault": false
			},
			{
				"name": "CreateInventoryRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medicationsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateInventoryRequest": [
			{
				"name": "UpdateInventoryRequest",
				"module": "@/services/modules/medicationsApi",
				"isDefault": false
			},
			{
				"name": "UpdateInventoryRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medicationsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationsApi": [
			{
				"name": "MedicationsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medicationsApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"medicationsApi": [
			{
				"name": "medicationsApi",
				"module": "@/services/modules/medicationsApi",
				"isDefault": false
			},
			{
				"name": "medicationsApi",
				"module": "@/services/api",
				"isDefault": false
			},
			{
				"name": "medicationsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medicationsApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"InventoryApi": [
			{
				"name": "InventoryApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\inventoryApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"inventoryApi": [
			{
				"name": "inventoryApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\api.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"useSystemHealth": [
			{
				"name": "useSystemHealth",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\Settings\\hooks\\useSystemHealth.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"IntegrationApi": [
			{
				"name": "IntegrationApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\integrationApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"integrationApi": [
			{
				"name": "integrationApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\api.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"getIntegrations": [
			{
				"name": "getIntegrations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\integrationApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateIntegration": [
			{
				"name": "updateIntegration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\integrationApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"testConnection": [
			{
				"name": "testConnection",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\integrationApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"sync": [
			{
				"name": "sync",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\integrationApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"incidentReportsApi": [
			{
				"name": "incidentReportsApi",
				"module": "@/services/modules/incidentReportsApi",
				"isDefault": false
			},
			{
				"name": "incidentReportsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\incidentReportsApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HealthRecordCreate": [
			{
				"name": "HealthRecordCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthRecordUpdate": [
			{
				"name": "HealthRecordUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AllergyCreate": [
			{
				"name": "AllergyCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AllergyUpdate": [
			{
				"name": "AllergyUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChronicConditionCreate": [
			{
				"name": "ChronicConditionCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChronicConditionUpdate": [
			{
				"name": "ChronicConditionUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VaccinationStatus": [
			{
				"name": "VaccinationStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"VaccinationCreate": [
			{
				"name": "VaccinationCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VaccinationUpdate": [
			{
				"name": "VaccinationUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VaccinationCompliance": [
			{
				"name": "VaccinationCompliance",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ScreeningCreate": [
			{
				"name": "ScreeningCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ScreeningUpdate": [
			{
				"name": "ScreeningUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthMeasurementCreate": [
			{
				"name": "GrowthMeasurementCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthMeasurementUpdate": [
			{
				"name": "GrowthMeasurementUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthTrend": [
			{
				"name": "GrowthTrend",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VitalSignsCreate": [
			{
				"name": "VitalSignsCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VitalSignsUpdate": [
			{
				"name": "VitalSignsUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VitalSignsTrend": [
			{
				"name": "VitalSignsTrend",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthTimeline": [
			{
				"name": "HealthTimeline",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthRecordsStatistics": [
			{
				"name": "HealthRecordsStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthRecordsApi": [
			{
				"name": "HealthRecordsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"HealthRecordsApiError": [
			{
				"name": "HealthRecordsApiError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CircuitBreakerError": [
			{
				"name": "CircuitBreakerError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"UnauthorizedError": [
			{
				"name": "UnauthorizedError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ForbiddenError": [
			{
				"name": "ForbiddenError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"healthRecordsApi": [
			{
				"name": "healthRecordsApi",
				"module": "@/services/api",
				"isDefault": false
			},
			{
				"name": "healthRecordsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\healthRecordsApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"emergencyContactsApi": [
			{
				"name": "emergencyContactsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\emergencyContactsApi.d.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DocumentsApi": [
			{
				"name": "DocumentsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\documentsApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"documentsApi": [
			{
				"name": "documentsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\documentsApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DashboardApi": [
			{
				"name": "DashboardApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\dashboardApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"dashboardApi": [
			{
				"name": "dashboardApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\dashboardApi.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"complianceApi": [
			{
				"name": "complianceApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\complianceApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"communicationApi": [
			{
				"name": "communicationApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\communicationApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"BudgetApi": [
			{
				"name": "BudgetApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\budgetApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"budgetApi": [
			{
				"name": "budgetApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\api.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"the": [
			{
				"name": "the",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\auditService.ts",
				"isDefault": false
			}
		],
		"api": [
			{
				"name": "api",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\index.ts",
				"isDefault": true
			}
		],
		"legacyApi": [
			{
				"name": "legacyApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"const": [
			{
				"name": "const",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"isDefault": false
			}
		],
		"IncidentReportApi": [
			{
				"name": "IncidentReportApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\incidentReportApi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"incidentReportApi": [
			{
				"name": "incidentReportApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\incidentReportApi.d.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SettingsTabs": [
			{
				"name": "SettingsTabs",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\Settings\\components\\SettingsTabs.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateStudentDto": [
			{
				"name": "CreateStudentDto",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\examples\\ExampleStudentsService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateStudentDto": [
			{
				"name": "UpdateStudentDto",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\examples\\ExampleStudentsService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"studentsService": [
			{
				"name": "studentsService",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\examples\\ExampleStudentsService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"studentsQueryHooks": [
			{
				"name": "studentsQueryHooks",
				"module": "@/services/examples/ExampleStudentsService",
				"isDefault": false
			},
			{
				"name": "studentsQueryHooks",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\examples\\ExampleStudentsService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useForm": [
			{
				"name": "useForm",
				"module": "react-hook-form",
				"isDefault": false
			}
		],
		"SettingsHeader": [
			{
				"name": "SettingsHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\Settings\\components\\SettingsHeader.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"EmergencyContactsApi": [
			{
				"name": "EmergencyContactsApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\emergencyContactsApi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentService": [
			{
				"name": "DocumentService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\documentService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"QueryHooksConfig": [
			{
				"name": "QueryHooksConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ListQueryOptions": [
			{
				"name": "ListQueryOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DetailQueryOptions": [
			{
				"name": "DetailQueryOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SearchQueryOptions": [
			{
				"name": "SearchQueryOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateMutationOptions": [
			{
				"name": "CreateMutationOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateMutationOptions": [
			{
				"name": "UpdateMutationOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DeleteMutationOptions": [
			{
				"name": "DeleteMutationOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkMutationOptions": [
			{
				"name": "BulkMutationOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"QueryHooksFactory": [
			{
				"name": "QueryHooksFactory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"createQueryHooks": [
			{
				"name": "createQueryHooks",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"QueryHooks": [
			{
				"name": "QueryHooks",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"EntityFromHooks": [
			{
				"name": "EntityFromHooks",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateDtoFromHooks": [
			{
				"name": "CreateDtoFromHooks",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateDtoFromHooks": [
			{
				"name": "UpdateDtoFromHooks",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\QueryHooksFactory.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"useMemo": [
			{
				"name": "useMemo",
				"module": "react",
				"isDefault": true
			}
		],
		"apiClient": [
			{
				"name": "apiClient",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiClient.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"FilterParams": [
			{
				"name": "FilterParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\BaseApiService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CrudOperations": [
			{
				"name": "CrudOperations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\BaseApiService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BaseApiService": [
			{
				"name": "BaseApiService",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\BaseApiService.ts",
				"type": "abstract class",
				"isDefault": false
			}
		],
		"createApiService": [
			{
				"name": "createApiService",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\BaseApiService.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ZodSchema": [
			{
				"name": "ZodSchema",
				"module": "zod",
				"isDefault": false
			}
		],
		"ApiMetrics": [
			{
				"name": "ApiMetrics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiMonitoring.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PerformanceStats": [
			{
				"name": "PerformanceStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiMonitoring.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MonitoringConfig": [
			{
				"name": "MonitoringConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiMonitoring.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ApiMonitoring": [
			{
				"name": "ApiMonitoring",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiMonitoring.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"apiMonitoring": [
			{
				"name": "apiMonitoring",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiMonitoring.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AxiosRequestConfig": [
			{
				"name": "AxiosRequestConfig",
				"module": "axios",
				"isDefault": true
			}
		],
		"ApiErrorResponse": [
			{
				"name": "ApiErrorResponse",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiClient.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ApiClientError": [
			{
				"name": "ApiClientError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiClient.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"RequestInterceptor": [
			{
				"name": "RequestInterceptor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiClient.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ResponseInterceptor": [
			{
				"name": "ResponseInterceptor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiClient.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ApiClientConfig": [
			{
				"name": "ApiClientConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiClient.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ApiClient": [
			{
				"name": "ApiClient",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\core\\ApiClient.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"QueuedAdministration": [
			{
				"name": "QueuedAdministration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useOfflineQueue.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UseOfflineQueueReturn": [
			{
				"name": "UseOfflineQueueReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useOfflineQueue.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"useOfflineQueue": [
			{
				"name": "useOfflineQueue",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useOfflineQueue.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formularyKeys": [
			{
				"name": "formularyKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationFormulary.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"UseMedicationFormularyReturn": [
			{
				"name": "UseMedicationFormularyReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationFormulary.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"useMedicationFormulary": [
			{
				"name": "useMedicationFormulary",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationFormulary.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDrugMonograph": [
			{
				"name": "useDrugMonograph",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationFormulary.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAlternativeMedications": [
			{
				"name": "useAlternativeMedications",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationFormulary.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useLASAWarnings": [
			{
				"name": "useLASAWarnings",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationFormulary.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useMedicationCategories": [
			{
				"name": "useMedicationCategories",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationFormulary.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useMedicationForms": [
			{
				"name": "useMedicationForms",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationFormulary.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useMutation": [
			{
				"name": "useMutation",
				"module": "@tanstack/react-query",
				"isDefault": false
			}
		],
		"UseQueryOptions": [
			{
				"name": "UseQueryOptions",
				"module": "@tanstack/react-query",
				"isDefault": false
			}
		],
		"MedicationForm": [
			{
				"name": "MedicationForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\MedicationFormularyApi.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"FormularyFilters": [
			{
				"name": "FormularyFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\MedicationFormularyApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DrugInteraction": [
			{
				"name": "DrugInteraction",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\medicationInteractionService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DrugMonograph": [
			{
				"name": "DrugMonograph",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\MedicationFormularyApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BarcodeResult": [
			{
				"name": "BarcodeResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\MedicationFormularyApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"LASAMedication": [
			{
				"name": "LASAMedication",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\MedicationFormularyApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationFormularyApi": [
			{
				"name": "MedicationFormularyApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\MedicationFormularyApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"medicationFormularyApi": [
			{
				"name": "medicationFormularyApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\MedicationFormularyApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"API_ENDPOINTS": [
			{
				"name": "API_ENDPOINTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "API_ENDPOINTS",
				"module": "@/constants/api",
				"isDefault": false
			}
		],
		"administrationKeys": [
			{
				"name": "administrationKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationAdministration.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MedicationSafetyError": [
			{
				"name": "MedicationSafetyError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationAdministration.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AllergyWarningError": [
			{
				"name": "AllergyWarningError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationAdministration.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"UseMedicationAdministrationReturn": [
			{
				"name": "UseMedicationAdministrationReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useMedicationAdministration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"useMedicationAdministration": [
			{
				"name": "useMedicationAdministration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useMedicationAdministration.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useAdministrationHistory": [
			{
				"name": "useAdministrationHistory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationAdministration.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useStudentSchedule": [
			{
				"name": "useStudentSchedule",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\hooks\\useMedicationAdministration.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"AdministrationSession": [
			{
				"name": "AdministrationSession",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\AdministrationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FiveRightsData": [
			{
				"name": "FiveRightsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\AdministrationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FiveRightsVerificationResult": [
			{
				"name": "FiveRightsVerificationResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\AdministrationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdministrationRecord": [
			{
				"name": "AdministrationRecord",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\AdministrationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdministrationLog": [
			{
				"name": "AdministrationLog",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\AdministrationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WitnessSignature": [
			{
				"name": "WitnessSignature",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\AdministrationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdministrationHistoryFilters": [
			{
				"name": "AdministrationHistoryFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\AdministrationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"medicationApi": [
			{
				"name": "medicationApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"export": [
			{
				"name": "export",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\index.ts",
				"isDefault": false
			}
		],
		"ConfigurationFilter": [
			{
				"name": "ConfigurationFilter",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\configurationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConfigurationUpdate": [
			{
				"name": "ConfigurationUpdate",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\configurationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkUpdateItem": [
			{
				"name": "BulkUpdateItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\configurationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkUpdatePayload": [
			{
				"name": "BulkUpdatePayload",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\configurationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateConfigurationPayload": [
			{
				"name": "CreateConfigurationPayload",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\configurationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ImportConfigurationsPayload": [
			{
				"name": "ImportConfigurationsPayload",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\configurationApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"configurationApi": [
			{
				"name": "configurationApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\configurationApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"verificationStatus": [
			{
				"name": "verificationStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\verifyIntegration.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"store": [
			{
				"name": "store",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "const",
				"isDefault": true
			},
			{
				"name": "store",
				"module": "@/stores/reduxStore",
				"isDefault": false
			},
			{
				"name": "store",
				"module": "@/stores",
				"isDefault": false
			}
		],
		"AppDispatch": [
			{
				"name": "AppDispatch",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "type",
				"isDefault": false
			},
			{
				"name": "AppDispatch",
				"module": "@/stores",
				"isDefault": true
			}
		],
		"isValidRootState": [
			{
				"name": "isValidRootState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\reduxStore.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"clearPersistedState": [
			{
				"name": "clearPersistedState",
				"module": "@/stores/reduxStore",
				"isDefault": false
			},
			{
				"name": "clearPersistedState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\reduxStore.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getStorageStats": [
			{
				"name": "getStorageStats",
				"module": "@/stores/reduxStore",
				"isDefault": false
			},
			{
				"name": "getStorageStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\reduxStore.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"configureStore": [
			{
				"name": "configureStore",
				"module": "@reduxjs/toolkit",
				"isDefault": false
			}
		],
		"combineReducers": [
			{
				"name": "combineReducers",
				"module": "@reduxjs/toolkit",
				"isDefault": false
			}
		],
		"useAppDispatch": [
			{
				"name": "useAppDispatch",
				"module": "@/stores/hooks/reduxHooks",
				"isDefault": false
			},
			{
				"name": "useAppDispatch",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "useAppDispatch",
				"module": "@/stores",
				"isDefault": false
			}
		],
		"useAppSelector": [
			{
				"name": "useAppSelector",
				"module": "@/stores/hooks/reduxHooks",
				"isDefault": false
			},
			{
				"name": "useAppSelector",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "useAppSelector",
				"module": "@/stores",
				"isDefault": false
			}
		],
		"useAuthActions": [
			{
				"name": "useAuthActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "useAuthActions",
				"module": "@/stores",
				"isDefault": false
			}
		],
		"useIncidentActions": [
			{
				"name": "useIncidentActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "useIncidentActions",
				"module": "@/stores",
				"isDefault": false
			}
		],
		"type { RootState": [
			{
				"name": "type { RootState",
				"module": "@/stores/reduxStore",
				"isDefault": true
			},
			{
				"name": "type { RootState",
				"module": "@/stores",
				"isDefault": true
			}
		],
		"fetchIncidentReports": [
			{
				"name": "fetchIncidentReports",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"fetchIncidentReportById": [
			{
				"name": "fetchIncidentReportById",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createIncidentReport": [
			{
				"name": "createIncidentReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateIncidentReport": [
			{
				"name": "updateIncidentReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"deleteIncidentReport": [
			{
				"name": "deleteIncidentReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"searchIncidentReports": [
			{
				"name": "searchIncidentReports",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"fetchWitnessStatements": [
			{
				"name": "fetchWitnessStatements",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createWitnessStatement": [
			{
				"name": "createWitnessStatement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"fetchFollowUpActions": [
			{
				"name": "fetchFollowUpActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createFollowUpAction": [
			{
				"name": "createFollowUpAction",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"incidentReportsSlice": [
			{
				"name": "incidentReportsSlice",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"isDefault": true
			}
		],
		"selectIncidentReports": [
			{
				"name": "selectIncidentReports",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectCurrentIncident": [
			{
				"name": "selectCurrentIncident",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectWitnessStatements": [
			{
				"name": "selectWitnessStatements",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectFollowUpActions": [
			{
				"name": "selectFollowUpActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectSearchResults": [
			{
				"name": "selectSearchResults",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectPagination": [
			{
				"name": "selectPagination",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectFilters": [
			{
				"name": "selectFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectSearchQuery": [
			{
				"name": "selectSearchQuery",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectSortConfig": [
			{
				"name": "selectSortConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectViewMode": [
			{
				"name": "selectViewMode",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectLoadingStates": [
			{
				"name": "selectLoadingStates",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIsLoading": [
			{
				"name": "selectIsLoading",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectErrorStates": [
			{
				"name": "selectErrorStates",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectError": [
			{
				"name": "selectError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIsCacheInvalidated": [
			{
				"name": "selectIsCacheInvalidated",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectLastFetched": [
			{
				"name": "selectLastFetched",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectFilteredAndSortedReports": [
			{
				"name": "selectFilteredAndSortedReports",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentsByType": [
			{
				"name": "selectIncidentsByType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentsBySeverity": [
			{
				"name": "selectIncidentsBySeverity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentsByStatus": [
			{
				"name": "selectIncidentsByStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentsRequiringFollowUp": [
			{
				"name": "selectIncidentsRequiringFollowUp",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectIncidentsWithUnnotifiedParents": [
			{
				"name": "selectIncidentsWithUnnotifiedParents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectCriticalIncidents": [
			{
				"name": "selectCriticalIncidents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"selectReportStatistics": [
			{
				"name": "selectReportStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\incidentReportsSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"loginUser": [
			{
				"name": "loginUser",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\authSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"registerUser": [
			{
				"name": "registerUser",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\authSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"logoutUser": [
			{
				"name": "logoutUser",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\authSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"refreshUser": [
			{
				"name": "refreshUser",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\authSlice.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"authSlice": [
			{
				"name": "authSlice",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\slices\\authSlice.ts",
				"isDefault": true
			}
		],
		"useCurrentUser": [
			{
				"name": "useCurrentUser",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIsAuthenticated": [
			{
				"name": "useIsAuthenticated",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useAuthLoading": [
			{
				"name": "useAuthLoading",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useAuthError": [
			{
				"name": "useAuthError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentReports": [
			{
				"name": "useIncidentReports",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useCurrentIncident": [
			{
				"name": "useCurrentIncident",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useWitnessStatements": [
			{
				"name": "useWitnessStatements",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\WitnessStatementContext.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"useFollowUpActions": [
			{
				"name": "useFollowUpActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"useIncidentSearchResults": [
			{
				"name": "useIncidentSearchResults",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentPagination": [
			{
				"name": "useIncidentPagination",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentSearchQuery": [
			{
				"name": "useIncidentSearchQuery",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentSortConfig": [
			{
				"name": "useIncidentSortConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentViewMode": [
			{
				"name": "useIncidentViewMode",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentLoadingStates": [
			{
				"name": "useIncidentLoadingStates",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentErrorStates": [
			{
				"name": "useIncidentErrorStates",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentListLoading": [
			{
				"name": "useIncidentListLoading",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentDetailLoading": [
			{
				"name": "useIncidentDetailLoading",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentCreating": [
			{
				"name": "useIncidentCreating",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentUpdating": [
			{
				"name": "useIncidentUpdating",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useIncidentDeleting": [
			{
				"name": "useIncidentDeleting",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\hooks\\reduxHooks.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TypedUseSelectorHook": [
			{
				"name": "TypedUseSelectorHook",
				"module": "react-redux",
				"isDefault": false
			}
		],
		"useAuthStore": [
			{
				"name": "useAuthStore",
				"path": "c:\\temp\\white-cross\\frontend\\src\\stores\\authStore.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"create": [
			{
				"name": "create",
				"module": "zustand",
				"isDefault": false
			}
		],
		"persist": [
			{
				"name": "persist",
				"module": "zustand/middleware",
				"isDefault": false
			}
		],
		"createDocumentSchema": [
			{
				"name": "createDocumentSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateDocumentSchema": [
			{
				"name": "updateDocumentSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"signDocumentSchema": [
			{
				"name": "signDocumentSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createDocumentVersionSchema": [
			{
				"name": "createDocumentVersionSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createFromTemplateSchema": [
			{
				"name": "createFromTemplateSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"shareDocumentSchema": [
			{
				"name": "shareDocumentSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"bulkDeleteDocumentsSchema": [
			{
				"name": "bulkDeleteDocumentsSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"fileUploadSchema": [
			{
				"name": "fileUploadSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"documentFiltersSchema": [
			{
				"name": "documentFiltersSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isPHICategory": [
			{
				"name": "isPHICategory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"requiresSignature": [
			{
				"name": "requiresSignature",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getRetentionYears": [
			{
				"name": "getRetentionYears",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateDocumentInput": [
			{
				"name": "CreateDocumentInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateDocumentInput": [
			{
				"name": "UpdateDocumentInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"SignDocumentInput": [
			{
				"name": "SignDocumentInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateDocumentVersionInput": [
			{
				"name": "CreateDocumentVersionInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateFromTemplateInput": [
			{
				"name": "CreateFromTemplateInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ShareDocumentInput": [
			{
				"name": "ShareDocumentInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"BulkDeleteDocumentsInput": [
			{
				"name": "BulkDeleteDocumentsInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"FileUploadInput": [
			{
				"name": "FileUploadInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"DocumentFiltersInput": [
			{
				"name": "DocumentFiltersInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\documentSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"createConsentFormSchema": [
			{
				"name": "createConsentFormSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateConsentFormSchema": [
			{
				"name": "updateConsentFormSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"signConsentFormSchema": [
			{
				"name": "signConsentFormSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"withdrawConsentSchema": [
			{
				"name": "withdrawConsentSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createPolicySchema": [
			{
				"name": "createPolicySchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updatePolicySchema": [
			{
				"name": "updatePolicySchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"acknowledgePolicySchema": [
			{
				"name": "acknowledgePolicySchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createComplianceReportSchema": [
			{
				"name": "createComplianceReportSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateComplianceReportSchema": [
			{
				"name": "updateComplianceReportSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generateComplianceReportSchema": [
			{
				"name": "generateComplianceReportSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createChecklistItemSchema": [
			{
				"name": "createChecklistItemSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateChecklistItemSchema": [
			{
				"name": "updateChecklistItemSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createAuditLogSchema": [
			{
				"name": "createAuditLogSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"complianceReportFiltersSchema": [
			{
				"name": "complianceReportFiltersSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"consentFormFiltersSchema": [
			{
				"name": "consentFormFiltersSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"policyDocumentFiltersSchema": [
			{
				"name": "policyDocumentFiltersSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"auditLogFiltersSchema": [
			{
				"name": "auditLogFiltersSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\complianceValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"requiresParentalConsent": [
			{
				"name": "requiresParentalConsent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isConsentExpired": [
			{
				"name": "isConsentExpired",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"requiresAnnualAcknowledgment": [
			{
				"name": "requiresAnnualAcknowledgment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isPastReviewDate": [
			{
				"name": "isPastReviewDate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getRecommendedReviewPeriod": [
			{
				"name": "getRecommendedReviewPeriod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"calculateRecommendedReviewDate": [
			{
				"name": "calculateRecommendedReviewDate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validatePolicyStatusTransition": [
			{
				"name": "validatePolicyStatusTransition",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"canWithdrawConsent": [
			{
				"name": "canWithdrawConsent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateConsentFormInput": [
			{
				"name": "CreateConsentFormInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateConsentFormInput": [
			{
				"name": "UpdateConsentFormInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"SignConsentFormInput": [
			{
				"name": "SignConsentFormInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"WithdrawConsentInput": [
			{
				"name": "WithdrawConsentInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreatePolicyInput": [
			{
				"name": "CreatePolicyInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdatePolicyInput": [
			{
				"name": "UpdatePolicyInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AcknowledgePolicyInput": [
			{
				"name": "AcknowledgePolicyInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateComplianceReportInput": [
			{
				"name": "CreateComplianceReportInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateComplianceReportInput": [
			{
				"name": "UpdateComplianceReportInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"GenerateComplianceReportInput": [
			{
				"name": "GenerateComplianceReportInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateChecklistItemInput": [
			{
				"name": "CreateChecklistItemInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"UpdateChecklistItemInput": [
			{
				"name": "UpdateChecklistItemInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateAuditLogInput": [
			{
				"name": "CreateAuditLogInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ComplianceReportFiltersInput": [
			{
				"name": "ComplianceReportFiltersInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ConsentFormFiltersInput": [
			{
				"name": "ConsentFormFiltersInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"PolicyDocumentFiltersInput": [
			{
				"name": "PolicyDocumentFiltersInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AuditLogFiltersInput": [
			{
				"name": "AuditLogFiltersInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\schemas\\complianceSchemas.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"StudentFiltersForm": [
			{
				"name": "StudentFiltersForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentSortColumn": [
			{
				"name": "StudentSortColumn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"EmergencyContactData": [
			{
				"name": "EmergencyContactData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationState": [
			{
				"name": "NotificationState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"commonly": [
			{
				"name": "commonly",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\index.ts",
				"isDefault": false
			}
		],
		"type { Student": [
			{
				"name": "type { Student",
				"module": "@/types/student.types",
				"isDefault": true
			}
		],
		"Students": [
			{
				"name": "Students",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"complete": [
			{
				"name": "complete",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\OverviewTab.tsx",
				"isDefault": false
			}
		],
		"useAuthContext": [
			{
				"name": "useAuthContext",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\AuthContext.tsx",
				"type": "function",
				"isDefault": false
			},
			{
				"name": "useAuthContext",
				"module": "@/contexts/AuthContext",
				"isDefault": false
			}
		],
		"useStudentManagement": [
			{
				"name": "useStudentManagement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudentManagement.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "useStudentManagement",
				"module": "@/hooks/useStudentManagement",
				"isDefault": false
			}
		],
		"usePersistedFilters": [
			{
				"name": "usePersistedFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.ts",
				"type": "function",
				"isDefault": false
			},
			{
				"name": "usePersistedFilters",
				"module": "@/hooks/useRouteState",
				"isDefault": false
			}
		],
		"usePageState": [
			{
				"name": "usePageState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.ts",
				"type": "function",
				"isDefault": false
			},
			{
				"name": "usePageState",
				"module": "@/hooks/useRouteState",
				"isDefault": false
			}
		],
		"useSortState": [
			{
				"name": "useSortState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.ts",
				"type": "function",
				"isDefault": false
			},
			{
				"name": "useSortState",
				"module": "@/hooks/useRouteState",
				"isDefault": false
			}
		],
		"StudentTable": [
			{
				"name": "StudentTable",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\StudentTable.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "StudentTable",
				"module": "@/components/students/StudentTable",
				"isDefault": false
			}
		],
		"StudentPagination": [
			{
				"name": "StudentPagination",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\StudentPagination.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "StudentPagination",
				"module": "@/components/students/StudentPagination",
				"isDefault": false
			}
		],
		"StudentFormModal": [
			{
				"name": "StudentFormModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\modals\\StudentFormModal.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "StudentFormModal",
				"module": "@/components/students/modals/StudentFormModal",
				"isDefault": false
			}
		],
		"StudentDetailsModal": [
			{
				"name": "StudentDetailsModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\modals\\StudentDetailsModal.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "StudentDetailsModal",
				"module": "@/components/students/modals/StudentDetailsModal",
				"isDefault": false
			}
		],
		"ConfirmArchiveModal": [
			{
				"name": "ConfirmArchiveModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\modals\\ConfirmArchiveModal.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "ConfirmArchiveModal",
				"module": "@/components/students/modals/ConfirmArchiveModal",
				"isDefault": false
			}
		],
		"EmergencyContactModal": [
			{
				"name": "EmergencyContactModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\modals\\EmergencyContactModal.tsx",
				"type": "const",
				"isDefault": true
			},
			{
				"name": "EmergencyContactModal",
				"module": "@/components/students/modals/EmergencyContactModal",
				"isDefault": false
			}
		],
		"ExportModal": [
			{
				"name": "ExportModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\modals\\ExportModal.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "ExportModal",
				"module": "@/components/students/modals/ExportModal",
				"isDefault": false
			}
		],
		"PHIWarningModal": [
			{
				"name": "PHIWarningModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\modals\\PHIWarningModal.tsx",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "PHIWarningModal",
				"module": "@/components/students/modals/PHIWarningModal",
				"isDefault": false
			}
		],
		"useStudentsData": [
			{
				"name": "useStudentsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\hooks\\useStudentsData.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentsTableHeader": [
			{
				"name": "StudentsTableHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\components\\StudentsTableHeader.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"StudentsHeader": [
			{
				"name": "StudentsHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\components\\StudentsHeader.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"UserPlus": [
			{
				"name": "UserPlus",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"StudentsBulkActions": [
			{
				"name": "StudentsBulkActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Students\\components\\StudentsBulkActions.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"AccessCheckResult": [
			{
				"name": "AccessCheckResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthRecordComponentProps": [
			{
				"name": "HealthRecordComponentProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentHealthRecordsPageProps": [
			{
				"name": "StudentHealthRecordsPageProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\index.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentHealthRecordsPage": [
			{
				"name": "StudentHealthRecordsPage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\index.tsx",
				"type": "const",
				"isDefault": true
			}
		],
		"{ useCallback": [
			{
				"name": "{ useCallback",
				"module": "react",
				"isDefault": true
			}
		],
		"AccessDeniedPage": [
			{
				"name": "AccessDeniedPage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\AccessDeniedPage.tsx",
				"type": "function",
				"isDefault": true
			},
			{
				"name": "AccessDeniedPage",
				"module": "@/components/AccessDeniedPage",
				"isDefault": true
			}
		],
		"SensitiveRecordWarning": [
			{
				"name": "SensitiveRecordWarning",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\modals\\SensitiveRecordWarning.tsx",
				"type": "const",
				"isDefault": true
			},
			{
				"name": "SensitiveRecordWarning",
				"module": "@/components/SensitiveRecordWarning",
				"isDefault": true
			}
		],
		"HealthRecordLoadingState": [
			{
				"name": "HealthRecordLoadingState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\components\\HealthRecordLoadingState.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"HealthRecordHeader": [
			{
				"name": "HealthRecordHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\components\\HealthRecordHeader.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"HealthRecordErrorState": [
			{
				"name": "HealthRecordErrorState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\components\\HealthRecordErrorState.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"HealthRecordContent": [
			{
				"name": "HealthRecordContent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\components\\HealthRecordContent.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"DateRange": [
			{
				"name": "DateRange",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Reports": [
			{
				"name": "Reports",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Reports\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"BarChart3": [
			{
				"name": "BarChart3",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"TrendingUp": [
			{
				"name": "TrendingUp",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"FileText": [
			{
				"name": "FileText",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Download": [
			{
				"name": "Download",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Activity": [
			{
				"name": "Activity",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Heart": [
			{
				"name": "Heart",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"AlertTriangle": [
			{
				"name": "AlertTriangle",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Users": [
			{
				"name": "Users",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Pill": [
			{
				"name": "Pill",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Calendar": [
			{
				"name": "Calendar",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Shield": [
			{
				"name": "Shield",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"RefreshCw": [
			{
				"name": "RefreshCw",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Filter": [
			{
				"name": "Filter",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Medications": [
			{
				"name": "Medications",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"MedicationsOverviewTab": [
			{
				"name": "MedicationsOverviewTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\tabs\\MedicationsOverviewTab.tsx",
				"type": "function",
				"isDefault": true
			},
			{
				"name": "MedicationsOverviewTab",
				"module": "@/components/medications/tabs/MedicationsOverviewTab",
				"isDefault": true
			}
		],
		"MedicationsListTab": [
			{
				"name": "MedicationsListTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\tabs\\MedicationsListTab.tsx",
				"type": "function",
				"isDefault": true
			},
			{
				"name": "MedicationsListTab",
				"module": "@/components/medications/tabs/MedicationsListTab",
				"isDefault": true
			}
		],
		"MedicationsInventoryTab": [
			{
				"name": "MedicationsInventoryTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\tabs\\MedicationsInventoryTab.tsx",
				"type": "function",
				"isDefault": true
			},
			{
				"name": "MedicationsInventoryTab",
				"module": "@/components/medications/tabs/MedicationsInventoryTab",
				"isDefault": true
			}
		],
		"MedicationsRemindersTab": [
			{
				"name": "MedicationsRemindersTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\tabs\\MedicationsRemindersTab.tsx",
				"type": "function",
				"isDefault": true
			},
			{
				"name": "MedicationsRemindersTab",
				"module": "@/components/medications/tabs/MedicationsRemindersTab",
				"isDefault": true
			}
		],
		"MedicationsAdverseReactionsTab": [
			{
				"name": "MedicationsAdverseReactionsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\tabs\\MedicationsAdverseReactionsTab.tsx",
				"type": "function",
				"isDefault": true
			},
			{
				"name": "MedicationsAdverseReactionsTab",
				"module": "@/components/medications/tabs/MedicationsAdverseReactionsTab",
				"isDefault": true
			}
		],
		"useMedicationsData": [
			{
				"name": "useMedicationsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useMedicationsData.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"QUERY_INTERVALS": [
			{
				"name": "QUERY_INTERVALS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "QUERY_INTERVALS",
				"module": "@/constants",
				"isDefault": false
			}
		],
		"MedicationsTabs": [
			{
				"name": "MedicationsTabs",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\components\\MedicationsTabs.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Package": [
			{
				"name": "Package",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Bell": [
			{
				"name": "Bell",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"MedicationsHeader": [
			{
				"name": "MedicationsHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\components\\MedicationsHeader.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Plus": [
			{
				"name": "Plus",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"MedicationDetailsModal": [
			{
				"name": "MedicationDetailsModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\MedicationDetailsModal.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"AddMedicationModal": [
			{
				"name": "AddMedicationModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Medications\\components\\AddMedicationModal.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Prescription": [
			{
				"name": "Prescription",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PrescriptionFrequency": [
			{
				"name": "PrescriptionFrequency",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AllergyWarning": [
			{
				"name": "AllergyWarning",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PrescriptionFilters": [
			{
				"name": "PrescriptionFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreatePrescriptionRequest": [
			{
				"name": "CreatePrescriptionRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdatePrescriptionRequest": [
			{
				"name": "UpdatePrescriptionRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VerificationResult": [
			{
				"name": "VerificationResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PrescriptionHistory": [
			{
				"name": "PrescriptionHistory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PrescriptionApi": [
			{
				"name": "PrescriptionApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"prescriptionApi": [
			{
				"name": "prescriptionApi",
				"path": "c:\\temp\\white-cross\\frontend\\src\\services\\modules\\medication\\api\\PrescriptionApi.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"LoginForm": [
			{
				"name": "LoginForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Login\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Inventory": [
			{
				"name": "Inventory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Inventory\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"InventoryTab": [
			{
				"name": "InventoryTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\InventoryTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"InventorySortColumn": [
			{
				"name": "InventorySortColumn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Inventory\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"useInventoryFilters": [
			{
				"name": "useInventoryFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Inventory\\hooks\\useInventoryFilters.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"InventoryAlerts": [
			{
				"name": "InventoryAlerts",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\inventory\\InventoryAlerts.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"useInventoryData": [
			{
				"name": "useInventoryData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Inventory\\hooks\\useInventoryData.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"Login": [
			{
				"name": "Login",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Login\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"InventoryTabs": [
			{
				"name": "InventoryTabs",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Inventory\\components\\InventoryTabs.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"TrendingDown": [
			{
				"name": "TrendingDown",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"ShoppingCart": [
			{
				"name": "ShoppingCart",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"DollarSign": [
			{
				"name": "DollarSign",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"InventoryStatistics": [
			{
				"name": "InventoryStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Inventory\\components\\InventoryStatistics.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"AlertCircle": [
			{
				"name": "AlertCircle",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"InventoryLoadingState": [
			{
				"name": "InventoryLoadingState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Inventory\\components\\InventoryLoadingState.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"InventoryHeader": [
			{
				"name": "InventoryHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Inventory\\components\\InventoryHeader.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Tab": [
			{
				"name": "Tab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ComposeFormState": [
			{
				"name": "ComposeFormState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TemplateFormState": [
			{
				"name": "TemplateFormState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BroadcastFormState": [
			{
				"name": "BroadcastFormState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyFormState": [
			{
				"name": "EmergencyFormState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Communication": [
			{
				"name": "Communication",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"LoginFormFields": [
			{
				"name": "LoginFormFields",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Login\\components\\LoginForm.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"UseFormRegister": [
			{
				"name": "UseFormRegister",
				"module": "react-hook-form",
				"isDefault": false
			}
		],
		"FieldErrors": [
			{
				"name": "FieldErrors",
				"module": "react-hook-form",
				"isDefault": false
			}
		],
		"Eye": [
			{
				"name": "Eye",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"EyeOff": [
			{
				"name": "EyeOff",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"useCommunicationData": [
			{
				"name": "useCommunicationData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\hooks\\useCommunicationData.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"IncidentFiltersForm": [
			{
				"name": "IncidentFiltersForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentSortColumn": [
			{
				"name": "IncidentSortColumn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"IncidentReports": [
			{
				"name": "IncidentReports",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\index.main.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"IncidentReportsStatistics": [
			{
				"name": "IncidentReportsStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\components\\IncidentReportsStatistics.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Clock": [
			{
				"name": "Clock",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"IncidentReportsLoadingState": [
			{
				"name": "IncidentReportsLoadingState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\components\\IncidentReportsLoadingState.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"IncidentReportsHeader": [
			{
				"name": "IncidentReportsHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\components\\IncidentReportsHeader.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"IncidentReportsFilters": [
			{
				"name": "IncidentReportsFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\components\\IncidentReportsFilters.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Search": [
			{
				"name": "Search",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"X": [
			{
				"name": "X",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"IncidentReportsErrorState": [
			{
				"name": "IncidentReportsErrorState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\components\\IncidentReportsErrorState.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"IncidentReportsEmptyState": [
			{
				"name": "IncidentReportsEmptyState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\components\\IncidentReportsEmptyState.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Camera": [
			{
				"name": "Camera",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"IncidentReportsTable": [
			{
				"name": "IncidentReportsTable",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\components\\IncidentReportsTable.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"CheckCircle": [
			{
				"name": "CheckCircle",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"ChevronLeft": [
			{
				"name": "ChevronLeft",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"ChevronRight": [
			{
				"name": "ChevronRight",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"IncidentTimeline": [
			{
				"name": "IncidentTimeline",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\IncidentTimeline.tsx",
				"isDefault": true
			}
		],
		"IncidentReportDetail": [
			{
				"name": "IncidentReportDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReportDetail\\index.main.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Link": [
			{
				"name": "Link",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"functionality": [
			{
				"name": "functionality",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\searchAndUtility.ts",
				"isDefault": false
			}
		],
		"will": [
			{
				"name": "will",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\IncidentExport.tsx",
				"isDefault": false
			}
		],
		"this": [
			{
				"name": "this",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\IncidentExport.tsx",
				"isDefault": false
			}
		],
		"IncidentExport": [
			{
				"name": "IncidentExport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\IncidentExport.tsx",
				"isDefault": true
			}
		],
		"IncidentEvidence": [
			{
				"name": "IncidentEvidence",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\IncidentEvidence.tsx",
				"isDefault": true
			}
		],
		"IncidentActions": [
			{
				"name": "IncidentActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\IncidentActions.tsx",
				"isDefault": true
			}
		],
		"CommunicationTabs": [
			{
				"name": "CommunicationTabs",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\components\\CommunicationTabs.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"Send": [
			{
				"name": "Send",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"CommunicationStatisticsCards": [
			{
				"name": "CommunicationStatisticsCards",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\components\\CommunicationStatistics.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"MessageSquare": [
			{
				"name": "MessageSquare",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"XCircle": [
			{
				"name": "XCircle",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"CommunicationHeader": [
			{
				"name": "CommunicationHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\components\\CommunicationHeader.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"CommunicationFeatureCards": [
			{
				"name": "CommunicationFeatureCards",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Communication\\components\\CommunicationFeatureCards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"Globe": [
			{
				"name": "Globe",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"with": [
			{
				"name": "with",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"isDefault": false
			}
		],
		"HealthRecords": [
			{
				"name": "HealthRecords",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\HealthRecords\\index.tsx",
				"isDefault": true
			}
		],
		"useIncidentReportsData": [
			{
				"name": "useIncidentReportsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\hooks\\useIncidentReportsData.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useIncidentReportsFilters": [
			{
				"name": "useIncidentReportsFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\hooks\\useIncidentReportsFilters.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthRecordAccess": [
			{
				"name": "useHealthRecordAccess",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\StudentHealthRecords\\hooks\\useHealthRecordAccess.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"HealthRecordsHeader": [
			{
				"name": "HealthRecordsHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\HealthRecords\\components\\HealthRecordsHeader.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"useHealthRecordsPageData": [
			{
				"name": "useHealthRecordsPageData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\HealthRecords\\hooks\\useHealthRecordsPageData.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"EmergencyContacts": [
			{
				"name": "EmergencyContacts",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"useStudents": [
			{
				"name": "useStudents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "useStudents",
				"module": "@/hooks/useStudents",
				"isDefault": false
			}
		],
		"DocumentSortColumn": [
			{
				"name": "DocumentSortColumn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Documents\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"EmergencyContactsTab": [
			{
				"name": "EmergencyContactsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Contact": [
			{
				"name": "Contact",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyContactFilters": [
			{
				"name": "EmergencyContactFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ContactFormData": [
			{
				"name": "ContactFormData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationType": [
			{
				"name": "NotificationType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationPriority": [
			{
				"name": "NotificationPriority",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"NotificationData": [
			{
				"name": "NotificationData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\emergencyContactService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Documents": [
			{
				"name": "Documents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Documents\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"UpcomingAppointment": [
			{
				"name": "UpcomingAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Dashboard\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TimePeriod": [
			{
				"name": "TimePeriod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Dashboard\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"useContactFilters": [
			{
				"name": "useContactFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\hooks\\useContactFilters.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"Dashboard": [
			{
				"name": "Dashboard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Dashboard\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"{ useEffect": [
			{
				"name": "{ useEffect",
				"module": "react",
				"isDefault": true
			}
		],
		"EmergencyContactsFilters": [
			{
				"name": "EmergencyContactsFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\components\\EmergencyContactsFilters.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"useEmergencyContactsData": [
			{
				"name": "useEmergencyContactsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\hooks\\useEmergencyContactsData.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDocumentsData": [
			{
				"name": "useDocumentsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Documents\\hooks\\useDocumentsData.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"EmergencyContactsTabs": [
			{
				"name": "EmergencyContactsTabs",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\components\\EmergencyContactsTabs.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Phone": [
			{
				"name": "Phone",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"EmergencyContactsStatistics": [
			{
				"name": "EmergencyContactsStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\components\\EmergencyContactsStatistics.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"MessageCircle": [
			{
				"name": "MessageCircle",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"EmergencyContactsOverview": [
			{
				"name": "EmergencyContactsOverview",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\components\\EmergencyContactsOverview.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Mail": [
			{
				"name": "Mail",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"EmergencyContactsNotificationForm": [
			{
				"name": "EmergencyContactsNotificationForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\components\\EmergencyContactsNotificationForm.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"EmergencyContactsLoadingState": [
			{
				"name": "EmergencyContactsLoadingState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\components\\EmergencyContactsLoadingState.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"EmergencyContactsList": [
			{
				"name": "EmergencyContactsList",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\components\\EmergencyContactsList.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Edit": [
			{
				"name": "Edit",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Trash2": [
			{
				"name": "Trash2",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"EmergencyContactsHeader": [
			{
				"name": "EmergencyContactsHeader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\EmergencyContacts\\components\\EmergencyContactsHeader.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"ViewMode": [
			{
				"name": "ViewMode",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Appointments\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AppointmentSortColumn": [
			{
				"name": "AppointmentSortColumn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Appointments\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Appointments": [
			{
				"name": "Appointments",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Appointments\\index.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"calendar": [
			{
				"name": "calendar",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"isDefault": false
			}
		],
		"useDashboardData": [
			{
				"name": "useDashboardData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Dashboard\\hooks\\useDashboardData.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"API_CONFIG": [
			{
				"name": "API_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "API_CONFIG",
				"module": "@/constants/config",
				"isDefault": false
			},
			{
				"name": "API_CONFIG",
				"module": "@/constants",
				"isDefault": false
			}
		],
		"RouteMetadata": [
			{
				"name": "RouteMetadata",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"Breadcrumb": [
			{
				"name": "Breadcrumb",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RouteAccessibility": [
			{
				"name": "RouteAccessibility",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ParamValidationResult": [
			{
				"name": "ParamValidationResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ROUTE_METADATA": [
			{
				"name": "ROUTE_METADATA",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isRouteAccessible": [
			{
				"name": "isRouteAccessible",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getRoutePermissions": [
			{
				"name": "getRoutePermissions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getRouteRoles": [
			{
				"name": "getRouteRoles",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"buildBreadcrumbs": [
			{
				"name": "buildBreadcrumbs",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"matchesRoutePattern": [
			{
				"name": "matchesRoutePattern",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"extractRouteParams": [
			{
				"name": "extractRouteParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getParentRoute": [
			{
				"name": "getParentRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"requiresAuthentication": [
			{
				"name": "requiresAuthentication",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getRouteMetadata": [
			{
				"name": "getRouteMetadata",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\routeUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"AppRoutes": [
			{
				"name": "AppRoutes",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\index.tsx",
				"type": "const",
				"isDefault": true
			}
		],
		"{ Suspense": [
			{
				"name": "{ Suspense",
				"module": "react",
				"isDefault": true
			}
		],
		"Routes": [
			{
				"name": "Routes",
				"module": "react-router-dom",
				"isDefault": false
			},
			{
				"name": "Routes",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"Route": [
			{
				"name": "Route",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"Navigate": [
			{
				"name": "Navigate",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"useLocation": [
			{
				"name": "useLocation",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"FeatureFlag": [
			{
				"name": "FeatureFlag",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"ParamValidationSchema": [
			{
				"name": "ParamValidationSchema",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"EnumValidation": [
			{
				"name": "EnumValidation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"DataLoadConfig": [
			{
				"name": "DataLoadConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"UnsavedChangesConfig": [
			{
				"name": "UnsavedChangesConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuthGuardProps": [
			{
				"name": "AuthGuardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuthGuard": [
			{
				"name": "AuthGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"RoleGuardProps": [
			{
				"name": "RoleGuardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"RoleGuard": [
			{
				"name": "RoleGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"PermissionGuardProps": [
			{
				"name": "PermissionGuardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"PermissionGuard": [
			{
				"name": "PermissionGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"DataLoadGuardProps": [
			{
				"name": "DataLoadGuardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"DataLoadGuard": [
			{
				"name": "DataLoadGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"UnsavedChangesGuardProps": [
			{
				"name": "UnsavedChangesGuardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"UnsavedChangesGuard": [
			{
				"name": "UnsavedChangesGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"FeatureFlagGuardProps": [
			{
				"name": "FeatureFlagGuardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"FeatureFlagGuard": [
			{
				"name": "FeatureFlagGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"isValidUUID": [
			{
				"name": "isValidUUID",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"isValidNumber": [
			{
				"name": "isValidNumber",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"isValidEnum": [
			{
				"name": "isValidEnum",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"RouteParamValidatorProps": [
			{
				"name": "RouteParamValidatorProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"RouteParamValidator": [
			{
				"name": "RouteParamValidator",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"CombinedGuardProps": [
			{
				"name": "CombinedGuardProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"CombinedGuard": [
			{
				"name": "CombinedGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\routes\\guards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"{ ReactNode": [
			{
				"name": "{ ReactNode",
				"module": "react",
				"isDefault": true
			}
		],
		"useBlocker": [
			{
				"name": "useBlocker",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"AccessDeniedParams": [
			{
				"name": "AccessDeniedParams",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\AccessDenied\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AccessDenied": [
			{
				"name": "AccessDenied",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\AccessDenied.tsx",
				"type": "const",
				"isDefault": true
			}
		],
		"ReactDOM": [
			{
				"name": "ReactDOM",
				"module": "react-dom/client",
				"isDefault": true
			}
		],
		"basicSyncConfig": [
			{
				"name": "basicSyncConfig",
				"module": "@/middleware/stateSyncMiddleware.examples",
				"isDefault": false
			},
			{
				"name": "basicSyncConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"hipaaCompliantConfig": [
			{
				"name": "hipaaCompliantConfig",
				"module": "@/middleware/stateSyncMiddleware.examples",
				"isDefault": false
			},
			{
				"name": "hipaaCompliantConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"customSerializerConfig": [
			{
				"name": "customSerializerConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"customConflictConfig": [
			{
				"name": "customConflictConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"migrationConfig": [
			{
				"name": "migrationConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"multiStrategyConfig": [
			{
				"name": "multiStrategyConfig",
				"module": "@/middleware/stateSyncMiddleware.examples",
				"isDefault": false
			},
			{
				"name": "multiStrategyConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"urlSyncConfig": [
			{
				"name": "urlSyncConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"crossTabConfig": [
			{
				"name": "crossTabConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"compressionConfig": [
			{
				"name": "compressionConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"exampleBasicStoreSetup": [
			{
				"name": "exampleBasicStoreSetup",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"exampleStoreWithHydration": [
			{
				"name": "exampleStoreWithHydration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"exampleManualSync": [
			{
				"name": "exampleManualSync",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"exampleClearState": [
			{
				"name": "exampleClearState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"exampleMultipleStrategies": [
			{
				"name": "exampleMultipleStrategies",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"exampleReactComponent": [
			{
				"name": "exampleReactComponent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"exampleReduxPersistMigration": [
			{
				"name": "exampleReduxPersistMigration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"persistor": [
			{
				"name": "persistor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"testSyncConfig": [
			{
				"name": "testSyncConfig",
				"module": "@/middleware/stateSyncMiddleware.examples",
				"isDefault": false
			},
			{
				"name": "testSyncConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"exampleTest": [
			{
				"name": "exampleTest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.examples.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createStateSyncMiddleware": [
			{
				"name": "createStateSyncMiddleware",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "function",
				"isDefault": false
			},
			{
				"name": "createStateSyncMiddleware",
				"module": "@/middleware/stateSyncMiddleware",
				"isDefault": false
			}
		],
		"manualSync": [
			{
				"name": "manualSync",
				"module": "@/middleware/stateSyncMiddleware",
				"isDefault": false
			},
			{
				"name": "manualSync",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"clearSyncedState": [
			{
				"name": "clearSyncedState",
				"module": "@/middleware/stateSyncMiddleware",
				"isDefault": false
			},
			{
				"name": "clearSyncedState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"persistStore": [
			{
				"name": "persistStore",
				"module": "redux-persist",
				"isDefault": false
			}
		],
		"persistReducer": [
			{
				"name": "persistReducer",
				"module": "redux-persist",
				"isDefault": false
			}
		],
		"storage": [
			{
				"name": "storage",
				"module": "redux-persist/lib/storage",
				"isDefault": true
			}
		],
		"AccessDeniedContent": [
			{
				"name": "AccessDeniedContent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\AccessDenied\\components\\AccessDeniedContent.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ArrowLeft": [
			{
				"name": "ArrowLeft",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"useAppointmentsData": [
			{
				"name": "useAppointmentsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\Appointments\\hooks\\useAppointmentsData.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"StorageType": [
			{
				"name": "StorageType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "type",
				"isDefault": false
			},
			{
				"name": "StorageType",
				"module": "@/middleware/stateSyncMiddleware.types",
				"isDefault": false
			}
		],
		"SyncStrategy": [
			{
				"name": "SyncStrategy",
				"module": "@/middleware/stateSyncMiddleware",
				"isDefault": false
			},
			{
				"name": "SyncStrategy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ConflictStrategy": [
			{
				"name": "ConflictStrategy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "enum",
				"isDefault": false
			},
			{
				"name": "ConflictStrategy",
				"module": "@/middleware/stateSyncMiddleware",
				"isDefault": false
			}
		],
		"StateSerializer": [
			{
				"name": "StateSerializer",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConflictMetadata": [
			{
				"name": "ConflictMetadata",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConflictResolver": [
			{
				"name": "ConflictResolver",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SliceSyncConfig": [
			{
				"name": "SliceSyncConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StateSyncConfig": [
			{
				"name": "StateSyncConfig",
				"module": "@/middleware/stateSyncMiddleware",
				"isDefault": false
			},
			{
				"name": "StateSyncConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SyncMessage": [
			{
				"name": "SyncMessage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PersistedStateMetadata": [
			{
				"name": "PersistedStateMetadata",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SyncState": [
			{
				"name": "SyncState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StateSyncMiddleware": [
			{
				"name": "StateSyncMiddleware",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CreateStateSyncMiddleware": [
			{
				"name": "CreateStateSyncMiddleware",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"LoadInitialState": [
			{
				"name": "LoadInitialState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ManualSync": [
			{
				"name": "ManualSync",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ClearSyncedState": [
			{
				"name": "ClearSyncedState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"SliceState": [
			{
				"name": "SliceState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"MinimalSliceSyncConfig": [
			{
				"name": "MinimalSliceSyncConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"PartialSliceSyncConfig": [
			{
				"name": "PartialSliceSyncConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"SyncStrategyValue": [
			{
				"name": "SyncStrategyValue",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ConflictStrategyValue": [
			{
				"name": "ConflictStrategyValue",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"isStorageType": [
			{
				"name": "isStorageType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isSyncStrategy": [
			{
				"name": "isSyncStrategy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isConflictStrategy": [
			{
				"name": "isConflictStrategy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ConfigBuilder": [
			{
				"name": "ConfigBuilder",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SyncMiddlewareOptions": [
			{
				"name": "SyncMiddlewareOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"type { Middleware": [
			{
				"name": "type { Middleware",
				"module": "@reduxjs/toolkit",
				"isDefault": true
			}
		],
		"loadInitialState": [
			{
				"name": "loadInitialState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"stateSyncMiddleware": [
			{
				"name": "stateSyncMiddleware",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"Middleware": [
			{
				"name": "Middleware",
				"module": "@reduxjs/toolkit",
				"isDefault": false
			}
		],
		"AnyAction": [
			{
				"name": "AnyAction",
				"module": "@reduxjs/toolkit",
				"isDefault": false
			}
		],
		"pako": [
			{
				"name": "pako",
				"module": "pako",
				"isDefault": true
			}
		],
		"type { AnyAction": [
			{
				"name": "type { AnyAction",
				"module": "@reduxjs/toolkit",
				"isDefault": true
			}
		],
		"Reducer": [
			{
				"name": "Reducer",
				"module": "@reduxjs/toolkit",
				"isDefault": true
			}
		],
		"stateSyncConfig": [
			{
				"name": "stateSyncConfig",
				"module": "@/stores/syncConfig",
				"isDefault": false
			},
			{
				"name": "stateSyncConfig",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"loadPersistedState": [
			{
				"name": "loadPersistedState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"LogoutButton": [
			{
				"name": "LogoutButton",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"SaveIncidentButton": [
			{
				"name": "SaveIncidentButton",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"IncidentForm": [
			{
				"name": "IncidentForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"uiSlice": [
			{
				"name": "uiSlice",
				"path": "c:\\temp\\white-cross\\frontend\\src\\middleware\\stateSyncMiddleware.integration.example.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"logout": [
			{
				"name": "logout",
				"module": "@/stores/slices/authSlice",
				"isDefault": false
			}
		],
		"useRouteState": [
			{
				"name": "useRouteState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useNavigationState": [
			{
				"name": "useNavigationState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useRef": [
			{
				"name": "useRef",
				"module": "react",
				"isDefault": false
			}
		],
		"renderHook": [
			{
				"name": "renderHook",
				"module": "@testing-library/react",
				"isDefault": false
			}
		],
		"act": [
			{
				"name": "act",
				"module": "@testing-library/react",
				"isDefault": false
			}
		],
		"waitFor": [
			{
				"name": "waitFor",
				"module": "@testing-library/react",
				"isDefault": false
			}
		],
		"MemoryRouter": [
			{
				"name": "MemoryRouter",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"ReactNode": [
			{
				"name": "ReactNode",
				"module": "react",
				"isDefault": true
			}
		],
		"NavigationGuard": [
			{
				"name": "NavigationGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "type",
				"isDefault": false
			}
		],
		"GuardContext": [
			{
				"name": "GuardContext",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"GuardResult": [
			{
				"name": "GuardResult",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"DataLoader": [
			{
				"name": "DataLoader",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "type",
				"isDefault": false
			}
		],
		"GuardCompositionMode": [
			{
				"name": "GuardCompositionMode",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "type",
				"isDefault": false
			}
		],
		"NavigationInterceptor": [
			{
				"name": "NavigationInterceptor",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "type",
				"isDefault": false
			}
		],
		"withAuthGuard": [
			{
				"name": "withAuthGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"withRoleGuard": [
			{
				"name": "withRoleGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"withPermissionGuard": [
			{
				"name": "withPermissionGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"withDataGuard": [
			{
				"name": "withDataGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"withFeatureGuard": [
			{
				"name": "withFeatureGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"composeGuards": [
			{
				"name": "composeGuards",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"checkPermission": [
			{
				"name": "checkPermission",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"checkAnyPermission": [
			{
				"name": "checkAnyPermission",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"checkAllPermissions": [
			{
				"name": "checkAllPermissions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"checkRolePermission": [
			{
				"name": "checkRolePermission",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"hasAccessToRoute": [
			{
				"name": "hasAccessToRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"EnsureIncidentReportLoaded": [
			{
				"name": "EnsureIncidentReportLoaded",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"EnsureStudentLoaded": [
			{
				"name": "EnsureStudentLoaded",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"EnsureMedicationLoaded": [
			{
				"name": "EnsureMedicationLoaded",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"EnsureEntityLoaded": [
			{
				"name": "EnsureEntityLoaded",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"useUnsavedChanges": [
			{
				"name": "useUnsavedChanges",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"UnsavedChangesPrompt": [
			{
				"name": "UnsavedChangesPrompt",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"navigationInterceptorManager": [
			{
				"name": "navigationInterceptorManager",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"RedirectToLogin": [
			{
				"name": "RedirectToLogin",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"ShowAccessDenied": [
			{
				"name": "ShowAccessDenied",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"ShowDataLoadingError": [
			{
				"name": "ShowDataLoadingError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"ShowMaintenanceMode": [
			{
				"name": "ShowMaintenanceMode",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"components": [
			{
				"name": "components",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\index.ts",
				"isDefault": false
			}
		],
		"navigationGuards": [
			{
				"name": "navigationGuards",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.tsx",
				"type": "const",
				"isDefault": true
			}
		],
		"{ ComponentType": [
			{
				"name": "{ ComponentType",
				"module": "react",
				"isDefault": true
			}
		],
		"Location": [
			{
				"name": "Location",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"NavigateFunction": [
			{
				"name": "NavigateFunction",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"BrowserRouter": [
			{
				"name": "BrowserRouter",
				"module": "react-router-dom",
				"isDefault": false
			}
		],
		"ProtectedDashboard": [
			{
				"name": "ProtectedDashboard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"AdminSettings": [
			{
				"name": "AdminSettings",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"MedicationManagement": [
			{
				"name": "MedicationManagement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"StudentEdit": [
			{
				"name": "StudentEdit",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"HealthRecordsAdmin": [
			{
				"name": "HealthRecordsAdmin",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"StudentDetail": [
			{
				"name": "StudentDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"IncidentReportEdit": [
			{
				"name": "IncidentReportEdit",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"BetaAnalytics": [
			{
				"name": "BetaAnalytics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"StudentFormPage": [
			{
				"name": "StudentFormPage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentProfile": [
			{
				"name": "StudentProfile",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"HealthRecordDetail": [
			{
				"name": "HealthRecordDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"setupNavigationInterceptors": [
			{
				"name": "setupNavigationInterceptors",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"routeMetadata": [
			{
				"name": "routeMetadata",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"useRouteAccess": [
			{
				"name": "useRouteAccess",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentActionsMenu": [
			{
				"name": "StudentActionsMenu",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"ComplexHealthManagement": [
			{
				"name": "ComplexHealthManagement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"EmergencyDispatch": [
			{
				"name": "EmergencyDispatch",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"createConditionalGuard": [
			{
				"name": "createConditionalGuard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\navigationGuards.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"studentKeys": [
			{
				"name": "studentKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"UseStudentsReturn": [
			{
				"name": "UseStudentsReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UseStudentDetailReturn": [
			{
				"name": "UseStudentDetailReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UseStudentSearchReturn": [
			{
				"name": "UseStudentSearchReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentStats": [
			{
				"name": "StudentStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"useStudentDetail": [
			{
				"name": "useStudentDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useStudentSearch": [
			{
				"name": "useStudentSearch",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useAssignedStudents": [
			{
				"name": "useAssignedStudents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useStudentStats": [
			{
				"name": "useStudentStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useCreateStudent": [
			{
				"name": "useCreateStudent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useUpdateStudent": [
			{
				"name": "useUpdateStudent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useDeleteStudent": [
			{
				"name": "useDeleteStudent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useBulkImportStudents": [
			{
				"name": "useBulkImportStudents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useExportStudents": [
			{
				"name": "useExportStudents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useStudentCacheInvalidation": [
			{
				"name": "useStudentCacheInvalidation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useStudentPrefetch": [
			{
				"name": "useStudentPrefetch",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"UseStudentsReturn_Legacy": [
			{
				"name": "UseStudentsReturn_Legacy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useStudents.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"type { PaginatedResponse": [
			{
				"name": "type { PaginatedResponse",
				"module": "@/services/utils/apiUtils",
				"isDefault": true
			}
		],
		"NurseSettings": [
			{
				"name": "NurseSettings",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ExampleRoutes": [
			{
				"name": "ExampleRoutes",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"ProtectedStudentDetail": [
			{
				"name": "ProtectedStudentDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateIncidentReport": [
			{
				"name": "CreateIncidentReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"EditIncidentReport": [
			{
				"name": "EditIncidentReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"NewAppRoutes": [
			{
				"name": "NewAppRoutes",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentActionButtons": [
			{
				"name": "StudentActionButtons",
				"path": "c:\\temp\\white-cross\\frontend\\src\\guards\\integration.example.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"SearchExample": [
			{
				"name": "SearchExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"MultiSelectExample": [
			{
				"name": "MultiSelectExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"DateRangeExample": [
			{
				"name": "DateRangeExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentListExample": [
			{
				"name": "StudentListExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StudentDetailsExample": [
			{
				"name": "StudentDetailsExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"PaginatedListExample": [
			{
				"name": "PaginatedListExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"SortableTableExample": [
			{
				"name": "SortableTableExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"CompleteStudentPageExample": [
			{
				"name": "CompleteStudentPageExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useRouteState.examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"{ useMemo": [
			{
				"name": "{ useMemo",
				"module": "react",
				"isDefault": true
			}
		],
		"UseReminderManagementReturn": [
			{
				"name": "UseReminderManagementReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useReminderManagement.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"useReminderManagement": [
			{
				"name": "useReminderManagement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useReminderManagement.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useOptimisticStudentCreate": [
			{
				"name": "useOptimisticStudentCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticStudents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticStudentUpdate": [
			{
				"name": "useOptimisticStudentUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticStudents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticStudentDeactivate": [
			{
				"name": "useOptimisticStudentDeactivate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticStudents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticStudentReactivate": [
			{
				"name": "useOptimisticStudentReactivate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticStudents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticStudentTransfer": [
			{
				"name": "useOptimisticStudentTransfer",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticStudents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticStudentPermanentDelete": [
			{
				"name": "useOptimisticStudentPermanentDelete",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticStudents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticStudents": [
			{
				"name": "useOptimisticStudents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticStudents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"UseMutationOptions": [
			{
				"name": "UseMutationOptions",
				"module": "@tanstack/react-query",
				"isDefault": false
			}
		],
		"medicationKeys": [
			{
				"name": "medicationKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useOptimisticMedicationCreate": [
			{
				"name": "useOptimisticMedicationCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticMedicationUpdate": [
			{
				"name": "useOptimisticMedicationUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticMedicationDelete": [
			{
				"name": "useOptimisticMedicationDelete",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticPrescriptionCreate": [
			{
				"name": "useOptimisticPrescriptionCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticPrescriptionDeactivate": [
			{
				"name": "useOptimisticPrescriptionDeactivate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticMedicationAdministration": [
			{
				"name": "useOptimisticMedicationAdministration",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticInventoryAdd": [
			{
				"name": "useOptimisticInventoryAdd",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticInventoryUpdate": [
			{
				"name": "useOptimisticInventoryUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticAdverseReactionReport": [
			{
				"name": "useOptimisticAdverseReactionReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticMedications": [
			{
				"name": "useOptimisticMedications",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticMedications.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"incidentKeys": [
			{
				"name": "incidentKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useOptimisticIncidentCreate": [
			{
				"name": "useOptimisticIncidentCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticIncidentUpdate": [
			{
				"name": "useOptimisticIncidentUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticIncidentDelete": [
			{
				"name": "useOptimisticIncidentDelete",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticWitnessCreate": [
			{
				"name": "useOptimisticWitnessCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticWitnessUpdate": [
			{
				"name": "useOptimisticWitnessUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticWitnessVerify": [
			{
				"name": "useOptimisticWitnessVerify",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticFollowUpCreate": [
			{
				"name": "useOptimisticFollowUpCreate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticFollowUpUpdate": [
			{
				"name": "useOptimisticFollowUpUpdate",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticFollowUpComplete": [
			{
				"name": "useOptimisticFollowUpComplete",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticIncidents": [
			{
				"name": "useOptimisticIncidents",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticWitnessStatements": [
			{
				"name": "useOptimisticWitnessStatements",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useOptimisticFollowUpActions": [
			{
				"name": "useOptimisticFollowUpActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useOptimisticIncidents.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useMedicationToast": [
			{
				"name": "useMedicationToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useMedicationToast.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useMedicationFormValidation": [
			{
				"name": "useMedicationFormValidation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useMedicationFormValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AdministrationData": [
			{
				"name": "AdministrationData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useMedicationAdministration.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateInventoryData": [
			{
				"name": "UpdateInventoryData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventoryManagement.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UseInventoryManagementReturn": [
			{
				"name": "UseInventoryManagementReturn",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventoryManagement.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"useInventoryManagement": [
			{
				"name": "useInventoryManagement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventoryManagement.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useInventory": [
			{
				"name": "useInventory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useInventoryItem": [
			{
				"name": "useInventoryItem",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useInventoryAlerts": [
			{
				"name": "useInventoryAlerts",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useInventoryStats": [
			{
				"name": "useInventoryStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useStockHistory": [
			{
				"name": "useStockHistory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useStockAdjustment": [
			{
				"name": "useStockAdjustment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useInventory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthRecordsData": [
			{
				"name": "useHealthRecordsData",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecordsData.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"healthRecordKeys": [
			{
				"name": "healthRecordKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useHealthRecordsCleanup": [
			{
				"name": "useHealthRecordsCleanup",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthRecords": [
			{
				"name": "useHealthRecords",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthRecordDetail": [
			{
				"name": "useHealthRecordDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthRecordTimeline": [
			{
				"name": "useHealthRecordTimeline",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthRecordSummary": [
			{
				"name": "useHealthRecordSummary",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthRecordSearch": [
			{
				"name": "useHealthRecordSearch",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthRecordsByType": [
			{
				"name": "useHealthRecordsByType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateHealthRecord": [
			{
				"name": "useCreateHealthRecord",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateHealthRecord": [
			{
				"name": "useUpdateHealthRecord",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteHealthRecord": [
			{
				"name": "useDeleteHealthRecord",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAllergies": [
			{
				"name": "useAllergies",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAllergyDetail": [
			{
				"name": "useAllergyDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCriticalAllergies": [
			{
				"name": "useCriticalAllergies",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAllergyContraindications": [
			{
				"name": "useAllergyContraindications",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAllergyStatistics": [
			{
				"name": "useAllergyStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateAllergy": [
			{
				"name": "useCreateAllergy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateAllergy": [
			{
				"name": "useUpdateAllergy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteAllergy": [
			{
				"name": "useDeleteAllergy",
				"module": "@/hooks/useHealthRecords",
				"isDefault": false
			},
			{
				"name": "useDeleteAllergy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVerifyAllergy": [
			{
				"name": "useVerifyAllergy",
				"module": "@/hooks/useHealthRecords",
				"isDefault": false
			},
			{
				"name": "useVerifyAllergy",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useChronicConditions": [
			{
				"name": "useChronicConditions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useConditionDetail": [
			{
				"name": "useConditionDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useActiveConditions": [
			{
				"name": "useActiveConditions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useConditionsNeedingReview": [
			{
				"name": "useConditionsNeedingReview",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useConditionStatistics": [
			{
				"name": "useConditionStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateCondition": [
			{
				"name": "useCreateCondition",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateCondition": [
			{
				"name": "useUpdateCondition",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteCondition": [
			{
				"name": "useDeleteCondition",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateConditionStatus": [
			{
				"name": "useUpdateConditionStatus",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVaccinations": [
			{
				"name": "useVaccinations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVaccinationDetail": [
			{
				"name": "useVaccinationDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVaccinationCompliance": [
			{
				"name": "useVaccinationCompliance",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpcomingVaccinations": [
			{
				"name": "useUpcomingVaccinations",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVaccinationReport": [
			{
				"name": "useVaccinationReport",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVaccinationStatistics": [
			{
				"name": "useVaccinationStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateVaccination": [
			{
				"name": "useCreateVaccination",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateVaccination": [
			{
				"name": "useUpdateVaccination",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteVaccination": [
			{
				"name": "useDeleteVaccination",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useScreenings": [
			{
				"name": "useScreenings",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useScreeningDetail": [
			{
				"name": "useScreeningDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useScreeningsDue": [
			{
				"name": "useScreeningsDue",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useScreeningStatistics": [
			{
				"name": "useScreeningStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateScreening": [
			{
				"name": "useCreateScreening",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateScreening": [
			{
				"name": "useUpdateScreening",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteScreening": [
			{
				"name": "useDeleteScreening",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useGrowthMeasurements": [
			{
				"name": "useGrowthMeasurements",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useGrowthMeasurementDetail": [
			{
				"name": "useGrowthMeasurementDetail",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useGrowthTrends": [
			{
				"name": "useGrowthTrends",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useGrowthConcerns": [
			{
				"name": "useGrowthConcerns",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useGrowthPercentiles": [
			{
				"name": "useGrowthPercentiles",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateGrowthMeasurement": [
			{
				"name": "useCreateGrowthMeasurement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateGrowthMeasurement": [
			{
				"name": "useUpdateGrowthMeasurement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteGrowthMeasurement": [
			{
				"name": "useDeleteGrowthMeasurement",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVitalSigns": [
			{
				"name": "useVitalSigns",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useLatestVitals": [
			{
				"name": "useLatestVitals",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVitalTrends": [
			{
				"name": "useVitalTrends",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateVitalSigns": [
			{
				"name": "useCreateVitalSigns",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateVitalSigns": [
			{
				"name": "useUpdateVitalSigns",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteVitalSigns": [
			{
				"name": "useDeleteVitalSigns",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useHealthSummary": [
			{
				"name": "useHealthSummary",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useExportHealthRecords": [
			{
				"name": "useExportHealthRecords",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useImportHealthRecords": [
			{
				"name": "useImportHealthRecords",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useSearchHealthRecords": [
			{
				"name": "useSearchHealthRecords",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"usePaginatedHealthRecords": [
			{
				"name": "usePaginatedHealthRecords",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useRecentVitals": [
			{
				"name": "useRecentVitals",
				"module": "@/hooks/useHealthRecords",
				"isDefault": false
			},
			{
				"name": "useRecentVitals",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useRecordVitals": [
			{
				"name": "useRecordVitals",
				"module": "@/hooks/useHealthRecords",
				"isDefault": false
			},
			{
				"name": "useRecordVitals",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useExportHealthHistory": [
			{
				"name": "useExportHealthHistory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useFormValidation": [
			{
				"name": "useFormValidation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useFormValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateEmergencyContactRequest": [
			{
				"name": "CreateEmergencyContactRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateEmergencyContactRequest": [
			{
				"name": "UpdateEmergencyContactRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"NotificationRequest": [
			{
				"name": "NotificationRequest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VerificationMethod": [
			{
				"name": "VerificationMethod",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"emergencyContactsKeys": [
			{
				"name": "emergencyContactsKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useEmergencyContacts": [
			{
				"name": "useEmergencyContacts",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useEmergencyContactStatistics": [
			{
				"name": "useEmergencyContactStatistics",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateEmergencyContact": [
			{
				"name": "useCreateEmergencyContact",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateEmergencyContact": [
			{
				"name": "useUpdateEmergencyContact",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteEmergencyContact": [
			{
				"name": "useDeleteEmergencyContact",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useNotifyStudentContacts": [
			{
				"name": "useNotifyStudentContacts",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useNotifyContact": [
			{
				"name": "useNotifyContact",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVerifyContact": [
			{
				"name": "useVerifyContact",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useEmergencyContacts.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"CommunicationChannel": [
			{
				"name": "CommunicationChannel",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PriorityLevel": [
			{
				"name": "PriorityLevel",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"communicationOptionsKeys": [
			{
				"name": "communicationOptionsKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useCommunicationOptions": [
			{
				"name": "useCommunicationOptions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCommunicationChannels": [
			{
				"name": "useCommunicationChannels",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useNotificationTypes": [
			{
				"name": "useNotificationTypes",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"usePriorityLevels": [
			{
				"name": "usePriorityLevels",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useVerificationMethods": [
			{
				"name": "useVerificationMethods",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useCommunicationOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"appointmentKeys": [
			{
				"name": "appointmentKeys",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"useAppointments": [
			{
				"name": "useAppointments",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpcomingAppointments": [
			{
				"name": "useUpcomingAppointments",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAppointmentStats": [
			{
				"name": "useAppointmentStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useWaitlist": [
			{
				"name": "useWaitlist",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAvailability": [
			{
				"name": "useAvailability",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useNurseAvailability": [
			{
				"name": "useNurseAvailability",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateAppointment": [
			{
				"name": "useCreateAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateAppointment": [
			{
				"name": "useUpdateAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCancelAppointment": [
			{
				"name": "useCancelAppointment",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useMarkNoShow": [
			{
				"name": "useMarkNoShow",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useCreateRecurring": [
			{
				"name": "useCreateRecurring",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAddToWaitlist": [
			{
				"name": "useAddToWaitlist",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useRemoveFromWaitlist": [
			{
				"name": "useRemoveFromWaitlist",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useSetAvailability": [
			{
				"name": "useSetAvailability",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useUpdateAvailability": [
			{
				"name": "useUpdateAvailability",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useDeleteAvailability": [
			{
				"name": "useDeleteAvailability",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useExportCalendar": [
			{
				"name": "useExportCalendar",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useAppointmentDashboard": [
			{
				"name": "useAppointmentDashboard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useAppointments.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"useToast": [
			{
				"name": "useToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\hooks\\useToast.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"App": [
			{
				"name": "App",
				"path": "c:\\temp\\white-cross\\frontend\\src\\App.tsx",
				"isDefault": true
			}
		],
		"QueryClientProvider": [
			{
				"name": "QueryClientProvider",
				"module": "@tanstack/react-query",
				"isDefault": false
			}
		],
		"ReactQueryDevtools": [
			{
				"name": "ReactQueryDevtools",
				"module": "@tanstack/react-query-devtools",
				"isDefault": false
			}
		],
		"Toaster": [
			{
				"name": "Toaster",
				"module": "react-hot-toast",
				"isDefault": false
			}
		],
		"Provider": [
			{
				"name": "Provider",
				"module": "react-redux",
				"isDefault": false
			}
		],
		"StudentSelector": [
			{
				"name": "StudentSelector",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\StudentSelector.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ChevronDown": [
			{
				"name": "ChevronDown",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"StudentHealthRecord": [
			{
				"name": "StudentHealthRecord",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\StudentHealthRecord.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"StudentFormFields": [
			{
				"name": "StudentFormFields",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\students\\modals\\StudentFormFields.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"UsersTab": [
			{
				"name": "UsersTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\UsersTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"TrainingTab": [
			{
				"name": "TrainingTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\TrainingTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"BookOpen": [
			{
				"name": "BookOpen",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"SchoolsTab": [
			{
				"name": "SchoolsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\SchoolsTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"OverviewTab": [
			{
				"name": "OverviewTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\OverviewTab.tsx",
				"type": "const",
				"isDefault": true
			}
		],
		"MonitoringTab": [
			{
				"name": "MonitoringTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\MonitoringTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Cpu": [
			{
				"name": "Cpu",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"HardDrive": [
			{
				"name": "HardDrive",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Database": [
			{
				"name": "Database",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Zap": [
			{
				"name": "Zap",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Server": [
			{
				"name": "Server",
				"module": "@hapi/hapi",
				"isDefault": false
			},
			{
				"name": "Server",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"LicensesTab": [
			{
				"name": "LicensesTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\LicensesTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"FileKey": [
			{
				"name": "FileKey",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"IntegrationsTab": [
			{
				"name": "IntegrationsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\IntegrationsTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"IntegrationModal": [
			{
				"name": "IntegrationModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\IntegrationModal.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"DistrictsTab": [
			{
				"name": "DistrictsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\DistrictsTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"ConfigurationTab": [
			{
				"name": "ConfigurationTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\ConfigurationTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"BackupsTab": [
			{
				"name": "BackupsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\BackupsTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"AuditLogsTab": [
			{
				"name": "AuditLogsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\settings\\tabs\\AuditLogsTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"SessionWarning": [
			{
				"name": "SessionWarning",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\SessionWarning.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"SessionExpiredModal": [
			{
				"name": "SessionExpiredModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\modals\\SessionExpiredModal.tsx",
				"type": "const",
				"isDefault": true
			}
		],
		"ReduxTest": [
			{
				"name": "ReduxTest",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\ReduxTest.tsx",
				"isDefault": true
			}
		],
		"VALIDATION_RULES": [
			{
				"name": "VALIDATION_RULES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FIELD_LIMITS": [
			{
				"name": "FIELD_LIMITS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"VALIDATION_MESSAGES": [
			{
				"name": "VALIDATION_MESSAGES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FORM_SCHEMAS": [
			{
				"name": "FORM_SCHEMAS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CUSTOM_VALIDATORS": [
			{
				"name": "CUSTOM_VALIDATORS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateField": [
			{
				"name": "validateField",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateForm": [
			{
				"name": "validateForm",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HealthRecordModal": [
			{
				"name": "HealthRecordModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\modals\\HealthRecordModal.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"BasicBackButtonExample": [
			{
				"name": "BasicBackButtonExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"IconBackButtonExample": [
			{
				"name": "IconBackButtonExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"UnsavedChangesBackButtonExample": [
			{
				"name": "UnsavedChangesBackButtonExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"BasicBreadcrumbsExample": [
			{
				"name": "BasicBreadcrumbsExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"CustomBreadcrumbsExample": [
			{
				"name": "CustomBreadcrumbsExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"NavigationStateExample": [
			{
				"name": "NavigationStateExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"PermissionCheckingExample": [
			{
				"name": "PermissionCheckingExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"FilteredNavigationExample": [
			{
				"name": "FilteredNavigationExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"CompletePageExample": [
			{
				"name": "CompletePageExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"NavigationGuardsExample": [
			{
				"name": "NavigationGuardsExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\navigation\\examples.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"COMPONENT_SIZES": [
			{
				"name": "COMPONENT_SIZES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"BUTTON_VARIANTS": [
			{
				"name": "BUTTON_VARIANTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"BUTTON_SIZES": [
			{
				"name": "BUTTON_SIZES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FIELD_VARIANTS": [
			{
				"name": "FIELD_VARIANTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HEALTHCARE_COLORS": [
			{
				"name": "HEALTHCARE_COLORS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TABLE_CONFIG": [
			{
				"name": "TABLE_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MODAL_SIZES": [
			{
				"name": "MODAL_SIZES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DRAWER_POSITIONS": [
			{
				"name": "DRAWER_POSITIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ANIMATION_DURATIONS": [
			{
				"name": "ANIMATION_DURATIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"Z_INDEX": [
			{
				"name": "Z_INDEX",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FORM_LAYOUT": [
			{
				"name": "FORM_LAYOUT",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FIELD_WIDTHS": [
			{
				"name": "FIELD_WIDTHS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SPACING": [
			{
				"name": "SPACING",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"BORDER_RADIUS": [
			{
				"name": "BORDER_RADIUS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SHADOWS": [
			{
				"name": "SHADOWS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TYPOGRAPHY": [
			{
				"name": "TYPOGRAPHY",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"LOADING_STATES": [
			{
				"name": "LOADING_STATES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SPINNER_SIZES": [
			{
				"name": "SPINNER_SIZES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TOAST_POSITIONS": [
			{
				"name": "TOAST_POSITIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TOAST_TYPES": [
			{
				"name": "TOAST_TYPES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"BADGE_VARIANTS": [
			{
				"name": "BADGE_VARIANTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ICON_SIZES": [
			{
				"name": "ICON_SIZES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HEALTHCARE_ICONS": [
			{
				"name": "HEALTHCARE_ICONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FIELD_TYPES": [
			{
				"name": "FIELD_TYPES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FORM_GRID": [
			{
				"name": "FORM_GRID",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"BREAKPOINTS": [
			{
				"name": "BREAKPOINTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"A11Y": [
			{
				"name": "A11Y",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"THEME": [
			{
				"name": "THEME",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"UI_CONSTANTS": [
			{
				"name": "UI_CONSTANTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\ui.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"LoadingSpinner": [
			{
				"name": "LoadingSpinner",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\LoadingSpinner.tsx",
				"type": "const",
				"isDefault": true
			}
		],
		"Layout": [
			{
				"name": "Layout",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\Layout.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"InventoryVendorsTab": [
			{
				"name": "InventoryVendorsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\inventory\\tabs\\InventoryVendorsTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"InventoryItemsTab": [
			{
				"name": "InventoryItemsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\inventory\\tabs\\InventoryItemsTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"InventoryBudgetTab": [
			{
				"name": "InventoryBudgetTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\inventory\\tabs\\InventoryBudgetTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"InventoryAnalyticsTab": [
			{
				"name": "InventoryAnalyticsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\inventory\\tabs\\InventoryAnalyticsTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Wrench": [
			{
				"name": "Wrench",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"Edit3": [
			{
				"name": "Edit3",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"RemindersTab": [
			{
				"name": "RemindersTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\RemindersTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"InventoryStats": [
			{
				"name": "InventoryStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\inventory\\InventoryStats.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"MedicationsTab": [
			{
				"name": "MedicationsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\MedicationsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"MedicationFormModal": [
			{
				"name": "MedicationFormModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\MedicationFormModal.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"AdverseReactionsTab": [
			{
				"name": "AdverseReactionsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\medications\\AdverseReactionsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"InventoryOrdersTab": [
			{
				"name": "InventoryOrdersTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\inventory\\tabs\\InventoryOrdersTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"UserPreferencesExample": [
			{
				"name": "UserPreferencesExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\examples\\StateSyncExample.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"FilterPersistenceExample": [
			{
				"name": "FilterPersistenceExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\examples\\StateSyncExample.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StorageMonitoringExample": [
			{
				"name": "StorageMonitoringExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\examples\\StateSyncExample.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"CrossTabSyncExample": [
			{
				"name": "CrossTabSyncExample",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\examples\\StateSyncExample.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"StateSyncExamplePage": [
			{
				"name": "StateSyncExamplePage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\examples\\StateSyncExample.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"TabNavigation": [
			{
				"name": "TabNavigation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\TabNavigation.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"type { TabType": [
			{
				"name": "type { TabType",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"StatsCard": [
			{
				"name": "StatsCard",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\StatsCard.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"SearchAndFilter": [
			{
				"name": "SearchAndFilter",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\shared\\SearchAndFilter.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ActionButtons": [
			{
				"name": "ActionButtons",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\shared\\ActionButtons.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"VaccinationModal": [
			{
				"name": "VaccinationModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\modals\\VaccinationModal.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"type { Vaccination": [
			{
				"name": "type { Vaccination",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"MeasurementModal": [
			{
				"name": "MeasurementModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\modals\\MeasurementModal.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"type { GrowthMeasurement": [
			{
				"name": "type { GrowthMeasurement",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"DetailsModal": [
			{
				"name": "DetailsModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\modals\\DetailsModal.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ConfirmationModal": [
			{
				"name": "ConfirmationModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\modals\\ConfirmationModal.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ConditionModal": [
			{
				"name": "ConditionModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\modals\\ConditionModal.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"type { ChronicCondition": [
			{
				"name": "type { ChronicCondition",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"SEVERITY_LEVELS": [
			{
				"name": "SEVERITY_LEVELS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "SEVERITY_LEVELS",
				"module": "@/constants/healthRecords",
				"isDefault": false
			}
		],
		"CONDITION_STATUS_OPTIONS": [
			{
				"name": "CONDITION_STATUS_OPTIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			},
			{
				"name": "CONDITION_STATUS_OPTIONS",
				"module": "@/constants/healthRecords",
				"isDefault": false
			}
		],
		"CarePlanModal": [
			{
				"name": "CarePlanModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\modals\\CarePlanModal.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"AllergyModal": [
			{
				"name": "AllergyModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\modals\\AllergyModal.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"type { Allergy": [
			{
				"name": "type { Allergy",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"HealthRecordsErrorBoundary": [
			{
				"name": "HealthRecordsErrorBoundary",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\HealthRecordsErrorBoundary.tsx",
				"type": "class",
				"isDefault": false
			}
		],
		"HealthRecordsErrorBoundaryWrapper": [
			{
				"name": "HealthRecordsErrorBoundaryWrapper",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\HealthRecordsErrorBoundary.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"withHealthRecordsErrorBoundary": [
			{
				"name": "withHealthRecordsErrorBoundary",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\HealthRecordsErrorBoundary.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"{ Component": [
			{
				"name": "{ Component",
				"module": "react",
				"isDefault": true
			}
		],
		"ErrorInfo": [
			{
				"name": "ErrorInfo",
				"module": "react",
				"isDefault": true
			}
		],
		"Home": [
			{
				"name": "Home",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"ErrorBoundary": [
			{
				"name": "ErrorBoundary",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\ErrorBoundary.tsx",
				"type": "class",
				"isDefault": true
			}
		],
		"useErrorHandler": [
			{
				"name": "useErrorHandler",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\ErrorBoundary.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"withErrorBoundary": [
			{
				"name": "withErrorBoundary",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\ErrorBoundary.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"CommunicationTemplatesTab": [
			{
				"name": "CommunicationTemplatesTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\communication\\tabs\\CommunicationTemplatesTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"CommunicationHistoryTab": [
			{
				"name": "CommunicationHistoryTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\communication\\tabs\\CommunicationHistoryTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"CommunicationEmergencyTab": [
			{
				"name": "CommunicationEmergencyTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\communication\\tabs\\CommunicationEmergencyTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"Smartphone": [
			{
				"name": "Smartphone",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"CommunicationComposeTab": [
			{
				"name": "CommunicationComposeTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\communication\\tabs\\CommunicationComposeTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"CommunicationBroadcastTab": [
			{
				"name": "CommunicationBroadcastTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\communication\\tabs\\CommunicationBroadcastTab.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"CommunicationStats": [
			{
				"name": "CommunicationStats",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\communication\\CommunicationStats.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"PUBLIC_ROUTES": [
			{
				"name": "PUBLIC_ROUTES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PROTECTED_ROUTES": [
			{
				"name": "PROTECTED_ROUTES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildRoute": [
			{
				"name": "buildRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"buildStudentRoute": [
			{
				"name": "buildStudentRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildStudentEditRoute": [
			{
				"name": "buildStudentEditRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildMedicationRoute": [
			{
				"name": "buildMedicationRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildMedicationAdministerRoute": [
			{
				"name": "buildMedicationAdministerRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildHealthRecordRoute": [
			{
				"name": "buildHealthRecordRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildHealthRecordsStudentRoute": [
			{
				"name": "buildHealthRecordsStudentRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildAppointmentRoute": [
			{
				"name": "buildAppointmentRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildIncidentReportRoute": [
			{
				"name": "buildIncidentReportRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildIncidentReportEditRoute": [
			{
				"name": "buildIncidentReportEditRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildIncidentReportWitnessesRoute": [
			{
				"name": "buildIncidentReportWitnessesRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildIncidentReportActionsRoute": [
			{
				"name": "buildIncidentReportActionsRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildIncidentReportEvidenceRoute": [
			{
				"name": "buildIncidentReportEvidenceRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildIncidentReportTimelineRoute": [
			{
				"name": "buildIncidentReportTimelineRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"route": [
			{
				"name": "route",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"isDefault": false
			}
		],
		"buildIncidentReportExportRoute": [
			{
				"name": "buildIncidentReportExportRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildEmergencyContactsStudentRoute": [
			{
				"name": "buildEmergencyContactsStudentRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildDocumentRoute": [
			{
				"name": "buildDocumentRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"buildDocumentsStudentRoute": [
			{
				"name": "buildDocumentsStudentRoute",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ROUTE_PERMISSIONS": [
			{
				"name": "ROUTE_PERMISSIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"NAVIGATION_ITEMS": [
			{
				"name": "NAVIGATION_ITEMS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ROUTES": [
			{
				"name": "ROUTES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\routes.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"Breadcrumbs": [
			{
				"name": "Breadcrumbs",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\Breadcrumbs.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"BreadcrumbItemComponent": [
			{
				"name": "BreadcrumbItemComponent",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\Breadcrumbs.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"MEDICATION_TABS": [
			{
				"name": "MEDICATION_TABS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DOSAGE_FORMS": [
			{
				"name": "DOSAGE_FORMS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ADMINISTRATION_ROUTES": [
			{
				"name": "ADMINISTRATION_ROUTES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MEDICATION_STATUSES": [
			{
				"name": "MEDICATION_STATUSES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"INVENTORY_STATUSES": [
			{
				"name": "INVENTORY_STATUSES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"REMINDER_INTERVALS": [
			{
				"name": "REMINDER_INTERVALS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MEDICATION_UNITS": [
			{
				"name": "MEDICATION_UNITS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PRIORITY_LEVELS": [
			{
				"name": "PRIORITY_LEVELS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"STORAGE_CONDITIONS": [
			{
				"name": "STORAGE_CONDITIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"COMMON_ALLERGIES": [
			{
				"name": "COMMON_ALLERGIES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AGE_GROUPS": [
			{
				"name": "AGE_GROUPS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PAGINATION_DEFAULTS": [
			{
				"name": "PAGINATION_DEFAULTS",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SEARCH_CONFIG": [
			{
				"name": "SEARCH_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DATE_FORMATS": [
			{
				"name": "DATE_FORMATS",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"STOCK_THRESHOLDS": [
			{
				"name": "STOCK_THRESHOLDS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"EXPIRATION_WARNINGS": [
			{
				"name": "EXPIRATION_WARNINGS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"BackendConnectionError": [
			{
				"name": "BackendConnectionError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\BackendConnectionError.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"ExternalLink": [
			{
				"name": "ExternalLink",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"constants": [
			{
				"name": "constants",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\index.ts",
				"isDefault": false
			}
		],
		"CONSTANTS": [
			{
				"name": "CONSTANTS",
				"path": "c:\\temp\\white-cross\\backend\\dist\\constants\\index.d.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"BackButton": [
			{
				"name": "BackButton",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\BackButton.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"IconBackButton": [
			{
				"name": "IconBackButton",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\BackButton.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"BackButtonWithConfirmation": [
			{
				"name": "BackButtonWithConfirmation",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\BackButton.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"RECORD_TYPES": [
			{
				"name": "RECORD_TYPES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HEALTH_TABS": [
			{
				"name": "HEALTH_TABS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"VACCINATION_PRIORITIES": [
			{
				"name": "VACCINATION_PRIORITIES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"EXPORT_FORMATS": [
			{
				"name": "EXPORT_FORMATS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"REPORT_TYPES": [
			{
				"name": "REPORT_TYPES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"REMINDER_METHODS": [
			{
				"name": "REMINDER_METHODS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"GROWTH_CHART_TYPES": [
			{
				"name": "GROWTH_CHART_TYPES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\healthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RecordType": [
			{
				"name": "RecordType",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"AppointmentFormModal": [
			{
				"name": "AppointmentFormModal",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\appointments\\AppointmentFormModal.tsx",
				"type": "function",
				"isDefault": true
			}
		],
		"ERROR_CODES": [
			{
				"name": "ERROR_CODES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ERROR_MESSAGES": [
			{
				"name": "ERROR_MESSAGES",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"USER_MESSAGES": [
			{
				"name": "USER_MESSAGES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ERROR_TITLES": [
			{
				"name": "ERROR_TITLES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HTTP_STATUS_MAPPING": [
			{
				"name": "HTTP_STATUS_MAPPING",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FIELD_VALIDATION_MESSAGES": [
			{
				"name": "FIELD_VALIDATION_MESSAGES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HEALTHCARE_ERROR_MESSAGES": [
			{
				"name": "HEALTHCARE_ERROR_MESSAGES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ERROR_SEVERITY": [
			{
				"name": "ERROR_SEVERITY",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ERROR_CATEGORIES": [
			{
				"name": "ERROR_CATEGORIES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getErrorMessage": [
			{
				"name": "getErrorMessage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getUserMessage": [
			{
				"name": "getUserMessage",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getErrorTitle": [
			{
				"name": "getErrorTitle",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getErrorSeverity": [
			{
				"name": "getErrorSeverity",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getErrorCategory": [
			{
				"name": "getErrorCategory",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\errors.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PAGINATION_CONFIG": [
			{
				"name": "PAGINATION_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DATE_CONFIG": [
			{
				"name": "DATE_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FILE_CONFIG": [
			{
				"name": "FILE_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"VALIDATION_CONFIG": [
			{
				"name": "VALIDATION_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"UI_CONFIG": [
			{
				"name": "UI_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HEALTHCARE_CONFIG": [
			{
				"name": "HEALTHCARE_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SECURITY_CONFIG": [
			{
				"name": "SECURITY_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PERFORMANCE_CONFIG": [
			{
				"name": "PERFORMANCE_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DATE_CALCULATIONS": [
			{
				"name": "DATE_CALCULATIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TOAST_CONFIG": [
			{
				"name": "TOAST_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MODAL_CONFIG": [
			{
				"name": "MODAL_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"APP_CONFIG": [
			{
				"name": "APP_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\config.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"APPOINTMENT_TYPE_OPTIONS": [
			{
				"name": "APPOINTMENT_TYPE_OPTIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"APPOINTMENT_STATUS_OPTIONS": [
			{
				"name": "APPOINTMENT_STATUS_OPTIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"WAITLIST_PRIORITY_OPTIONS": [
			{
				"name": "WAITLIST_PRIORITY_OPTIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DURATION_OPTIONS": [
			{
				"name": "DURATION_OPTIONS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getAppointmentTypeLabel": [
			{
				"name": "getAppointmentTypeLabel",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAppointmentStatusLabel": [
			{
				"name": "getAppointmentStatusLabel",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getStatusBadgeClass": [
			{
				"name": "getStatusBadgeClass",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getPriorityBadgeClass": [
			{
				"name": "getPriorityBadgeClass",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\appointmentOptions.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"type { AppointmentType": [
			{
				"name": "type { AppointmentType",
				"module": "@/types",
				"isDefault": true
			}
		],
		"HTTP_METHODS": [
			{
				"name": "HTTP_METHODS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HTTP_STATUS": [
			{
				"name": "HTTP_STATUS",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CONTENT_TYPES": [
			{
				"name": "CONTENT_TYPES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RESPONSE_TYPES": [
			{
				"name": "RESPONSE_TYPES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"QUERY_PARAMS": [
			{
				"name": "QUERY_PARAMS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DEFAULT_QUERY_VALUES": [
			{
				"name": "DEFAULT_QUERY_VALUES",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"API_HEADERS": [
			{
				"name": "API_HEADERS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RATE_LIMITING": [
			{
				"name": "RATE_LIMITING",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CACHE_CONFIG": [
			{
				"name": "CACHE_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"REQUEST_CONFIG": [
			{
				"name": "REQUEST_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ERROR_RESPONSE": [
			{
				"name": "ERROR_RESPONSE",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SUCCESS_RESPONSE": [
			{
				"name": "SUCCESS_RESPONSE",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PAGINATION_RESPONSE": [
			{
				"name": "PAGINATION_RESPONSE",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"UPLOAD_CONFIG": [
			{
				"name": "UPLOAD_CONFIG",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"API_VERSION": [
			{
				"name": "API_VERSION",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"WS_EVENTS": [
			{
				"name": "WS_EVENTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"WS_CHANNELS": [
			{
				"name": "WS_CHANNELS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"API_CONSTANTS": [
			{
				"name": "API_CONSTANTS",
				"path": "c:\\temp\\white-cross\\frontend\\src\\constants\\api.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"IncidentWitnesses": [
			{
				"name": "IncidentWitnesses",
				"path": "c:\\temp\\white-cross\\frontend\\src\\pages\\IncidentReports\\IncidentWitnesses.tsx",
				"isDefault": true
			}
		],
		"HealthRecordsTestUtils": [
			{
				"name": "HealthRecordsTestUtils",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\support\\health-records-utils.ts",
				"type": "class",
				"isDefault": true
			}
		],
		"OverdueAlert": [
			{
				"name": "OverdueAlert",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ActionFilters": [
			{
				"name": "ActionFilters",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionContextMethods": [
			{
				"name": "FollowUpActionContextMethods",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionContextType": [
			{
				"name": "FollowUpActionContextType",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"FollowUpActionProviderProps": [
			{
				"name": "FollowUpActionProviderProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionProvider": [
			{
				"name": "FollowUpActionProvider",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"AuthProvider": [
			{
				"name": "AuthProvider",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\AuthContext.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"{ createContext": [
			{
				"name": "{ createContext",
				"module": "react",
				"isDefault": true
			}
		],
		"AppWithFollowUpActions": [
			{
				"name": "AppWithFollowUpActions",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\FollowUpActionContext.example.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"WitnessStatementProvider": [
			{
				"name": "WitnessStatementProvider",
				"path": "c:\\temp\\white-cross\\frontend\\src\\contexts\\WitnessStatementContext.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"audit": [
			{
				"name": "audit",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\auditLogging.ts",
				"isDefault": false
			}
		],
		"VitalsTab": [
			{
				"name": "VitalsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\VitalsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"Thermometer": [
			{
				"name": "Thermometer",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"type { User": [
			{
				"name": "type { User",
				"module": "@/types",
				"isDefault": true
			}
		],
		"VaccinationsTab": [
			{
				"name": "VaccinationsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\VaccinationsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ScreeningsTab": [
			{
				"name": "ScreeningsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\ScreeningsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"Ear": [
			{
				"name": "Ear",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"type { Screening": [
			{
				"name": "type { Screening",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"RecordsTab": [
			{
				"name": "RecordsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\RecordsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"Stethoscope": [
			{
				"name": "Stethoscope",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"type { HealthRecord": [
			{
				"name": "type { HealthRecord",
				"module": "@/types/healthRecords",
				"isDefault": true
			}
		],
		"Upload": [
			{
				"name": "Upload",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"GrowthChartsTab": [
			{
				"name": "GrowthChartsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\GrowthChartsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ChronicConditionsTab": [
			{
				"name": "ChronicConditionsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\ChronicConditionsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"AnalyticsTab": [
			{
				"name": "AnalyticsTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\AnalyticsTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"AllergiesTab": [
			{
				"name": "AllergiesTab",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\healthRecords\\tabs\\AllergiesTab.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"MapPin": [
			{
				"name": "MapPin",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"UpdateToastProps": [
			{
				"name": "UpdateToastProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateToastWithRollback": [
			{
				"name": "UpdateToastWithRollback",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ProgressToast": [
			{
				"name": "ProgressToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"showLoadingToast": [
			{
				"name": "showLoadingToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"updateToastSuccess": [
			{
				"name": "updateToastSuccess",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"updateToastError": [
			{
				"name": "updateToastError",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"dismissToast": [
			{
				"name": "dismissToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"showCustomToast": [
			{
				"name": "showCustomToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"showPromiseToast": [
			{
				"name": "showPromiseToast",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\UpdateToast.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"{ Toaster": [
			{
				"name": "{ Toaster",
				"module": "react-hot-toast",
				"isDefault": true
			}
		],
		"Toast": [
			{
				"name": "Toast",
				"module": "react-hot-toast",
				"isDefault": true
			}
		],
		"SearchInput": [
			{
				"name": "SearchInput",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\SearchInput.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"RollbackButtonProps": [
			{
				"name": "RollbackButtonProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\RollbackButton.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"BatchRollbackButtonProps": [
			{
				"name": "BatchRollbackButtonProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\RollbackButton.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"BatchRollbackButton": [
			{
				"name": "BatchRollbackButton",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\RollbackButton.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"useRollback": [
			{
				"name": "useRollback",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\RollbackButton.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"OptimisticUpdateIndicatorProps": [
			{
				"name": "OptimisticUpdateIndicatorProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\OptimisticUpdateIndicator.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmptyState": [
			{
				"name": "EmptyState",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\EmptyState.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"ConflictResolutionModalProps": [
			{
				"name": "ConflictResolutionModalProps",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\ConflictResolutionModal.tsx",
				"type": "interface",
				"isDefault": false
			}
		],
		"useConflictResolution": [
			{
				"name": "useConflictResolution",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\ConflictResolutionModal.tsx",
				"type": "function",
				"isDefault": false
			}
		],
		"AlertBanner": [
			{
				"name": "AlertBanner",
				"path": "c:\\temp\\white-cross\\frontend\\src\\components\\shared\\AlertBanner.tsx",
				"type": "const",
				"isDefault": false
			}
		],
		"Info": [
			{
				"name": "Info",
				"module": "lucide-react",
				"isDefault": false
			}
		],
		"data": [
			{
				"name": "data",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\importExportService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"user": [
			{
				"name": "user",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\08-administration-features\\06-users-tab.cy.ts",
				"isDefault": false
			}
		],
		"logs": [
			{
				"name": "logs",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\08-administration-features\\11-audit-logs-tab.cy.ts",
				"isDefault": false
			}
		],
		"only": [
			{
				"name": "only",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\sequelizeErrorHandler.ts",
				"isDefault": false
			}
		],
		"metrics": [
			{
				"name": "metrics",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\08-administration-features\\09-monitoring-tab.cy.ts",
				"isDefault": false
			}
		],
		"of": [
			{
				"name": "of",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\02-student-management\\08-pagination-bulk.cy.ts",
				"isDefault": false
			}
		],
		"options": [
			{
				"name": "options",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\04-medication-management\\15-medication-administration-comprehensive.cy.ts",
				"isDefault": false
			}
		],
		"initiated": [
			{
				"name": "initiated",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\04-medication-management\\15-medication-administration-comprehensive.cy.ts",
				"isDefault": false
			}
		],
		"adverse": [
			{
				"name": "adverse",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\04-medication-management\\10-adverse-reactions.cy.ts",
				"isDefault": false
			}
		],
		"to": [
			{
				"name": "to",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\02-student-management\\08-pagination-bulk.cy.ts",
				"isDefault": false
			}
		],
		"when": [
			{
				"name": "when",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\02-health-records\\01-health-records-main.cy.ts",
				"isDefault": false
			}
		],
		"button": [
			{
				"name": "button",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\02-health-records\\01-health-records-main.cy.ts",
				"isDefault": false
			}
		],
		"endpoint": [
			{
				"name": "endpoint",
				"path": "c:\\temp\\white-cross\\frontend\\cypress\\e2e\\02-health-records\\01-health-records-main.cy.ts",
				"isDefault": false
			}
		],
		"autocannon": [
			{
				"name": "autocannon",
				"module": "autocannon",
				"isDefault": true
			}
		],
		"createMedicationSchema": [
			{
				"name": "createMedicationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateMedicationSchema": [
			{
				"name": "updateMedicationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"assignMedicationToStudentSchema": [
			{
				"name": "assignMedicationToStudentSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateStudentMedicationSchema": [
			{
				"name": "updateStudentMedicationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"logMedicationAdministrationSchema": [
			{
				"name": "logMedicationAdministrationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"addToInventorySchema": [
			{
				"name": "addToInventorySchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateInventoryQuantitySchema": [
			{
				"name": "updateInventoryQuantitySchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"reportAdverseReactionSchema": [
			{
				"name": "reportAdverseReactionSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"deactivateStudentMedicationSchema": [
			{
				"name": "deactivateStudentMedicationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\medicationValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"Joi": [
			{
				"name": "Joi",
				"module": "joi",
				"isDefault": true
			}
		],
		"validateIncidentData": [
			{
				"name": "validateIncidentData",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\incidentReportValidator.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createHealthRecordSchema": [
			{
				"name": "createHealthRecordSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateHealthRecordSchema": [
			{
				"name": "updateHealthRecordSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createAllergySchema": [
			{
				"name": "createAllergySchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateAllergySchema": [
			{
				"name": "updateAllergySchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createConditionSchema": [
			{
				"name": "createConditionSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateConditionSchema": [
			{
				"name": "updateConditionSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createVaccinationSchema": [
			{
				"name": "createVaccinationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateVaccinationSchema": [
			{
				"name": "updateVaccinationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createScreeningSchema": [
			{
				"name": "createScreeningSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateScreeningSchema": [
			{
				"name": "updateScreeningSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createGrowthMeasurementSchema": [
			{
				"name": "createGrowthMeasurementSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateGrowthMeasurementSchema": [
			{
				"name": "updateGrowthMeasurementSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createVitalSignsSchema": [
			{
				"name": "createVitalSignsSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateVitalSignsSchema": [
			{
				"name": "updateVitalSignsSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\validators\\healthRecordValidators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"WorkerPool": [
			{
				"name": "WorkerPool",
				"path": "c:\\temp\\white-cross\\backend\\src\\workers\\workerPool.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"getHealthCalculationPool": [
			{
				"name": "getHealthCalculationPool",
				"path": "c:\\temp\\white-cross\\backend\\src\\workers\\workerPool.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"Worker": [
			{
				"name": "Worker",
				"module": "worker_threads",
				"isDefault": false
			}
		],
		"cpus": [
			{
				"name": "cpus",
				"module": "os",
				"isDefault": false
			}
		],
		"EventEmitter": [
			{
				"name": "EventEmitter",
				"module": "events",
				"isDefault": false
			}
		],
		"parentPort": [
			{
				"name": "parentPort",
				"module": "worker_threads",
				"isDefault": false
			}
		],
		"workerData": [
			{
				"name": "workerData",
				"module": "worker_threads",
				"isDefault": false
			}
		],
		"dotenv": [
			{
				"name": "dotenv",
				"module": "dotenv",
				"isDefault": true,
				"asDefinition": "* as dotenv"
			}
		],
		"from": [
			{
				"name": "from",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\lodashUtils.ts",
				"isDefault": false
			}
		],
		"ensureTestDatabase": [
			{
				"name": "ensureTestDatabase",
				"path": "c:\\temp\\white-cross\\backend\\src\\__tests__\\helpers\\testDatabase.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"QueryInterface": [
			{
				"name": "QueryInterface",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"QueryTypes": [
			{
				"name": "QueryTypes",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"PHI": [
			{
				"name": "PHI",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"PII": [
			{
				"name": "PII",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ICD10Code": [
			{
				"name": "ICD10Code",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CPTCode": [
			{
				"name": "CPTCode",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"NDCCode": [
			{
				"name": "NDCCode",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"CVXCode": [
			{
				"name": "CVXCode",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"LOINCCode": [
			{
				"name": "LOINCCode",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"NPICode": [
			{
				"name": "NPICode",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Dosage": [
			{
				"name": "Dosage",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VitalSignMeasurement": [
			{
				"name": "VitalSignMeasurement",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"isPHI": [
			{
				"name": "isPHI",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isPII": [
			{
				"name": "isPII",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"markAsPHI": [
			{
				"name": "markAsPHI",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"markAsPII": [
			{
				"name": "markAsPII",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"redactPHI": [
			{
				"name": "redactPHI",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"SafeLogData": [
			{
				"name": "SafeLogData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"createSafeLogData": [
			{
				"name": "createSafeLogData",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createICD10Code": [
			{
				"name": "createICD10Code",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isValidICD10Code": [
			{
				"name": "isValidICD10Code",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createCPTCode": [
			{
				"name": "createCPTCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createNDCCode": [
			{
				"name": "createNDCCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createCVXCode": [
			{
				"name": "createCVXCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createLOINCCode": [
			{
				"name": "createLOINCCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createNPICode": [
			{
				"name": "createNPICode",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createDosage": [
			{
				"name": "createDosage",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDosageRange": [
			{
				"name": "validateDosageRange",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"phiToSafeString": [
			{
				"name": "phiToSafeString",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isLikelyPHIField": [
			{
				"name": "isLikelyPHIField",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"PHIAccessContext": [
			{
				"name": "PHIAccessContext",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"validatePHIAccessContext": [
			{
				"name": "validatePHIAccessContext",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"DeIdentificationLevel": [
			{
				"name": "DeIdentificationLevel",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"DeIdentifiedData": [
			{
				"name": "DeIdentifiedData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"deIdentifyPHI": [
			{
				"name": "deIdentifyPHI",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"Encrypted": [
			{
				"name": "Encrypted",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\phi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"markAsEncrypted": [
			{
				"name": "markAsEncrypted",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isEncrypted": [
			{
				"name": "isEncrypted",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\phi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"AuthUser": [
			{
				"name": "AuthUser",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\index.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuthCredentials": [
			{
				"name": "AuthCredentials",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuthenticatedRequest": [
			{
				"name": "AuthenticatedRequest",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginationQuery": [
			{
				"name": "PaginationQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"successResponse": [
			{
				"name": "successResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"paginatedResponse": [
			{
				"name": "paginatedResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"errorResponse": [
			{
				"name": "errorResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RouteHandler": [
			{
				"name": "RouteHandler",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AuthenticatedHandler": [
			{
				"name": "AuthenticatedHandler",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"GetStudentsQuery": [
			{
				"name": "GetStudentsQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateStudentPayload": [
			{
				"name": "CreateStudentPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateStudentPayload": [
			{
				"name": "UpdateStudentPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentParams": [
			{
				"name": "StudentParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GetMedicationsQuery": [
			{
				"name": "GetMedicationsQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateMedicationPayload": [
			{
				"name": "CreateMedicationPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AssignMedicationPayload": [
			{
				"name": "AssignMedicationPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationAdministrationPayload": [
			{
				"name": "MedicationAdministrationPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationParams": [
			{
				"name": "MedicationParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GetHealthRecordsQuery": [
			{
				"name": "GetHealthRecordsQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateHealthRecordPayload": [
			{
				"name": "CreateHealthRecordPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateHealthRecordPayload": [
			{
				"name": "UpdateHealthRecordPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthRecordParams": [
			{
				"name": "HealthRecordParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GetAppointmentsQuery": [
			{
				"name": "GetAppointmentsQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateAppointmentPayload": [
			{
				"name": "CreateAppointmentPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateAppointmentPayload": [
			{
				"name": "UpdateAppointmentPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentParams": [
			{
				"name": "AppointmentParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GetUsersQuery": [
			{
				"name": "GetUsersQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateUserPayload": [
			{
				"name": "CreateUserPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateUserPayload": [
			{
				"name": "UpdateUserPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChangePasswordPayload": [
			{
				"name": "ChangePasswordPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserParams": [
			{
				"name": "UserParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"LoginPayload": [
			{
				"name": "LoginPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RegisterPayload": [
			{
				"name": "RegisterPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RefreshTokenPayload": [
			{
				"name": "RefreshTokenPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GetIncidentReportsQuery": [
			{
				"name": "GetIncidentReportsQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateIncidentReportPayload": [
			{
				"name": "CreateIncidentReportPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateIncidentReportPayload": [
			{
				"name": "UpdateIncidentReportPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportParams": [
			{
				"name": "IncidentReportParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GetDocumentsQuery": [
			{
				"name": "GetDocumentsQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UploadDocumentPayload": [
			{
				"name": "UploadDocumentPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DocumentParams": [
			{
				"name": "DocumentParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GenerateReportQuery": [
			{
				"name": "GenerateReportQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SendMessagePayload": [
			{
				"name": "SendMessagePayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BroadcastMessagePayload": [
			{
				"name": "BroadcastMessagePayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyAlertPayload": [
			{
				"name": "EmergencyAlertPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GetInventoryQuery": [
			{
				"name": "GetInventoryQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateInventoryItemPayload": [
			{
				"name": "CreateInventoryItemPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateInventoryPayload": [
			{
				"name": "UpdateInventoryPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryTransactionPayload": [
			{
				"name": "InventoryTransactionPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryParams": [
			{
				"name": "InventoryParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExtractQuery": [
			{
				"name": "ExtractQuery",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ExtractPayload": [
			{
				"name": "ExtractPayload",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ExtractParams": [
			{
				"name": "ExtractParams",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\hapi.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"createHandler": [
			{
				"name": "createHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\hapi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createPublicHandler": [
			{
				"name": "createPublicHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\hapi.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"Request": [
			{
				"name": "Request",
				"module": "express",
				"isDefault": false
			},
			{
				"name": "Request",
				"module": "@hapi/hapi",
				"isDefault": false
			},
			{
				"name": "Request",
				"path": "c:\\temp\\white-cross\\backend\\src\\types\\express.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ResponseToolkit": [
			{
				"name": "ResponseToolkit",
				"module": "@hapi/hapi",
				"isDefault": false
			}
		],
		"ResponseObject": [
			{
				"name": "ResponseObject",
				"module": "@hapi/hapi",
				"isDefault": false
			}
		],
		"Boom": [
			{
				"name": "Boom",
				"module": "@hapi/boom",
				"isDefault": true,
				"asDefinition": "* as Boom"
			}
		],
		"ReminderType": [
			{
				"name": "ReminderType",
				"path": "c:\\temp\\white-cross\\backend\\dist\\types\\appointment.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"isEmpty": [
			{
				"name": "isEmpty",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isNotEmpty": [
			{
				"name": "isNotEmpty",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isUnique": [
			{
				"name": "isUnique",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isValidEmail": [
			{
				"name": "isValidEmail",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isValidPhoneNumber": [
			{
				"name": "isValidPhoneNumber",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isValidUuid": [
			{
				"name": "isValidUuid",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isValidDate": [
			{
				"name": "isValidDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isStrongPassword": [
			{
				"name": "isStrongPassword",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\validation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"capitalize": [
			{
				"name": "capitalize",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\string.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"camelCase": [
			{
				"name": "camelCase",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\string.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"kebabCase": [
			{
				"name": "kebabCase",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\string.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"snakeCase": [
			{
				"name": "snakeCase",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\string.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"truncate": [
			{
				"name": "truncate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"padStart": [
			{
				"name": "padStart",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\string.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"trim": [
			{
				"name": "trim",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\string.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"toNumber": [
			{
				"name": "toNumber",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\string.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createdResponse": [
			{
				"name": "createdResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"noContentResponse": [
			{
				"name": "noContentResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"badRequestResponse": [
			{
				"name": "badRequestResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"unauthorizedResponse": [
			{
				"name": "unauthorizedResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"forbiddenResponse": [
			{
				"name": "forbiddenResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"notFoundResponse": [
			{
				"name": "notFoundResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"conflictResponse": [
			{
				"name": "conflictResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"unprocessableEntityResponse": [
			{
				"name": "unprocessableEntityResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"internalServerErrorResponse": [
			{
				"name": "internalServerErrorResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"serviceUnavailableResponse": [
			{
				"name": "serviceUnavailableResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"asyncHandler": [
			{
				"name": "asyncHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"healthCheckResponse": [
			{
				"name": "healthCheckResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\responseHelpers.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"Response": [
			{
				"name": "Response",
				"module": "express",
				"isDefault": false
			}
		],
		"cloneDeep": [
			{
				"name": "cloneDeep",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\object.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"merge": [
			{
				"name": "merge",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\object.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"pick": [
			{
				"name": "pick",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\object.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"omit": [
			{
				"name": "omit",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\object.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"has": [
			{
				"name": "has",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\object.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"get": [
			{
				"name": "get",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\object.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"set": [
			{
				"name": "set",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\object.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"hasIn": [
			{
				"name": "hasIn",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\object.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DateFormat": [
			{
				"name": "DateFormat",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"AgeInfo": [
			{
				"name": "AgeInfo",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"calculateAge": [
			{
				"name": "calculateAge",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getDateRange": [
			{
				"name": "getDateRange",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isToday": [
			{
				"name": "isToday",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\date.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"isPast": [
			{
				"name": "isPast",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isFuture": [
			{
				"name": "isFuture",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"addDays": [
			{
				"name": "addDays",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"addMonths": [
			{
				"name": "addMonths",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"addYears": [
			{
				"name": "addYears",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getDaysDifference": [
			{
				"name": "getDaysDifference",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"toISOString": [
			{
				"name": "toISOString",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getVaccinationPeriods": [
			{
				"name": "getVaccinationPeriods",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\dateHelpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isWithinLastDays": [
			{
				"name": "isWithinLastDays",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\date.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"groupByPeriod": [
			{
				"name": "groupByPeriod",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\date.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"groupBy": [
			{
				"name": "groupBy",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"uniqBy": [
			{
				"name": "uniqBy",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"chunk": [
			{
				"name": "chunk",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"intersection": [
			{
				"name": "intersection",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"compact": [
			{
				"name": "compact",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"flatten": [
			{
				"name": "flatten",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"flattenDeep": [
			{
				"name": "flattenDeep",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"groupMedicationsByStudent": [
			{
				"name": "groupMedicationsByStudent",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"groupHealthRecordsByType": [
			{
				"name": "groupHealthRecordsByType",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"filterActiveRecords": [
			{
				"name": "filterActiveRecords",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"sortByDateDesc": [
			{
				"name": "sortByDateDesc",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"sortByDateAsc": [
			{
				"name": "sortByDateAsc",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"groupAppointmentsByNurse": [
			{
				"name": "groupAppointmentsByNurse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"groupStudentsByGrade": [
			{
				"name": "groupStudentsByGrade",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"filterEmergencyContactsByPriority": [
			{
				"name": "filterEmergencyContactsByPriority",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\utils\\array.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"applyAPISecurityHeaders": [
			{
				"name": "applyAPISecurityHeaders",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\securityHeaders.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"applyDownloadSecurityHeaders": [
			{
				"name": "applyDownloadSecurityHeaders",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\securityHeaders.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"passwordValidator": [
			{
				"name": "passwordValidator",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\schemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"emailValidator": [
			{
				"name": "emailValidator",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\schemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"phoneValidator": [
			{
				"name": "phoneValidator",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\schemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"uuidValidator": [
			{
				"name": "uuidValidator",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\schemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"nameValidator": [
			{
				"name": "nameValidator",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\schemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"paginationSchema": [
			{
				"name": "paginationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\schemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateRequest": [
			{
				"name": "validateRequest",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\middleware.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateQuery": [
			{
				"name": "validateQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\middleware.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateParams": [
			{
				"name": "validateParams",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\middleware.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"handleValidationErrors": [
			{
				"name": "handleValidationErrors",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\middleware.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createValidationChain": [
			{
				"name": "createValidationChain",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\validation\\middleware.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"NextFunction": [
			{
				"name": "NextFunction",
				"module": "express",
				"isDefault": false
			}
		],
		"validationResult": [
			{
				"name": "validationResult",
				"module": "express-validator",
				"isDefault": false
			}
		],
		"ValidationChain": [
			{
				"name": "ValidationChain",
				"module": "express-validator",
				"isDefault": false
			}
		],
		"ALLOWED_SORT_FIELDS": [
			{
				"name": "ALLOWED_SORT_FIELDS",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ALLOWED_SORT_ORDERS": [
			{
				"name": "ALLOWED_SORT_ORDERS",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SortOrder": [
			{
				"name": "SortOrder",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SqlInjectionError": [
			{
				"name": "SqlInjectionError",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"validateSortField": [
			{
				"name": "validateSortField",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateSortOrder": [
			{
				"name": "validateSortOrder",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validatePagination": [
			{
				"name": "validatePagination",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"buildSafeLikePattern": [
			{
				"name": "buildSafeLikePattern",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"RATE_LIMIT_CONFIGS": [
			{
				"name": "RATE_LIMIT_CONFIGS",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\rateLimiting.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RateLimitConfig": [
			{
				"name": "RateLimitConfig",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\rateLimiting.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"createRateLimiter": [
			{
				"name": "createRateLimiter",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\rateLimiting.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"applyRateLimit": [
			{
				"name": "applyRateLimit",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\rateLimiting.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createClient": [
			{
				"name": "createClient",
				"module": "redis",
				"isDefault": false
			}
		],
		"hasPermission": [
			{
				"name": "hasPermission",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\security\\permissionUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"requirePermission": [
			{
				"name": "requirePermission",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\security\\permissionUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"requireStudentAccess": [
			{
				"name": "requireStudentAccess",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\security\\permissionUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"winston": [
			{
				"name": "winston",
				"module": "winston",
				"isDefault": true
			}
		],
		"MemoryUsage": [
			{
				"name": "MemoryUsage",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExecutionResult": [
			{
				"name": "ExecutionResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"trackMemoryUsage": [
			{
				"name": "trackMemoryUsage",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logPerformanceMetrics": [
			{
				"name": "logPerformanceMetrics",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"performanceMonitor": [
			{
				"name": "performanceMonitor",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getSystemPerformanceStats": [
			{
				"name": "getSystemPerformanceStats",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"checkMemoryThreshold": [
			{
				"name": "checkMemoryThreshold",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createPerformanceMiddleware": [
			{
				"name": "createPerformanceMiddleware",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\monitoring\\performance.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"DocumentMetadata": [
			{
				"name": "DocumentMetadata",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\files\\validation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FileValidationResult": [
			{
				"name": "FileValidationResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\files\\validation.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"generateSecureFilename": [
			{
				"name": "generateSecureFilename",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\files\\validation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateFileHash": [
			{
				"name": "calculateFileHash",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\files\\validation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"extractDocumentMetadata": [
			{
				"name": "extractDocumentMetadata",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\files\\validation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"generateUploadPath": [
			{
				"name": "generateUploadPath",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\files\\validation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ClinicalRanges": [
			{
				"name": "ClinicalRanges",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\validators.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"validateMedicalCode": [
			{
				"name": "validateMedicalCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\validators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateAllergySeverity": [
			{
				"name": "validateAllergySeverity",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\validators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateVitalSigns": [
			{
				"name": "validateVitalSigns",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeHealthData": [
			{
				"name": "sanitizeHealthData",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\validators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"DosageSchedule": [
			{
				"name": "DosageSchedule",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\medicationUtils.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"calculateDosageSchedule": [
			{
				"name": "calculateDosageSchedule",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\medicationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDosageAmount": [
			{
				"name": "validateDosageAmount",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\medicationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateMedicationExpiry": [
			{
				"name": "calculateMedicationExpiry",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\medicationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatMedicationName": [
			{
				"name": "formatMedicationName",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\medicationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateNextDoseTime": [
			{
				"name": "calculateNextDoseTime",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\medicationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isDoseTimeReached": [
			{
				"name": "isDoseTimeReached",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\healthcare\\medicationUtils.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ConfigValidationSchema": [
			{
				"name": "ConfigValidationSchema",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConfigurationError": [
			{
				"name": "ConfigurationError",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"getConfigWithFallback": [
			{
				"name": "getConfigWithFallback",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateConfigurationValue": [
			{
				"name": "validateConfigurationValue",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"encryptSensitiveConfig": [
			{
				"name": "encryptSensitiveConfig",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"decryptSensitiveConfig": [
			{
				"name": "decryptSensitiveConfig",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAllConfigWithValidation": [
			{
				"name": "getAllConfigWithValidation",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"clearConfigCache": [
			{
				"name": "clearConfigCache",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getConfigStats": [
			{
				"name": "getConfigStats",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\config\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ErrorResponse": [
			{
				"name": "ErrorResponse",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\sequelizeErrorHandler.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ErrorCodes": [
			{
				"name": "ErrorCodes",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\database\\errorHandler.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"handleSequelizeError": [
			{
				"name": "handleSequelizeError",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\database\\errorHandler.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createErrorResponse": [
			{
				"name": "createErrorResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\database\\errorHandler.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateEmailAddress": [
			{
				"name": "validateEmailAddress",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\communication\\validators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatPhoneNumber": [
			{
				"name": "formatPhoneNumber",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\communication\\validators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateSMSLength": [
			{
				"name": "validateSMSLength",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\communication\\validators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"MessageVariable": [
			{
				"name": "MessageVariable",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\communication\\templates.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MessageCostCalculation": [
			{
				"name": "MessageCostCalculation",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\communication\\templates.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"buildMessageTemplate": [
			{
				"name": "buildMessageTemplate",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\communication\\templates.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateMessageCost": [
			{
				"name": "calculateMessageCost",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\communication\\templates.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateTemplateVariables": [
			{
				"name": "validateTemplateVariables",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizeMessageContent": [
			{
				"name": "sanitizeMessageContent",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\communication\\templates.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"AcademicRecord": [
			{
				"name": "AcademicRecord",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\academicTranscriptService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SubjectGrade": [
			{
				"name": "SubjectGrade",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\academicTranscriptService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AttendanceRecord": [
			{
				"name": "AttendanceRecord",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\academicTranscriptService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BehaviorRecord": [
			{
				"name": "BehaviorRecord",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\academicTranscriptService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TranscriptImportData": [
			{
				"name": "TranscriptImportData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\academicTranscriptService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AcademicTranscriptService": [
			{
				"name": "AcademicTranscriptService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\academicTranscriptService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"database": [
			{
				"name": "database",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\accessControl\\types.ts",
				"isDefault": false
			}
		],
		"InventoryService": [
			{
				"name": "InventoryService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventoryService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"purchaseOrderRoutes": [
			{
				"name": "purchaseOrderRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\purchaseOrder.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ServerRoute": [
			{
				"name": "ServerRoute",
				"module": "@hapi/hapi",
				"isDefault": false
			}
		],
		"Op": [
			{
				"name": "Op",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"medicationRoutes": [
			{
				"name": "medicationRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"systems": [
			{
				"name": "systems",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\reports.ts",
				"isDefault": false
			}
		],
		"capabilities": [
			{
				"name": "capabilities",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\reports.ts",
				"isDefault": false
			}
		],
		"router": [
			{
				"name": "router",
				"path": "c:\\temp\\white-cross\\backend\\dist\\routes\\integration.d.ts",
				"isDefault": true
			}
		],
		"express": [
			{
				"name": "express",
				"module": "express",
				"isDefault": true
			}
		],
		"AppointmentWaitlistService": [
			{
				"name": "AppointmentWaitlistService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\AppointmentWaitlistService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateMedicationData": [
			{
				"name": "CreateMedicationData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\medicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateStudentMedicationData": [
			{
				"name": "CreateStudentMedicationData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\medicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateMedicationLogData": [
			{
				"name": "CreateMedicationLogData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\medicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateInventoryData": [
			{
				"name": "CreateInventoryData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\medicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateAdverseReactionData": [
			{
				"name": "CreateAdverseReactionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\medicationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationService": [
			{
				"name": "MedicationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\medicationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AppointmentCrudOperations": [
			{
				"name": "AppointmentCrudOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\crudOperations.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"InteractionCheckResult": [
			{
				"name": "InteractionCheckResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\medicationInteractionService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationInteractionService": [
			{
				"name": "MedicationInteractionService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\medicationInteractionService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AppointmentStatisticsService": [
			{
				"name": "AppointmentStatisticsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\AppointmentStatisticsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Translation": [
			{
				"name": "Translation",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\multiLanguageService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MultiLanguageProfile": [
			{
				"name": "MultiLanguageProfile",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\multiLanguageService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MultiLanguageService": [
			{
				"name": "MultiLanguageService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\multiLanguageService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AppointmentService": [
			{
				"name": "AppointmentService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointmentService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AppointmentReminderService": [
			{
				"name": "AppointmentReminderService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AppointmentRecurringService": [
			{
				"name": "AppointmentRecurringService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\AppointmentRecurringService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"vendorRoutes": [
			{
				"name": "vendorRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\vendor.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"userRoutes": [
			{
				"name": "userRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\users.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AppointmentCalendarService": [
			{
				"name": "AppointmentCalendarService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\AppointmentCalendarService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"studentRoutes": [
			{
				"name": "studentRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\students.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AppointmentAvailabilityService": [
			{
				"name": "AppointmentAvailabilityService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\AppointmentAvailabilityService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"passport": [
			{
				"name": "passport",
				"module": "passport",
				"isDefault": true
			},
			{
				"name": "passport",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\passport.d.ts",
				"isDefault": true
			}
		],
		"Strategy as LocalStrategy": [
			{
				"name": "Strategy as LocalStrategy",
				"module": "passport-local",
				"isDefault": false
			}
		],
		"Strategy as JwtStrategy": [
			{
				"name": "Strategy as JwtStrategy",
				"module": "passport-jwt",
				"isDefault": false
			}
		],
		"ExtractJwt": [
			{
				"name": "ExtractJwt",
				"module": "passport-jwt",
				"isDefault": false
			}
		],
		"Strategy as GoogleStrategy": [
			{
				"name": "Strategy as GoogleStrategy",
				"module": "passport-google-oauth20",
				"isDefault": false
			}
		],
		"Profile as GoogleProfile": [
			{
				"name": "Profile as GoogleProfile",
				"module": "passport-google-oauth20",
				"isDefault": false
			}
		],
		"VerifyCallback": [
			{
				"name": "VerifyCallback",
				"module": "passport-google-oauth20",
				"isDefault": false
			}
		],
		"Strategy as MicrosoftStrategy": [
			{
				"name": "Strategy as MicrosoftStrategy",
				"module": "passport-microsoft",
				"isDefault": false
			}
		],
		"bcrypt": [
			{
				"name": "bcrypt",
				"module": "bcryptjs",
				"isDefault": true
			}
		],
		"CreateIntegrationConfigData": [
			{
				"name": "CreateIntegrationConfigData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\integrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateIntegrationConfigData": [
			{
				"name": "UpdateIntegrationConfigData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\integrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationTestResult": [
			{
				"name": "IntegrationTestResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\integrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationSyncResult": [
			{
				"name": "IntegrationSyncResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\integrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IntegrationService": [
			{
				"name": "IntegrationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\integrationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"inventoryRoutes": [
			{
				"name": "inventoryRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\inventory.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"integrationRoutes": [
			{
				"name": "integrationRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\integrations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"NurseAvailabilityService": [
			{
				"name": "NurseAvailabilityService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\NurseAvailabilityService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AccessControlService": [
			{
				"name": "AccessControlService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\accessControl\\index.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"RoleOperations": [
			{
				"name": "RoleOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\accessControl\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PermissionOperations": [
			{
				"name": "PermissionOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\accessControl\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RBACOperations": [
			{
				"name": "RBACOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\accessControl\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AuthorizationOperations": [
			{
				"name": "AuthorizationOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\accessControl\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AuditOperations": [
			{
				"name": "AuditOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\accessControl\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"Router": [
			{
				"name": "Router",
				"module": "express",
				"isDefault": false
			}
		],
		"body": [
			{
				"name": "body",
				"module": "express-validator",
				"isDefault": false
			}
		],
		"HealthRiskScore": [
			{
				"name": "HealthRiskScore",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\healthRiskAssessmentService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RiskFactor": [
			{
				"name": "RiskFactor",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\healthRiskAssessmentService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthRiskAssessmentService": [
			{
				"name": "HealthRiskAssessmentService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\healthRiskAssessmentService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"incidentReportRoutes": [
			{
				"name": "incidentReportRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\incidentReports.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"HealthRecordService": [
			{
				"name": "HealthRecordService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\healthRecordService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"healthMetricsService": [
			{
				"name": "healthMetricsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\healthMetricsService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PurchaseOrderService": [
			{
				"name": "PurchaseOrderService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\purchaseOrderService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Transaction": [
			{
				"name": "Transaction",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"VendorService": [
			{
				"name": "VendorService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\vendorService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ChangePasswordData": [
			{
				"name": "ChangePasswordData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\services\\UserService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserStatistics": [
			{
				"name": "UserStatistics",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\services\\UserService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserService": [
			{
				"name": "UserService",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\services\\UserService.d.ts",
				"type": "class",
				"isDefault": true
			}
		],
		"userService": [
			{
				"name": "userService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\userService-sequelize.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"StudentService": [
			{
				"name": "StudentService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\studentService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"studentService": [
			{
				"name": "studentService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\studentService-sequelize.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PhotoMetadata": [
			{
				"name": "PhotoMetadata",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\studentPhotoService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PhotoUploadData": [
			{
				"name": "PhotoUploadData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\studentPhotoService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FacialRecognitionMatch": [
			{
				"name": "FacialRecognitionMatch",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\studentPhotoService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StudentPhotoService": [
			{
				"name": "StudentPhotoService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\studentPhotoService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"v4 as uuidv4": [
			{
				"name": "v4 as uuidv4",
				"module": "uuid",
				"isDefault": false
			}
		],
		"MedicationErrorType": [
			{
				"name": "MedicationErrorType",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\resilientMedicationService.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"MedicationError": [
			{
				"name": "MedicationError",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\resilientMedicationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"IdempotencyKeyGenerator": [
			{
				"name": "IdempotencyKeyGenerator",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\resilientMedicationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ResilientMedicationService": [
			{
				"name": "ResilientMedicationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\resilientMedicationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AppointmentValidation": [
			{
				"name": "AppointmentValidation",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\validation.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ReportService": [
			{
				"name": "ReportService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\reportService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"fn": [
			{
				"name": "fn",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"col": [
			{
				"name": "col",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"literal": [
			{
				"name": "literal",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"AppointmentStatusTransitions": [
			{
				"name": "AppointmentStatusTransitions",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointment\\statusTransitions.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"GradeTransitionRule": [
			{
				"name": "GradeTransitionRule",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\gradeTransitionService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TransitionResult": [
			{
				"name": "TransitionResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\gradeTransitionService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GradeTransitionService": [
			{
				"name": "GradeTransitionService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\gradeTransitionService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"healthMetricsRoutes": [
			{
				"name": "healthMetricsRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthMetrics.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"WaitlistManagementService": [
			{
				"name": "WaitlistManagementService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"RecurringTemplate": [
			{
				"name": "RecurringTemplate",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RecurringAppointmentService": [
			{
				"name": "RecurringAppointmentService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ReminderSchedule": [
			{
				"name": "ReminderSchedule",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EvidenceFile": [
			{
				"name": "EvidenceFile",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EvidenceManagementService": [
			{
				"name": "EvidenceManagementService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"WitnessStatementService": [
			{
				"name": "WitnessStatementService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"InsuranceClaim": [
			{
				"name": "InsuranceClaim",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InsuranceClaimService": [
			{
				"name": "InsuranceClaimService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"HIPAACompliance": [
			{
				"name": "HIPAACompliance",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HIPAAComplianceService": [
			{
				"name": "HIPAAComplianceService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"RegulationUpdate": [
			{
				"name": "RegulationUpdate",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RegulationTrackingService": [
			{
				"name": "RegulationTrackingService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ConsentFormService": [
			{
				"name": "ConsentFormService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MessageTemplateService": [
			{
				"name": "MessageTemplateService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"BulkMessage": [
			{
				"name": "BulkMessage",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkMessagingService": [
			{
				"name": "BulkMessagingService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"TranslationService": [
			{
				"name": "TranslationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CommunicationTranslationService": [
			{
				"name": "CommunicationTranslationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ReportDefinition": [
			{
				"name": "ReportDefinition",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CustomReportService": [
			{
				"name": "CustomReportService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DashboardMetric": [
			{
				"name": "DashboardMetric",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AnalyticsDashboardService": [
			{
				"name": "AnalyticsDashboardService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\enterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"emergencyContactRoutes": [
			{
				"name": "emergencyContactRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\emergencyContacts.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"NotificationResult": [
			{
				"name": "NotificationResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\emergencyContactService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyContactService": [
			{
				"name": "EmergencyContactService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\emergencyContactService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"query": [
			{
				"name": "query",
				"module": "express-validator",
				"isDefault": false
			}
		],
		"param": [
			{
				"name": "param",
				"module": "express-validator",
				"isDefault": false
			}
		],
		"CreateDocumentData": [
			{
				"name": "CreateDocumentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\documentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateDocumentData": [
			{
				"name": "UpdateDocumentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\documentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SignDocumentData": [
			{
				"name": "SignDocumentData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\documentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateFromTemplateData": [
			{
				"name": "CreateFromTemplateData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\documentService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"dashboardRoutes": [
			{
				"name": "dashboardRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\dashboard.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DashboardService": [
			{
				"name": "DashboardService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\dashboardService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"configurationRoutes": [
			{
				"name": "configurationRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\configuration.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ConfigurationValidationResult": [
			{
				"name": "ConfigurationValidationResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\configurationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateConfigurationData": [
			{
				"name": "CreateConfigurationData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\configurationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConfigurationService": [
			{
				"name": "ConfigurationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\configurationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"new": [
			{
				"name": "new",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\configurationService.ts",
				"isDefault": true
			}
		],
		"communicationRoutes": [
			{
				"name": "communicationRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\communication.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"InventoryRepository": [
			{
				"name": "InventoryRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\inventoryRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"IncidentCoreService": [
			{
				"name": "IncidentCoreService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\coreService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"InventoryQueriesService": [
			{
				"name": "InventoryQueriesService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\inventoryQueriesService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AnalyticsService": [
			{
				"name": "AnalyticsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\analyticsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AlertsService": [
			{
				"name": "AlertsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\alertsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"TimeSlot": [
			{
				"name": "TimeSlot",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BusinessHours": [
			{
				"name": "BusinessHours",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"isWithinBusinessHours": [
			{
				"name": "isWithinBusinessHours",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateTimeSlots": [
			{
				"name": "calculateTimeSlots",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getNextBusinessDay": [
			{
				"name": "getNextBusinessDay",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatAppointmentTime": [
			{
				"name": "formatAppointmentTime",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateDuration": [
			{
				"name": "calculateDuration",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"timePeriodsOverlap": [
			{
				"name": "timePeriodsOverlap",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"addBusinessDays": [
			{
				"name": "addBusinessDays",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAvailableSlots": [
			{
				"name": "getAvailableSlots",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\time\\businessHours.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"healthRecordTypes": [
			{
				"name": "healthRecordTypes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"allergySeverities": [
			{
				"name": "allergySeverities",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"conditionStatuses": [
			{
				"name": "conditionStatuses",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"conditionSeverities": [
			{
				"name": "conditionSeverities",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"screeningTypes": [
			{
				"name": "screeningTypes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"screeningResults": [
			{
				"name": "screeningResults",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"studentIdParam": [
			{
				"name": "studentIdParam",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"recordIdParam": [
			{
				"name": "recordIdParam",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"healthRecordsQuery": [
			{
				"name": "healthRecordsQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createHealthRecordPayload": [
			{
				"name": "createHealthRecordPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateHealthRecordPayload": [
			{
				"name": "updateHealthRecordPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"healthTimelineQuery": [
			{
				"name": "healthTimelineQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"exportHealthRecordsQuery": [
			{
				"name": "exportHealthRecordsQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"addAllergyPayload": [
			{
				"name": "addAllergyPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateAllergyPayload": [
			{
				"name": "updateAllergyPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"contraindicationsPayload": [
			{
				"name": "contraindicationsPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"addChronicConditionPayload": [
			{
				"name": "addChronicConditionPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateChronicConditionPayload": [
			{
				"name": "updateChronicConditionPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateConditionStatusPayload": [
			{
				"name": "updateConditionStatusPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"conditionsDueQuery": [
			{
				"name": "conditionsDueQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"schoolIdQuery": [
			{
				"name": "schoolIdQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createVaccinationPayload": [
			{
				"name": "createVaccinationPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateVaccinationPayload": [
			{
				"name": "updateVaccinationPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"upcomingVaccinationsQuery": [
			{
				"name": "upcomingVaccinationsQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"schoolIdParam": [
			{
				"name": "schoolIdParam",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"screeningsQuery": [
			{
				"name": "screeningsQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createScreeningPayload": [
			{
				"name": "createScreeningPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateScreeningPayload": [
			{
				"name": "updateScreeningPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createGrowthMeasurementPayload": [
			{
				"name": "createGrowthMeasurementPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateGrowthMeasurementPayload": [
			{
				"name": "updateGrowthMeasurementPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"growthTrendsQuery": [
			{
				"name": "growthTrendsQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"vitalSignsQuery": [
			{
				"name": "vitalSignsQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createVitalSignsPayload": [
			{
				"name": "createVitalSignsPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"vitalTrendsQuery": [
			{
				"name": "vitalTrendsQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"searchQuery": [
			{
				"name": "searchQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"bulkDeletePayload": [
			{
				"name": "bulkDeletePayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"importHealthRecordsPayload": [
			{
				"name": "importHealthRecordsPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\validationSchemas.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PayloadData": [
			{
				"name": "PayloadData",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpService": [
			{
				"name": "FollowUpService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\followUpService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"OrderOperations": [
			{
				"name": "OrderOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\orderOperations.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MaintenanceService": [
			{
				"name": "MaintenanceService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\maintenanceService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"EvidenceService": [
			{
				"name": "EvidenceService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\evidenceService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"IncidentReportService": [
			{
				"name": "IncidentReportService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\index.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ItemOperations": [
			{
				"name": "ItemOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\itemOperations.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"healthRecordRoutes": [
			{
				"name": "healthRecordRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validation": [
			{
				"name": "validation",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\index.ts",
				"isDefault": false
			}
		],
		"moduleInfo": [
			{
				"name": "moduleInfo",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"VitalSignsService": [
			{
				"name": "VitalSignsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\vitalSignsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"validationService": [
			{
				"name": "validationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\validationService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ComplianceUtils": [
			{
				"name": "ComplianceUtils",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\utils.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"COMPLIANCE_CONSTANTS": [
			{
				"name": "COMPLIANCE_CONSTANTS",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\utils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"COMPLIANCE_ERRORS": [
			{
				"name": "COMPLIANCE_ERRORS",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\utils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"StatisticsService": [
			{
				"name": "StatisticsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\statisticsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ReportGenerationService": [
			{
				"name": "ReportGenerationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\reportGenerationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AllergyFilters": [
			{
				"name": "AllergyFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\allergyService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChronicConditionFilters": [
			{
				"name": "ChronicConditionFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\chronicConditionService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VaccinationFilters": [
			{
				"name": "VaccinationFilters",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginationInfo": [
			{
				"name": "PaginationInfo",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthDataPoint": [
			{
				"name": "GrowthDataPoint",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthStatistics": [
			{
				"name": "HealthStatistics",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ImportResult": [
			{
				"name": "ImportResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BulkDeleteResult": [
			{
				"name": "BulkDeleteResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExportData": [
			{
				"name": "ExportData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthDataExport": [
			{
				"name": "HealthDataExport",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"HealthDataImport": [
			{
				"name": "HealthDataImport",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExportOptions": [
			{
				"name": "ExportOptions",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ImportOptions": [
			{
				"name": "ImportOptions",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DetailedImportResult": [
			{
				"name": "DetailedImportResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PolicyService": [
			{
				"name": "PolicyService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\policyService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"patient": [
			{
				"name": "patient",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\importExportService.ts",
				"isDefault": false
			}
		],
		"not": [
			{
				"name": "not",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"isDefault": false
			}
		],
		"importExportService": [
			{
				"name": "importExportService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\importExportService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ComplianceService": [
			{
				"name": "ComplianceService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\index.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ImmunizationsService": [
			{
				"name": "ImmunizationsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\immunizationsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ConsentService": [
			{
				"name": "ConsentService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\consentService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateInventoryItemData": [
			{
				"name": "CreateInventoryItemData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\inventoryService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateInventoryItemData": [
			{
				"name": "UpdateInventoryItemData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\inventoryService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateInventoryTransactionData": [
			{
				"name": "CreateInventoryTransactionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\inventoryService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateMaintenanceLogData": [
			{
				"name": "CreateMaintenanceLogData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\inventoryService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StockQueryResult": [
			{
				"name": "StockQueryResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginatedInventoryItems": [
			{
				"name": "PaginatedInventoryItems",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StockAdjustmentResult": [
			{
				"name": "StockAdjustmentResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"StatusTransitionMap": [
			{
				"name": "StatusTransitionMap",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"healthRecordService": [
			{
				"name": "healthRecordService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\healthRecordService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"WitnessService": [
			{
				"name": "WitnessService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\witnessService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ComplianceReportService": [
			{
				"name": "ComplianceReportService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\complianceReportService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"HealthRecordRepository": [
			{
				"name": "HealthRecordRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\HealthRecordRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"TransactionService": [
			{
				"name": "TransactionService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\transactionService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"IncidentValidationService": [
			{
				"name": "IncidentValidationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\validationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ChecklistService": [
			{
				"name": "ChecklistService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\compliance\\checklistService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"SupplierOperations": [
			{
				"name": "SupplierOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\supplierOperations.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateIncidentReportData": [
			{
				"name": "CreateIncidentReportData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\incidentReportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateIncidentReportData": [
			{
				"name": "UpdateIncidentReportData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\incidentReportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentFilters": [
			{
				"name": "IncidentFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\incidentReportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FollowUpActionData": [
			{
				"name": "FollowUpActionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\incidentReportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"WitnessStatementData": [
			{
				"name": "WitnessStatementData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\incidentReportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateWitnessStatementData": [
			{
				"name": "CreateWitnessStatementData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\incidentReportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateFollowUpActionData": [
			{
				"name": "CreateFollowUpActionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\incidentReportService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IncidentReportDocumentData": [
			{
				"name": "IncidentReportDocumentData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChronicConditionsService": [
			{
				"name": "ChronicConditionsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\chronicConditionsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"StockService": [
			{
				"name": "StockService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\stockService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AuditService": [
			{
				"name": "AuditService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\index.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"StockOperations": [
			{
				"name": "StockOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\stockOperations.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AllergiesService": [
			{
				"name": "AllergiesService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\health\\allergiesService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"NotificationService": [
			{
				"name": "NotificationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\notificationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ReportOperations": [
			{
				"name": "ReportOperations",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\inventory\\reportOperations.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"InsuranceService": [
			{
				"name": "InsuranceService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\insuranceService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"budgetRoutes": [
			{
				"name": "budgetRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\budget.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CommunicationService": [
			{
				"name": "CommunicationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\communicationService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"authRoutes": [
			{
				"name": "authRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\auth-sequelize.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"jwt": [
			{
				"name": "jwt",
				"module": "@hapi/jwt",
				"isDefault": true,
				"asDefinition": "* as jwt"
			},
			{
				"name": "jwt",
				"module": "jsonwebtoken",
				"isDefault": true
			}
		],
		"everything": [
			{
				"name": "everything",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\chronicConditionService.ts",
				"isDefault": false
			}
		],
		"SearchService": [
			{
				"name": "SearchService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\incidentReport\\searchService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"chronicConditionsRoutes": [
			{
				"name": "chronicConditionsRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\routes\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"allergiesRoutes": [
			{
				"name": "allergiesRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\routes\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"appointmentSchedulingRoutes": [
			{
				"name": "appointmentSchedulingRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\appointmentScheduling.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CreateBudgetCategoryData": [
			{
				"name": "CreateBudgetCategoryData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\budgetService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateBudgetCategoryData": [
			{
				"name": "UpdateBudgetCategoryData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\budgetService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateBudgetTransactionData": [
			{
				"name": "CreateBudgetTransactionData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\budgetService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BudgetService": [
			{
				"name": "BudgetService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\budgetService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"generateCalendarExportHandler": [
			{
				"name": "generateCalendarExportHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"appointmentRoutes": [
			{
				"name": "appointmentRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\appointments.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"Module": [
			{
				"name": "Module",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\healthRecordValidators.ts",
				"isDefault": false
			}
		],
		"aiSearchRoutes": [
			{
				"name": "aiSearchRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\aiSearch.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"growthMeasurementsRoutes": [
			{
				"name": "growthMeasurementsRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\routes\\growthMeasurements.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"appointmentSchedulingService": [
			{
				"name": "appointmentSchedulingService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\appointmentSchedulingService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"searchAndUtilityRoutes": [
			{
				"name": "searchAndUtilityRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\routes\\searchAndUtility.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"screeningsRoutes": [
			{
				"name": "screeningsRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\routes\\screenings.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"vaccinationsRoutes": [
			{
				"name": "vaccinationsRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\routes\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"mainHealthRecordsRoutes": [
			{
				"name": "mainHealthRecordsRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\routes\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AISearchService": [
			{
				"name": "AISearchService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\aiSearchService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Pool": [
			{
				"name": "Pool",
				"module": "pg",
				"isDefault": false
			}
		],
		"OpenAI": [
			{
				"name": "OpenAI",
				"module": "openai",
				"isDefault": true
			}
		],
		"RefillRequest": [
			{
				"name": "RefillRequest",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MedicationRefillService": [
			{
				"name": "MedicationRefillService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"BarcodeData": [
			{
				"name": "BarcodeData",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BarcodeScanningService": [
			{
				"name": "BarcodeScanningService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AdverseDrugReaction": [
			{
				"name": "AdverseDrugReaction",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AdverseDrugReactionService": [
			{
				"name": "AdverseDrugReactionService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ControlledSubstanceLog": [
			{
				"name": "ControlledSubstanceLog",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ControlledSubstanceService": [
			{
				"name": "ControlledSubstanceService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ImmunizationRecord": [
			{
				"name": "ImmunizationRecord",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ImmunizationForecast": [
			{
				"name": "ImmunizationForecast",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ImmunizationForecastService": [
			{
				"name": "ImmunizationForecastService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"GrowthAnalysis": [
			{
				"name": "GrowthAnalysis",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"GrowthChartService": [
			{
				"name": "GrowthChartService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ScreeningResult": [
			{
				"name": "ScreeningResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ScreeningService": [
			{
				"name": "ScreeningService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DiseaseManagementPlan": [
			{
				"name": "DiseaseManagementPlan",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DiseaseManagementService": [
			{
				"name": "DiseaseManagementService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"EHRImportJob": [
			{
				"name": "EHRImportJob",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EHRImportService": [
			{
				"name": "EHRImportService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"VerificationRequest": [
			{
				"name": "VerificationRequest",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ContactVerificationService": [
			{
				"name": "ContactVerificationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"EmergencyNotification": [
			{
				"name": "EmergencyNotification",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyNotificationService": [
			{
				"name": "EmergencyNotificationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"HealthTrendPrediction": [
			{
				"name": "HealthTrendPrediction",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PredictiveAnalyticsService": [
			{
				"name": "PredictiveAnalyticsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"InventoryReorderPoint": [
			{
				"name": "InventoryReorderPoint",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"InventoryOptimizationService": [
			{
				"name": "InventoryOptimizationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"VendorManagementService": [
			{
				"name": "VendorManagementService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MaintenanceSchedule": [
			{
				"name": "MaintenanceSchedule",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EquipmentMaintenanceService": [
			{
				"name": "EquipmentMaintenanceService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MFASetup": [
			{
				"name": "MFASetup",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"MFAService": [
			{
				"name": "MFAService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DeviceFingerprint": [
			{
				"name": "DeviceFingerprint",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SessionSecurityService": [
			{
				"name": "SessionSecurityService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DocumentVersionControlService": [
			{
				"name": "DocumentVersionControlService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"OCRResult": [
			{
				"name": "OCRResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OCRService": [
			{
				"name": "OCRService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"SISIntegration": [
			{
				"name": "SISIntegration",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SISConnectorService": [
			{
				"name": "SISConnectorService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"PharmacyIntegration": [
			{
				"name": "PharmacyIntegration",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PharmacyIntegrationService": [
			{
				"name": "PharmacyIntegrationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"SyncQueue": [
			{
				"name": "SyncQueue",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OfflineSyncService": [
			{
				"name": "OfflineSyncService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"EmergencyProtocol": [
			{
				"name": "EmergencyProtocol",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EmergencyProtocolService": [
			{
				"name": "EmergencyProtocolService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DistrictManagementService": [
			{
				"name": "DistrictManagementService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"SystemMonitoringService": [
			{
				"name": "SystemMonitoringService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"FeatureIntegrationService": [
			{
				"name": "FeatureIntegrationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\advancedEnterpriseFeatures.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"getStudentHealthRecordsHandler": [
			{
				"name": "getStudentHealthRecordsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getHealthRecordByIdHandler": [
			{
				"name": "getHealthRecordByIdHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createHealthRecordHandler": [
			{
				"name": "createHealthRecordHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateHealthRecordHandler": [
			{
				"name": "updateHealthRecordHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"deleteHealthRecordHandler": [
			{
				"name": "deleteHealthRecordHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getHealthTimelineHandler": [
			{
				"name": "getHealthTimelineHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getHealthSummaryHandler": [
			{
				"name": "getHealthSummaryHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"exportHealthRecordsHandler": [
			{
				"name": "exportHealthRecordsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getHealthRecordStatisticsHandler": [
			{
				"name": "getHealthRecordStatisticsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\mainHealthRecords.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getGrowthMeasurementsHandler": [
			{
				"name": "getGrowthMeasurementsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\growthMeasurements.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getGrowthMeasurementByIdHandler": [
			{
				"name": "getGrowthMeasurementByIdHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\growthMeasurements.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createGrowthMeasurementHandler": [
			{
				"name": "createGrowthMeasurementHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\growthMeasurements.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateGrowthMeasurementHandler": [
			{
				"name": "updateGrowthMeasurementHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\growthMeasurements.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"deleteGrowthMeasurementHandler": [
			{
				"name": "deleteGrowthMeasurementHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\growthMeasurements.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getGrowthTrendsHandler": [
			{
				"name": "getGrowthTrendsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\growthMeasurements.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getGrowthConcernsHandler": [
			{
				"name": "getGrowthConcernsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\growthMeasurements.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getStudentChronicConditionsHandler": [
			{
				"name": "getStudentChronicConditionsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getChronicConditionByIdHandler": [
			{
				"name": "getChronicConditionByIdHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"addChronicConditionHandler": [
			{
				"name": "addChronicConditionHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateChronicConditionHandler": [
			{
				"name": "updateChronicConditionHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"deleteChronicConditionHandler": [
			{
				"name": "deleteChronicConditionHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateChronicConditionStatusHandler": [
			{
				"name": "updateChronicConditionStatusHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getConditionsDueForReviewHandler": [
			{
				"name": "getConditionsDueForReviewHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getChronicConditionsStatsHandler": [
			{
				"name": "getChronicConditionsStatsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\chronicConditions.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getStudentAllergiesHandler": [
			{
				"name": "getStudentAllergiesHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getAllergyByIdHandler": [
			{
				"name": "getAllergyByIdHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"addAllergyHandler": [
			{
				"name": "addAllergyHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateAllergyHandler": [
			{
				"name": "updateAllergyHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"deleteAllergyHandler": [
			{
				"name": "deleteAllergyHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"verifyAllergyHandler": [
			{
				"name": "verifyAllergyHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getCriticalAllergiesHandler": [
			{
				"name": "getCriticalAllergiesHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"checkContraindicationsHandler": [
			{
				"name": "checkContraindicationsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\allergies.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"vitalSignsRoutes": [
			{
				"name": "vitalSignsRoutes",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\routes\\vitalSigns.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PASSWORD_CONFIG": [
			{
				"name": "PASSWORD_CONFIG",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\passwordUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"hashPassword": [
			{
				"name": "hashPassword",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\passwordUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"comparePassword": [
			{
				"name": "comparePassword",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\passwordUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validatePasswordComplexity": [
			{
				"name": "validatePasswordComplexity",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\passwordUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generateSecurePassword": [
			{
				"name": "generateSecurePassword",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\passwordUtils.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ExpressAuthRequest": [
			{
				"name": "ExpressAuthRequest",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\auth-sequelize.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"auth": [
			{
				"name": "auth",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\auth-sequelize.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"requireRole": [
			{
				"name": "requireRole",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\middleware.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AuthRequest": [
			{
				"name": "AuthRequest",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\auth-sequelize.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"JWT_CONFIG": [
			{
				"name": "JWT_CONFIG",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"configureAuth": [
			{
				"name": "configureAuth",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\auth-sequelize.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"authMiddleware": [
			{
				"name": "authMiddleware",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\auth-sequelize.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TokenPayload": [
			{
				"name": "TokenPayload",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\jwt.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TokenOptions": [
			{
				"name": "TokenOptions",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\jwt.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"generateToken": [
			{
				"name": "generateToken",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\jwt.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"verifyToken": [
			{
				"name": "verifyToken",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\jwt.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"decodeToken": [
			{
				"name": "decodeToken",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\jwt.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"refreshToken": [
			{
				"name": "refreshToken",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\jwt.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"extractTokenFromHeader": [
			{
				"name": "extractTokenFromHeader",
				"path": "c:\\temp\\white-cross\\backend\\src\\shared\\auth\\jwt.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"Request as HapiRequest": [
			{
				"name": "Request as HapiRequest",
				"module": "@hapi/hapi",
				"isDefault": false
			}
		],
		"jsonwebtoken": [
			{
				"name": "jsonwebtoken",
				"module": "jsonwebtoken",
				"isDefault": true
			}
		],
		"{ SignOptions": [
			{
				"name": "{ SignOptions",
				"module": "jsonwebtoken",
				"isDefault": true
			}
		],
		"getVitalSignsHandler": [
			{
				"name": "getVitalSignsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vitalSigns.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getVitalSignsByIdHandler": [
			{
				"name": "getVitalSignsByIdHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vitalSigns.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createVitalSignsHandler": [
			{
				"name": "createVitalSignsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vitalSigns.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getLatestVitalsHandler": [
			{
				"name": "getLatestVitalsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vitalSigns.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getVitalTrendsHandler": [
			{
				"name": "getVitalTrendsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vitalSigns.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getVaccinationRecordsHandler": [
			{
				"name": "getVaccinationRecordsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getVaccinationByIdHandler": [
			{
				"name": "getVaccinationByIdHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createVaccinationHandler": [
			{
				"name": "createVaccinationHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateVaccinationHandler": [
			{
				"name": "updateVaccinationHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"deleteVaccinationHandler": [
			{
				"name": "deleteVaccinationHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"checkVaccinationComplianceHandler": [
			{
				"name": "checkVaccinationComplianceHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getUpcomingVaccinationsHandler": [
			{
				"name": "getUpcomingVaccinationsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getVaccinationReportHandler": [
			{
				"name": "getVaccinationReportHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"health": [
			{
				"name": "health",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"isDefault": false
			}
		],
		"getVaccinationStatsHandler": [
			{
				"name": "getVaccinationStatsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\vaccinations.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"searchHealthRecordsHandler": [
			{
				"name": "searchHealthRecordsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\searchAndUtility.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"bulkDeleteHealthRecordsHandler": [
			{
				"name": "bulkDeleteHealthRecordsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\searchAndUtility.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"importHealthRecordsHandler": [
			{
				"name": "importHealthRecordsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\searchAndUtility.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getStudentScreeningsHandler": [
			{
				"name": "getStudentScreeningsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\screenings.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getScreeningByIdHandler": [
			{
				"name": "getScreeningByIdHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\screenings.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createScreeningHandler": [
			{
				"name": "createScreeningHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\screenings.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"updateScreeningHandler": [
			{
				"name": "updateScreeningHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\screenings.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"deleteScreeningHandler": [
			{
				"name": "deleteScreeningHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\screenings.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getScreeningsDueHandler": [
			{
				"name": "getScreeningsDueHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\screenings.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getScreeningStatsHandler": [
			{
				"name": "getScreeningStatsHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\routes\\healthRecords\\handlers\\screenings.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"BackupData": [
			{
				"name": "BackupData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserData": [
			{
				"name": "UserData",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\administrationService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuditLogEntry": [
			{
				"name": "AuditLogEntry",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\audit\\IAuditLogger.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PHIAccessLog": [
			{
				"name": "PHIAccessLog",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\auditService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PHIAccessLogFilters": [
			{
				"name": "PHIAccessLogFilters",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\auditService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginatedResult": [
			{
				"name": "PaginatedResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuditStatistics": [
			{
				"name": "AuditStatistics",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EnrichedAuditLog": [
			{
				"name": "EnrichedAuditLog",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuditLogSearchCriteria": [
			{
				"name": "AuditLogSearchCriteria",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PHIAccessType": [
			{
				"name": "PHIAccessType",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"PHIDataCategory": [
			{
				"name": "PHIDataCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"SecurityAnalysisService": [
			{
				"name": "SecurityAnalysisService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\securityAnalysisService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"PHIAccessService": [
			{
				"name": "PHIAccessService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\phiAccessService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"auditService": [
			{
				"name": "auditService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PaginationOptions": [
			{
				"name": "PaginationOptions",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\allergyService.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChronicConditionStatistics": [
			{
				"name": "ChronicConditionStatistics",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\chronicCondition\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ChronicConditionSearchResult": [
			{
				"name": "ChronicConditionSearchResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\chronicCondition\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AccommodationType": [
			{
				"name": "AccommodationType",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\chronicCondition\\types.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"ComplianceReportingService": [
			{
				"name": "ComplianceReportingService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\complianceReportingService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AuditUtilsService": [
			{
				"name": "AuditUtilsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\auditUtilsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AUDIT_CONSTANTS": [
			{
				"name": "AUDIT_CONSTANTS",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\auditUtilsService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"AUDIT_ERRORS": [
			{
				"name": "AUDIT_ERRORS",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\auditUtilsService.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ChronicConditionService": [
			{
				"name": "ChronicConditionService",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\chronicConditionService.d.ts",
				"type": "class",
				"isDefault": true
			}
		],
		"AdministrationService": [
			{
				"name": "AdministrationService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\administration\\index.ts",
				"type": "class",
				"isDefault": true
			}
		],
		"AuditStatisticsService": [
			{
				"name": "AuditStatisticsService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\auditStatisticsService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AuditQueryService": [
			{
				"name": "AuditQueryService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\auditQueryService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AuditLogService": [
			{
				"name": "AuditLogService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\audit\\auditLogService.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"server": [
			{
				"name": "server",
				"path": "c:\\temp\\white-cross\\backend\\dist\\index-sequelize.d.ts",
				"isDefault": true
			}
		],
		"Hapi": [
			{
				"name": "Hapi",
				"module": "@hapi/hapi",
				"isDefault": true
			}
		],
		"API_ROUTES": [
			{
				"name": "API_ROUTES",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"USER_ROLES": [
			{
				"name": "USER_ROLES",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PERMISSIONS": [
			{
				"name": "PERMISSIONS",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"DB_CONSTRAINTS": [
			{
				"name": "DB_CONSTRAINTS",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PAGINATION": [
			{
				"name": "PAGINATION",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TOKEN_CONFIG": [
			{
				"name": "TOKEN_CONFIG",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SESSION_CONFIG": [
			{
				"name": "SESSION_CONFIG",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RATE_LIMIT": [
			{
				"name": "RATE_LIMIT",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FILE_UPLOAD": [
			{
				"name": "FILE_UPLOAD",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"MEDICATION_CONSTANTS": [
			{
				"name": "MEDICATION_CONSTANTS",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SUCCESS_MESSAGES": [
			{
				"name": "SUCCESS_MESSAGES",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CACHE_KEYS": [
			{
				"name": "CACHE_KEYS",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CACHE_TTL": [
			{
				"name": "CACHE_TTL",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ENVIRONMENT": [
			{
				"name": "ENVIRONMENT",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"CORS_CONFIG": [
			{
				"name": "CORS_CONFIG",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"LOG_LEVELS": [
			{
				"name": "LOG_LEVELS",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SWAGGER_CONFIG": [
			{
				"name": "SWAGGER_CONFIG",
				"path": "c:\\temp\\white-cross\\backend\\src\\constants\\index.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"swaggerOptions": [
			{
				"name": "swaggerOptions",
				"path": "c:\\temp\\white-cross\\backend\\src\\config\\swagger.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"extendedInfo": [
			{
				"name": "extendedInfo",
				"path": "c:\\temp\\white-cross\\backend\\src\\config\\swagger.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"ServerRegisterPluginObject": [
			{
				"name": "ServerRegisterPluginObject",
				"module": "@hapi/hapi",
				"isDefault": false
			}
		],
		"HapiSwagger": [
			{
				"name": "HapiSwagger",
				"module": "hapi-swagger",
				"isDefault": true,
				"asDefinition": "* as HapiSwagger"
			}
		],
		"FindOptions": [
			{
				"name": "FindOptions",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"Attributes": [
			{
				"name": "Attributes",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"QueryOptions": [
			{
				"name": "QueryOptions",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\types\\QueryTypes.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"QueryCriteria": [
			{
				"name": "QueryCriteria",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\types\\QueryTypes.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ComplexWhereClause": [
			{
				"name": "ComplexWhereClause",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\types\\QueryTypes.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"OrderByClause": [
			{
				"name": "OrderByClause",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\types\\QueryTypes.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"createPaginationMetadata": [
			{
				"name": "createPaginationMetadata",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\QueryTypes.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateSkip": [
			{
				"name": "calculateSkip",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\QueryTypes.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"QueryBuilder": [
			{
				"name": "QueryBuilder",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\QueryTypes.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Model": [
			{
				"name": "Model",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"ModelStatic": [
			{
				"name": "ModelStatic",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"WhereOptions": [
			{
				"name": "WhereOptions",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"CreationAttributes": [
			{
				"name": "CreationAttributes",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"ExecutionContext": [
			{
				"name": "ExecutionContext",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\types\\ExecutionContext.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"createExecutionContext": [
			{
				"name": "createExecutionContext",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\ExecutionContext.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createSystemExecutionContext": [
			{
				"name": "createSystemExecutionContext",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\ExecutionContext.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateExecutionContext": [
			{
				"name": "validateExecutionContext",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\ExecutionContext.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"IRepositoryFactory": [
			{
				"name": "IRepositoryFactory",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\RepositoryFactory.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"RepositoryFactory": [
			{
				"name": "RepositoryFactory",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\RepositoryFactory.d.ts",
				"type": "class",
				"isDefault": true
			},
			{
				"name": "RepositoryFactory",
				"module": "@/database/repositories",
				"isDefault": false
			}
		],
		"createRepositoryFactory": [
			{
				"name": "createRepositoryFactory",
				"module": "@/database/repositories",
				"isDefault": false
			},
			{
				"name": "createRepositoryFactory",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\RepositoryFactory.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"VaccineType": [
			{
				"name": "VaccineType",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"AdministrationSite": [
			{
				"name": "AdministrationSite",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"VaccineComplianceStatus": [
			{
				"name": "VaccineComplianceStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"FollowUpStatus": [
			{
				"name": "FollowUpStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ConsciousnessLevel": [
			{
				"name": "ConsciousnessLevel",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\types\\enums.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"SequelizeUnitOfWork": [
			{
				"name": "SequelizeUnitOfWork",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\uow\\SequelizeUnitOfWork.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"IUnitOfWork": [
			{
				"name": "IUnitOfWork",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\uow\\IUnitOfWork.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TransactionOptions": [
			{
				"name": "TransactionOptions",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\uow\\IUnitOfWork.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"TransactionIsolationLevel": [
			{
				"name": "TransactionIsolationLevel",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\uow\\IUnitOfWork.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"IUnitOfWorkFactory": [
			{
				"name": "IUnitOfWorkFactory",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\uow\\IUnitOfWork.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ICacheManager": [
			{
				"name": "ICacheManager",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\cache\\ICacheManager.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CacheStats": [
			{
				"name": "CacheStats",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\cache\\ICacheManager.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CacheConfig": [
			{
				"name": "CacheConfig",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\cache\\ICacheManager.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EvictionPolicy": [
			{
				"name": "EvictionPolicy",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\cache\\ICacheManager.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ICacheKeyBuilder": [
			{
				"name": "ICacheKeyBuilder",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\cache\\ICacheManager.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CacheKeyBuilder": [
			{
				"name": "CacheKeyBuilder",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\cache\\ICacheManager.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CacheTTL": [
			{
				"name": "CacheTTL",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\cache\\ICacheManager.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ENTITY_CACHE_TTL": [
			{
				"name": "ENTITY_CACHE_TTL",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\cache\\ICacheManager.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getCacheTTL": [
			{
				"name": "getCacheTTL",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\cache\\ICacheManager.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"AllergyRepository": [
			{
				"name": "AllergyRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\AllergyRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"RepositoryError": [
			{
				"name": "RepositoryError",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\base\\BaseRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"BaseRepository": [
			{
				"name": "BaseRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\base\\BaseRepository.ts",
				"type": "abstract class",
				"isDefault": false
			}
		],
		"CreateStudentDTO": [
			{
				"name": "CreateStudentDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IStudentRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateStudentDTO": [
			{
				"name": "UpdateStudentDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IStudentRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IStudentRepository": [
			{
				"name": "IStudentRepository",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IStudentRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IRepository": [
			{
				"name": "IRepository",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateHealthRecordDTO": [
			{
				"name": "CreateHealthRecordDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateHealthRecordDTO": [
			{
				"name": "UpdateHealthRecordDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SearchCriteria": [
			{
				"name": "SearchCriteria",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VitalSignsHistory": [
			{
				"name": "VitalSignsHistory",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IHealthRecordRepository": [
			{
				"name": "IHealthRecordRepository",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IHealthRecordRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AppointmentRepository": [
			{
				"name": "AppointmentRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\AppointmentRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CreateChronicConditionDTO": [
			{
				"name": "CreateChronicConditionDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IChronicConditionRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateChronicConditionDTO": [
			{
				"name": "UpdateChronicConditionDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IChronicConditionRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IChronicConditionRepository": [
			{
				"name": "IChronicConditionRepository",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IChronicConditionRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateAuditLogDTO": [
			{
				"name": "CreateAuditLogDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAuditLogRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateAuditLogDTO": [
			{
				"name": "UpdateAuditLogDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAuditLogRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IAuditLogRepository": [
			{
				"name": "IAuditLogRepository",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAuditLogRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CreateAllergyDTO": [
			{
				"name": "CreateAllergyDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAllergyRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UpdateAllergyDTO": [
			{
				"name": "UpdateAllergyDTO",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAllergyRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IAllergyRepository": [
			{
				"name": "IAllergyRepository",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\interfaces\\IAllergyRepository.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DataTypes": [
			{
				"name": "DataTypes",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"Optional": [
			{
				"name": "Optional",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"StudentAttributes": [
			{
				"name": "StudentAttributes",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\models\\core\\Student.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"VALID_NOTIFICATION_CHANNELS": [
			{
				"name": "VALID_NOTIFICATION_CHANNELS",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\core\\EmergencyContact.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"NotificationChannel": [
			{
				"name": "NotificationChannel",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\models\\core\\EmergencyContact.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Association": [
			{
				"name": "Association",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"VendorAttributes": [
			{
				"name": "VendorAttributes",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\models\\inventory\\Vendor.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"UserRepository": [
			{
				"name": "UserRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\UserRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"StudentRepository": [
			{
				"name": "StudentRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\StudentRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"setupAssociations": [
			{
				"name": "setupAssociations",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\index.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sequelize": [
			{
				"name": "sequelize",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\config\\sequelize.d.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"SchoolRepository": [
			{
				"name": "SchoolRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\SchoolRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MedicationRepository": [
			{
				"name": "MedicationRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\MedicationRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"DistrictRepository": [
			{
				"name": "DistrictRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\DistrictRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"ChronicConditionRepository": [
			{
				"name": "ChronicConditionRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\ChronicConditionRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AuditLogRepository": [
			{
				"name": "AuditLogRepository",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\repositories\\impl\\AuditLogRepository.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"getRedisClient": [
			{
				"name": "getRedisClient",
				"path": "c:\\temp\\white-cross\\backend\\src\\config\\redis.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isRedisConnected": [
			{
				"name": "isRedisConnected",
				"path": "c:\\temp\\white-cross\\backend\\src\\config\\redis.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getHealthSummaryCacheKey": [
			{
				"name": "getHealthSummaryCacheKey",
				"path": "c:\\temp\\white-cross\\backend\\src\\config\\redis.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getStudentRecordsCacheKey": [
			{
				"name": "getStudentRecordsCacheKey",
				"path": "c:\\temp\\white-cross\\backend\\src\\config\\redis.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"RedisClientType": [
			{
				"name": "RedisClientType",
				"module": "redis",
				"isDefault": false
			}
		],
		"MedicationReminderJob": [
			{
				"name": "MedicationReminderJob",
				"path": "c:\\temp\\white-cross\\backend\\dist\\jobs\\medicationReminderJob.d.ts",
				"type": "class",
				"isDefault": true
			}
		],
		"cron": [
			{
				"name": "cron",
				"module": "cron",
				"isDefault": true
			}
		],
		"InventoryMaintenanceJob": [
			{
				"name": "InventoryMaintenanceJob",
				"path": "c:\\temp\\white-cross\\backend\\dist\\jobs\\inventoryMaintenanceJob.d.ts",
				"type": "class",
				"isDefault": true
			}
		],
		"initializeJobs": [
			{
				"name": "initializeJobs",
				"path": "c:\\temp\\white-cross\\backend\\src\\jobs\\index.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"stopJobs": [
			{
				"name": "stopJobs",
				"path": "c:\\temp\\white-cross\\backend\\src\\jobs\\index.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getJobsHealth": [
			{
				"name": "getJobsHealth",
				"path": "c:\\temp\\white-cross\\backend\\src\\jobs\\index.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"SecurityHeadersConfig": [
			{
				"name": "SecurityHeadersConfig",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\securityHeaders.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"DEFAULT_SECURITY_CONFIG": [
			{
				"name": "DEFAULT_SECURITY_CONFIG",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\securityHeaders.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"securityHeadersMiddleware": [
			{
				"name": "securityHeadersMiddleware",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\securityHeaders.d.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"cspNonceMiddleware": [
			{
				"name": "cspNonceMiddleware",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\securityHeaders.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"createCORSConfig": [
			{
				"name": "createCORSConfig",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\securityHeaders.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"configureSecurity": [
			{
				"name": "configureSecurity",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\security.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"rateLimitingPlugin": [
			{
				"name": "rateLimitingPlugin",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\rateLimiting.d.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"cleanupInMemoryStore": [
			{
				"name": "cleanupInMemoryStore",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\rateLimiting.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"registerPerformanceMonitoring": [
			{
				"name": "registerPerformanceMonitoring",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\performanceMonitor.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"expressPerformanceMonitoring": [
			{
				"name": "expressPerformanceMonitoring",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\performanceMonitor.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getEndpointMetrics": [
			{
				"name": "getEndpointMetrics",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\performanceMonitor.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"clearMetrics": [
			{
				"name": "clearMetrics",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\performanceMonitor.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"notFound": [
			{
				"name": "notFound",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\notFound.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"errorHandler": [
			{
				"name": "errorHandler",
				"path": "c:\\temp\\white-cross\\backend\\src\\middleware\\errorHandler.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"EntityType": [
			{
				"name": "EntityType",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\auditLogging.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"auditLoggingMiddleware": [
			{
				"name": "auditLoggingMiddleware",
				"path": "c:\\temp\\white-cross\\backend\\dist\\middleware\\auditLogging.d.ts",
				"type": "const",
				"isDefault": true
			}
		],
		"AuditableModel": [
			{
				"name": "AuditableModel",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\models\\base\\AuditableModel.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"Sequelize": [
			{
				"name": "Sequelize",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"Options": [
			{
				"name": "Options",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"IAuditLogger": [
			{
				"name": "IAuditLogger",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\audit\\IAuditLogger.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"operations": [
			{
				"name": "operations",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\audit\\IAuditLogger.ts",
				"isDefault": false
			}
		],
		"PHI_ENTITY_TYPES": [
			{
				"name": "PHI_ENTITY_TYPES",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\audit\\IAuditLogger.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PHIEntityType": [
			{
				"name": "PHIEntityType",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\audit\\IAuditLogger.d.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"isPHIEntity": [
			{
				"name": "isPHIEntity",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\audit\\IAuditLogger.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"SENSITIVE_FIELDS": [
			{
				"name": "SENSITIVE_FIELDS",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\audit\\IAuditLogger.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"sanitizeSensitiveData": [
			{
				"name": "sanitizeSensitiveData",
				"path": "c:\\temp\\white-cross\\backend\\src\\database\\audit\\IAuditLogger.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"PrismaClient": [
			{
				"name": "PrismaClient",
				"module": "@prisma/client",
				"isDefault": false
			}
		],
		"medicationsData": [
			{
				"name": "medicationsData",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\medications.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"firstNames": [
			{
				"name": "firstNames",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"lastNames": [
			{
				"name": "lastNames",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"streetNames": [
			{
				"name": "streetNames",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"cities": [
			{
				"name": "cities",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"grades": [
			{
				"name": "grades",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"genders": [
			{
				"name": "genders",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"allergyData": [
			{
				"name": "allergyData",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"chronicConditionsData": [
			{
				"name": "chronicConditionsData",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"vaccineSchedule": [
			{
				"name": "vaccineSchedule",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"random": [
			{
				"name": "random",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"randomInt": [
			{
				"name": "randomInt",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"randomDate": [
			{
				"name": "randomDate",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"randomBool": [
			{
				"name": "randomBool",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generatePhoneNumber": [
			{
				"name": "generatePhoneNumber",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generateEmail": [
			{
				"name": "generateEmail",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generateAddress": [
			{
				"name": "generateAddress",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"getGradeForAge": [
			{
				"name": "getGradeForAge",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generateBMI": [
			{
				"name": "generateBMI",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generateRealisticVitals": [
			{
				"name": "generateRealisticVitals",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"generateGrowthMeasurement": [
			{
				"name": "generateGrowthMeasurement",
				"path": "c:\\temp\\white-cross\\.migration-backup\\prisma\\seed-data\\generators.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"exec": [
			{
				"name": "exec",
				"module": "child_process",
				"isDefault": false
			}
		],
		"promisify": [
			{
				"name": "promisify",
				"module": "util",
				"isDefault": false
			}
		],
		"readline": [
			{
				"name": "readline",
				"module": "readline",
				"isDefault": true,
				"asDefinition": "* as readline"
			}
		],
		"QueueRecord": [
			{
				"name": "QueueRecord",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\resilience\\MedicationQueue.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ErrorRecord": [
			{
				"name": "ErrorRecord",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\resilience\\MedicationQueue.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"QueueStorage": [
			{
				"name": "QueueStorage",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\resilience\\MedicationQueue.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"IndexedDBStorage": [
			{
				"name": "IndexedDBStorage",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\resilience\\MedicationQueue.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MedicationQueue": [
			{
				"name": "MedicationQueue",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\resilience\\MedicationQueue.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"MedicationSyncService": [
			{
				"name": "MedicationSyncService",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\resilience\\MedicationQueue.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CircuitState": [
			{
				"name": "CircuitState",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\resilience\\CircuitBreaker.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"ResilienceLevel": [
			{
				"name": "ResilienceLevel",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\resilience\\CircuitBreaker.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"CircuitBreakerConfig": [
			{
				"name": "CircuitBreakerConfig",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\resilience\\CircuitBreaker.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CircuitBreakerStats": [
			{
				"name": "CircuitBreakerStats",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\resilience\\CircuitBreaker.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CircuitBreaker": [
			{
				"name": "CircuitBreaker",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\resilience\\CircuitBreaker.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CircuitBreakerFactory": [
			{
				"name": "CircuitBreakerFactory",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\resilience\\CircuitBreaker.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"CircuitBreakerOpenError": [
			{
				"name": "CircuitBreakerOpenError",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\resilience\\CircuitBreaker.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"TimeoutError": [
			{
				"name": "TimeoutError",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\resilience\\CircuitBreaker.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"AgeCategory": [
			{
				"name": "AgeCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "enum",
				"isDefault": false
			}
		],
		"validateICD10Code": [
			{
				"name": "validateICD10Code",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateCVXCode": [
			{
				"name": "validateCVXCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateNDCCode": [
			{
				"name": "validateNDCCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateNPI": [
			{
				"name": "validateNPI",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateTemperature": [
			{
				"name": "validateTemperature",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateBloodPressure": [
			{
				"name": "validateBloodPressure",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateHeartRate": [
			{
				"name": "validateHeartRate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateRespiratoryRate": [
			{
				"name": "validateRespiratoryRate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateOxygenSaturation": [
			{
				"name": "validateOxygenSaturation",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateBMI": [
			{
				"name": "validateBMI",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateHeight": [
			{
				"name": "validateHeight",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateWeight": [
			{
				"name": "validateWeight",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDiagnosisDate": [
			{
				"name": "validateDiagnosisDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateVaccinationDates": [
			{
				"name": "validateVaccinationDates",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateAllergyReactions": [
			{
				"name": "validateAllergyReactions",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateHealthRecordData": [
			{
				"name": "validateHealthRecordData",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecordValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"ALLOWED_MIME_TYPES": [
			{
				"name": "ALLOWED_MIME_TYPES",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"FILE_EXTENSION_MIME_MAP": [
			{
				"name": "FILE_EXTENSION_MIME_MAP",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"RETENTION_YEARS": [
			{
				"name": "RETENTION_YEARS",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"SIGNATURE_REQUIRED_CATEGORIES": [
			{
				"name": "SIGNATURE_REQUIRED_CATEGORIES",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateFileUpload": [
			{
				"name": "validateFileUpload",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateVersionCreation": [
			{
				"name": "validateVersionCreation",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"throwIfValidationErrors": [
			{
				"name": "throwIfValidationErrors",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\documentValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"lookupCVXCode": [
			{
				"name": "lookupCVXCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"searchVaccineByName": [
			{
				"name": "searchVaccineByName",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAllActiveVaccines": [
			{
				"name": "getAllActiveVaccines",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"lookupVaccineByNDC": [
			{
				"name": "lookupVaccineByNDC",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getManufacturerByMVX": [
			{
				"name": "getManufacturerByMVX",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"searchICDCodes": [
			{
				"name": "searchICDCodes",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getICDCodesByCategory": [
			{
				"name": "getICDCodesByCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getExemptionRules": [
			{
				"name": "getExemptionRules",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateZScore": [
			{
				"name": "calculateZScore",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"zScoreToPercentile": [
			{
				"name": "zScoreToPercentile",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\integrations.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"helpers": [
			{
				"name": "helpers",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\index.ts",
				"isDefault": true
			}
		],
		"convertUnits": [
			{
				"name": "convertUnits",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"convertMeasurements": [
			{
				"name": "convertMeasurements",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"roundToDecimal": [
			{
				"name": "roundToDecimal",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAgeInYears": [
			{
				"name": "getAgeInYears",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAgeInMonths": [
			{
				"name": "getAgeInMonths",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatAge": [
			{
				"name": "formatAge",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isPediatric": [
			{
				"name": "isPediatric",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"getAgeCategory": [
			{
				"name": "getAgeCategory",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatHealthRecord": [
			{
				"name": "formatHealthRecord",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatDateTime": [
			{
				"name": "formatDateTime",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sanitizePHI": [
			{
				"name": "sanitizePHI",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"maskSensitiveData": [
			{
				"name": "maskSensitiveData",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"containsPHI": [
			{
				"name": "containsPHI",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"generateHealthRecordId": [
			{
				"name": "generateHealthRecordId",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"generateMedicalRecordNumber": [
			{
				"name": "generateMedicalRecordNumber",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"generateBatchId": [
			{
				"name": "generateBatchId",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"parseMedicalCodes": [
			{
				"name": "parseMedicalCodes",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatICD10Code": [
			{
				"name": "formatICD10Code",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"formatNDCCode": [
			{
				"name": "formatNDCCode",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isValidPastDate": [
			{
				"name": "isValidPastDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isValidFutureDate": [
			{
				"name": "isValidFutureDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isValidDateRange": [
			{
				"name": "isValidDateRange",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"isRealisticValue": [
			{
				"name": "isRealisticValue",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"titleCase": [
			{
				"name": "titleCase",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"normalizeText": [
			{
				"name": "normalizeText",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"removeDuplicates": [
			{
				"name": "removeDuplicates",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"sortByDate": [
			{
				"name": "sortByDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\helpers.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"generateAllergyAlert": [
			{
				"name": "generateAllergyAlert",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"determineNextDueDate": [
			{
				"name": "determineNextDueDate",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateConditionRiskScore": [
			{
				"name": "calculateConditionRiskScore",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"determineReviewFrequency": [
			{
				"name": "determineReviewFrequency",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"checkAccommodationRequirements": [
			{
				"name": "checkAccommodationRequirements",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"generateActionPlan": [
			{
				"name": "generateActionPlan",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculatePercentiles": [
			{
				"name": "calculatePercentiles",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"identifyGrowthConcerns": [
			{
				"name": "identifyGrowthConcerns",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"analyzeTrends": [
			{
				"name": "analyzeTrends",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateVitalRanges": [
			{
				"name": "validateVitalRanges",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"flagAbnormalVitals": [
			{
				"name": "flagAbnormalVitals",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateMeanArterialPressure": [
			{
				"name": "calculateMeanArterialPressure",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"assessVitalTrends": [
			{
				"name": "assessVitalTrends",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"determineReferralUrgency": [
			{
				"name": "determineReferralUrgency",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"scheduleFollowUp": [
			{
				"name": "scheduleFollowUp",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\healthRecords\\businessLogic.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"TransactionResult": [
			{
				"name": "TransactionResult",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\database\\transactionWrapper.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SavepointManager": [
			{
				"name": "SavepointManager",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\database\\transactionWrapper.ts",
				"type": "class",
				"isDefault": false
			}
		],
		"TransactionContext": [
			{
				"name": "TransactionContext",
				"path": "c:\\temp\\white-cross\\backend\\dist\\utils\\database\\transactionWrapper.d.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginatedAllergyResults": [
			{
				"name": "PaginatedAllergyResults",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\types.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AllergyService": [
			{
				"name": "AllergyService",
				"path": "c:\\temp\\white-cross\\backend\\dist\\services\\allergyService.d.ts",
				"type": "class",
				"isDefault": true
			}
		],
		"logAllergyCreation": [
			{
				"name": "logAllergyCreation",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logAllergyRead": [
			{
				"name": "logAllergyRead",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logStudentAllergiesRead": [
			{
				"name": "logStudentAllergiesRead",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logAllergySearch": [
			{
				"name": "logAllergySearch",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logAllergyUpdate": [
			{
				"name": "logAllergyUpdate",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logAllergyDeactivation": [
			{
				"name": "logAllergyDeactivation",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logAllergyDeletion": [
			{
				"name": "logAllergyDeletion",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logCriticalAllergiesRead": [
			{
				"name": "logCriticalAllergiesRead",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"logBulkAllergiesCreation": [
			{
				"name": "logBulkAllergiesCreation",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\allergy\\auditLogging.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"EMAIL_REGEX": [
			{
				"name": "EMAIL_REGEX",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"PHONE_NUMBER_REGEX": [
			{
				"name": "PHONE_NUMBER_REGEX",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"TEMPLATE_VARIABLE_REGEX": [
			{
				"name": "TEMPLATE_VARIABLE_REGEX",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"URL_REGEX": [
			{
				"name": "URL_REGEX",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "const",
				"isDefault": false
			}
		],
		"validateSmsLength": [
			{
				"name": "validateSmsLength",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateMessageContent": [
			{
				"name": "validateMessageContent",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateScheduledTime": [
			{
				"name": "validateScheduledTime",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateEmergencyAlert": [
			{
				"name": "validateEmergencyAlert",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\communicationValidation.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateDateInput": [
			{
				"name": "validateDateInput",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateIntegerInput": [
			{
				"name": "validateIntegerInput",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateUuidInput": [
			{
				"name": "validateUuidInput",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateEnumInput": [
			{
				"name": "validateEnumInput",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"buildSafeOrderBy": [
			{
				"name": "buildSafeOrderBy",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"buildSafeDateRange": [
			{
				"name": "buildSafeDateRange",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"buildSafeInClause": [
			{
				"name": "buildSafeInClause",
				"path": "c:\\temp\\white-cross\\backend\\src\\utils\\security\\sqlSanitizer.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"declare": [
			{
				"name": "declare",
				"path": "c:\\temp\\white-cross\\backend\\dist\\database\\repositories\\impl\\AllergyRepository.d.ts",
				"isDefault": false
			}
		],
		"_default": [
			{
				"name": "_default",
				"path": "c:\\temp\\white-cross\\backend\\dist\\jobs\\index.d.ts",
				"isDefault": true
			}
		],
		"BaseError": [
			{
				"name": "BaseError",
				"module": "sequelize",
				"isDefault": false
			}
		],
		"Prisma": [
			{
				"name": "Prisma",
				"module": "@prisma/client",
				"isDefault": false
			}
		],
		"ID": [
			{
				"name": "ID",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"Timestamps": [
			{
				"name": "Timestamps",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ServiceResponse": [
			{
				"name": "ServiceResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SearchQuery": [
			{
				"name": "SearchQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EntityMetadata": [
			{
				"name": "EntityMetadata",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"FileAttachment": [
			{
				"name": "FileAttachment",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Address": [
			{
				"name": "Address",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PhoneNumber": [
			{
				"name": "PhoneNumber",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Email": [
			{
				"name": "Email",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ContactInfo": [
			{
				"name": "ContactInfo",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"AuditEntry": [
			{
				"name": "AuditEntry",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"KeyValuePair": [
			{
				"name": "KeyValuePair",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ConfigSetting": [
			{
				"name": "ConfigSetting",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"EntityStatus": [
			{
				"name": "EntityStatus",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BaseFilter": [
			{
				"name": "BaseFilter",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"ExportImportResult": [
			{
				"name": "ExportImportResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"Severity": [
			{
				"name": "Severity",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\common.ts",
				"type": "type",
				"isDefault": false
			}
		],
		"PaginationMeta": [
			{
				"name": "PaginationMeta",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"SortOptions": [
			{
				"name": "SortOptions",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginationWithSort": [
			{
				"name": "PaginationWithSort",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CursorPagination": [
			{
				"name": "CursorPagination",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"CursorPaginatedResponse": [
			{
				"name": "CursorPaginatedResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"PaginationConstraints": [
			{
				"name": "PaginationConstraints",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\types\\pagination.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"validateRequiredFields": [
			{
				"name": "validateRequiredFields",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateStringLength": [
			{
				"name": "validateStringLength",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateEnum": [
			{
				"name": "validateEnum",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateArray": [
			{
				"name": "validateArray",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"combineValidationResults": [
			{
				"name": "combineValidationResults",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validateObject": [
			{
				"name": "validateObject",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\validation\\commonValidators.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateOffset": [
			{
				"name": "calculateOffset",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"normalizePaginationParams": [
			{
				"name": "normalizePaginationParams",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createPaginationMeta": [
			{
				"name": "createPaginationMeta",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"createPaginatedResponse": [
			{
				"name": "createPaginatedResponse",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"processPaginatedResult": [
			{
				"name": "processPaginatedResult",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"buildPaginationQuery": [
			{
				"name": "buildPaginationQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"validatePaginationParams": [
			{
				"name": "validatePaginationParams",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"calculateCursorPagination": [
			{
				"name": "calculateCursorPagination",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"extractPaginationFromQuery": [
			{
				"name": "extractPaginationFromQuery",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\database\\pagination.ts",
				"type": "function",
				"isDefault": false
			}
		],
		"BaseServiceConfig": [
			{
				"name": "BaseServiceConfig",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\base\\BaseService.ts",
				"type": "interface",
				"isDefault": false
			}
		],
		"BaseService": [
			{
				"name": "BaseService",
				"path": "c:\\temp\\white-cross\\backend\\src\\services\\shared\\base\\BaseService.ts",
				"type": "abstract class",
				"isDefault": false
			}
		]
	}
}