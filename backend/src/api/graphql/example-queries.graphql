# Example GraphQL Queries and Mutations for White-Cross Platform
# Use these in Apollo Sandbox, GraphQL Playground, or your GraphQL client

# ============================================================================
# CONTACT QUERIES
# ============================================================================

# Query 1: Get All Contacts with Pagination
query GetAllContacts {
  contacts(page: 1, limit: 20, orderBy: "lastName", orderDirection: "ASC") {
    contacts {
      id
      firstName
      lastName
      fullName
      displayName
      email
      phone
      type
      organization
      title
      isActive
      createdAt
    }
    pagination {
      page
      limit
      total
      totalPages
    }
  }
}

# Query 2: Get Contacts with Filters
query GetGuardianContacts {
  contacts(
    page: 1
    limit: 10
    filters: { type: guardian, isActive: true }
  ) {
    contacts {
      id
      fullName
      email
      phone
      relationTo
      relationshipType
    }
    pagination {
      total
    }
  }
}

# Query 3: Search Contacts
query SearchContactsByName {
  searchContacts(query: "John", limit: 10) {
    id
    fullName
    email
    phone
    type
    organization
  }
}

# Query 4: Get Single Contact
query GetContactById($id: ID!) {
  contact(id: $id) {
    id
    firstName
    lastName
    fullName
    email
    phone
    type
    organization
    title
    address
    city
    state
    zip
    relationTo
    relationshipType
    customFields
    isActive
    notes
    createdAt
    updatedAt
  }
}

# Query 5: Get Contacts by Relation (e.g., all guardians for a student)
query GetContactsByRelation($studentId: ID!) {
  contactsByRelation(relationTo: $studentId, type: guardian) {
    id
    fullName
    email
    phone
    relationshipType
  }
}

# Query 6: Get Contact Statistics
query GetContactStatistics {
  contactStats {
    total
    byType
  }
}

# ============================================================================
# CONTACT MUTATIONS
# ============================================================================

# Mutation 1: Create Guardian Contact
mutation CreateGuardianContact {
  createContact(
    input: {
      firstName: "Jane"
      lastName: "Smith"
      email: "jane.smith@example.com"
      phone: "+1-555-1234"
      type: guardian
      address: "123 Main St"
      city: "Springfield"
      state: "IL"
      zip: "62701"
      relationTo: "student-uuid-here"
      relationshipType: "mother"
      notes: "Emergency contact, prefers email"
    }
  ) {
    id
    fullName
    email
    phone
    type
    createdAt
  }
}

# Mutation 2: Create Staff Contact
mutation CreateStaffContact {
  createContact(
    input: {
      firstName: "Dr. Robert"
      lastName: "Johnson"
      email: "r.johnson@school.edu"
      phone: "+1-555-5678"
      type: staff
      organization: "Springfield Elementary"
      title: "School Nurse"
    }
  ) {
    id
    fullName
    organization
    title
  }
}

# Mutation 3: Create Vendor Contact
mutation CreateVendorContact {
  createContact(
    input: {
      firstName: "Michael"
      lastName: "Brown"
      email: "michael@medisupply.com"
      phone: "+1-555-9876"
      type: vendor
      organization: "MediSupply Inc."
      title: "Account Manager"
      customFields: { accountNumber: "VEN-12345", preferredDeliveryTime: "morning" }
    }
  ) {
    id
    fullName
    organization
    customFields
  }
}

# Mutation 4: Update Contact
mutation UpdateContact($id: ID!) {
  updateContact(
    id: $id
    input: {
      email: "newemail@example.com"
      phone: "+1-555-0000"
      address: "456 Oak Avenue"
      notes: "Updated contact information"
    }
  ) {
    id
    fullName
    email
    phone
    address
    updatedAt
  }
}

# Mutation 5: Deactivate Contact
mutation DeactivateContact($id: ID!) {
  deactivateContact(id: $id) {
    id
    fullName
    isActive
  }
}

# Mutation 6: Reactivate Contact
mutation ReactivateContact($id: ID!) {
  reactivateContact(id: $id) {
    id
    fullName
    isActive
  }
}

# Mutation 7: Delete Contact
mutation DeleteContact($id: ID!) {
  deleteContact(id: $id) {
    success
    message
  }
}

# ============================================================================
# STUDENT QUERIES
# ============================================================================

# Query 7: Get All Students
query GetAllStudents {
  students(page: 1, limit: 20) {
    students {
      id
      studentNumber
      firstName
      lastName
      fullName
      dateOfBirth
      grade
      gender
      isActive
      enrollmentDate
    }
    pagination {
      page
      limit
      total
      totalPages
    }
  }
}

# Query 8: Get Active Students in Specific Grade
query GetActiveStudentsByGrade {
  students(
    page: 1
    limit: 50
    filters: { isActive: true, grade: "5" }
  ) {
    students {
      id
      studentNumber
      fullName
      grade
    }
    pagination {
      total
    }
  }
}

# Query 9: Get Student by ID
query GetStudentById($id: ID!) {
  student(id: $id) {
    id
    studentNumber
    firstName
    lastName
    fullName
    dateOfBirth
    grade
    gender
    photo
    medicalRecordNum
    isActive
    enrollmentDate
    nurseId
    createdAt
    updatedAt
  }
}

# Query 10: Search Students (use regular search query)
query SearchStudentsByName {
  students(filters: { search: "Smith" }) {
    students {
      id
      studentNumber
      fullName
      grade
    }
  }
}

# ============================================================================
# COMBINED QUERIES (Student + Contacts)
# ============================================================================

# Query 11: Get Student with Their Contacts
query GetStudentWithContacts($studentId: ID!) {
  student(id: $studentId) {
    id
    studentNumber
    fullName
    grade
    dateOfBirth
  }
  contactsByRelation(relationTo: $studentId) {
    id
    fullName
    email
    phone
    type
    relationshipType
  }
}

# ============================================================================
# VARIABLES EXAMPLES
# ============================================================================

# For GetContactById:
# {
#   "id": "550e8400-e29b-41d4-a716-446655440000"
# }

# For UpdateContact:
# {
#   "id": "550e8400-e29b-41d4-a716-446655440000"
# }

# For GetContactsByRelation and GetStudentWithContacts:
# {
#   "studentId": "550e8400-e29b-41d4-a716-446655440000"
# }

# ============================================================================
# INTROSPECTION QUERIES
# ============================================================================

# Get all available types
query GetAllTypes {
  __schema {
    types {
      name
      kind
      description
    }
  }
}

# Get Contact type details
query GetContactTypeInfo {
  __type(name: "Contact") {
    name
    kind
    fields {
      name
      type {
        name
        kind
      }
      description
    }
  }
}

# Get all queries
query GetAllQueries {
  __schema {
    queryType {
      fields {
        name
        description
        args {
          name
          type {
            name
          }
        }
      }
    }
  }
}

# Get all mutations
query GetAllMutations {
  __schema {
    mutationType {
      fields {
        name
        description
      }
    }
  }
}
