{
  "permissions": {
    "allow": [
      "Bash(npm run start:dev:*)",
      "Bash(npm run build:*)",
      "Bash(mkdir:*)",
      "Bash(timeout 120 npm run build:*)",
      "Bash(node fix-imports.js:*)",
      "Bash(node fix-imports-v2.js:*)",
      "Bash(node fix-inject.js:*)",
      "Bash(node fix-all-repos.js:*)",
      "Bash(npm run start:*)",
      "Bash(node add-inject-import.js:*)",
      "Bash(npm --version:*)",
      "Bash(node --version:*)",
      "Bash(cat:*)",
      "Bash(if [ -d \"node_modules\" ])",
      "Bash(then echo \"node_modules exists\")",
      "Bash(else echo \"node_modules does not exist\")",
      "Bash(fi)",
      "Bash(timeout 120 npm run start:dev)",
      "Bash(tee:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(node fix-import-types.js:*)",
      "Bash(node fix-duplicate-dtos.js:*)",
      "Bash(node fix-dto-imports.js:*)",
      "Bash(node:*)",
      "Bash(taskkill:*)",
      "Bash(curl:*)",
      "Bash(ConvertFrom-Json)",
      "Bash(ConvertTo-Json -Depth 10)",
      "Bash(powershell -Command \"Invoke-RestMethod -Uri ''http://localhost:3000/api-json'' -Method Get | ConvertTo-Json -Depth 10\")",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(powershell -Command \"Get-Content package.json | Select-String -Pattern ''start:dev''\")",
      "Bash(powershell -Command \"$response = Invoke-RestMethod -Uri ''http://localhost:3001/api-json'' -Method Get; $response | ConvertTo-Json -Depth 3\")",
      "Bash(powershell -Command \"Invoke-RestMethod -Uri http://localhost:3001/api-json\")",
      "Bash(powershell -Command \"Invoke-RestMethod -Uri ''http://localhost:3001/api/docs-json'' -Method Get\")",
      "Bash(powershell -Command \"$response = Invoke-RestMethod -Uri ''http://localhost:3001/health'' -Method Get; Write-Output $response\")",
      "Bash(powershell -Command \"$response = Invoke-RestMethod -Uri ''http://localhost:3001/health/ready'' -Method Get; Write-Output $response\")",
      "Bash(powershell -Command \"$response = Invoke-RestMethod -Uri ''http://localhost:3001/health/live'' -Method Get; Write-Output $response\")",
      "Bash(powershell -Command \"$response = Invoke-RestMethod -Uri ''http://localhost:3001/students'' -Method Get; Write-Output $response\")",
      "Bash(powershell -Command \"Invoke-RestMethod -Uri ''http://localhost:3001/students'' -Method Get\")",
      "Bash(powershell -Command \"Invoke-RestMethod -Uri ''http://localhost:3001/appointments'' -Method Get\")",
      "Bash(powershell -Command \"$spec = Invoke-RestMethod -Uri ''http://localhost:3001/api-json'' -Method Get; $spec.paths.PSObject.Properties.Name | Sort-Object\")",
      "Bash(powershell -Command:*)",
      "Read(//f/temp/white-cross/frontend/**)",
      "Bash(python:*)",
      "Bash(for file in src/actions/admin.actions.ts src/actions/compliance.actions.ts src/actions/health-records.actions.ts src/actions/settings.actions.ts src/app/api/health/route.ts)",
      "Bash(do sed -i \"s|http://localhost:3001/api/v1|http://localhost:3001|g\" \"$file\")",
      "Bash(done)",
      "Read(//f/temp/white-cross/**)",
      "Bash(test:*)",
      "Bash(npx next build:*)",
      "WebFetch(domain:sequelize.org)"
    ],
    "deny": [],
    "ask": []
  }
}
